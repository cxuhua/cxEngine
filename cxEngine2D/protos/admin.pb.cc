// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ttmall {
class ListAdminUserReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListAdminUserReq> {
} _ListAdminUserReq_default_instance_;
class ListAdminUserRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListAdminUserRep> {
} _ListAdminUserRep_default_instance_;
class ListAdminUserAddressReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListAdminUserAddressReq> {
} _ListAdminUserAddressReq_default_instance_;
class ListAdminUserAddressRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListAdminUserAddressRep> {
} _ListAdminUserAddressRep_default_instance_;
class UpdateAdminUserReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateAdminUserReq> {
} _UpdateAdminUserReq_default_instance_;
class UpdateAdminUserRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateAdminUserRep> {
} _UpdateAdminUserRep_default_instance_;
class UpsertAdminUserAddressReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpsertAdminUserAddressReq> {
} _UpsertAdminUserAddressReq_default_instance_;
class UpsertAdminUserAddressRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpsertAdminUserAddressRep> {
} _UpsertAdminUserAddressRep_default_instance_;
class UploadAdminUserImageReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UploadAdminUserImageReq> {
} _UploadAdminUserImageReq_default_instance_;
class UploadAdminUserImageRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UploadAdminUserImageRep> {
} _UploadAdminUserImageRep_default_instance_;
class DeleteAdminUserImageReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteAdminUserImageReq> {
} _DeleteAdminUserImageReq_default_instance_;
class DeleteAdminUserImageRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteAdminUserImageRep> {
} _DeleteAdminUserImageRep_default_instance_;
class AdminInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdminInfo> {
} _AdminInfo_default_instance_;
class AdminLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdminLoginReq> {
} _AdminLoginReq_default_instance_;
class AdminLoginRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdminLoginRep> {
} _AdminLoginRep_default_instance_;
class GetAdminInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAdminInfoReq> {
} _GetAdminInfoReq_default_instance_;
class GetAdminInfoRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAdminInfoRep> {
} _GetAdminInfoRep_default_instance_;
class DeleteAdminUserAddressReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteAdminUserAddressReq> {
} _DeleteAdminUserAddressReq_default_instance_;
class DeleteAdminUserAddressRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteAdminUserAddressRep> {
} _DeleteAdminUserAddressRep_default_instance_;
class RegisterAdminUserReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterAdminUserReq> {
} _RegisterAdminUserReq_default_instance_;
class RegisterAdminUserRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterAdminUserRep> {
} _RegisterAdminUserRep_default_instance_;
class SetAdminUserDefaultAddressReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetAdminUserDefaultAddressReq> {
} _SetAdminUserDefaultAddressReq_default_instance_;
class SetAdminUserDefaultAddressRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetAdminUserDefaultAddressRep> {
} _SetAdminUserDefaultAddressRep_default_instance_;

namespace protobuf_admin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[23];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserReq, skip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserReq, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserReq, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserReq, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserAddressReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserAddressReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserAddressRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAdminUserAddressRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, referee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, deliver_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, mark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserReq, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAdminUserRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, coord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, default__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressReq, regions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpsertAdminUserAddressRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadAdminUserImageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadAdminUserImageReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadAdminUserImageReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadAdminUserImageReq, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadAdminUserImageRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadAdminUserImageRep, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadAdminUserImageRep, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserImageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserImageReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserImageReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserImageReq, image_md5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserImageRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserImageRep, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserImageRep, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminInfo, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminInfo, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminInfo, regions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminLoginReq, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminLoginReq, passwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminLoginReq, platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminLoginRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminLoginRep, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminLoginRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdminInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdminInfoReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdminInfoRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAdminInfoRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserAddressReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserAddressReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserAddressReq, addr_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserAddressRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteAdminUserAddressRep, addr_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, auth_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, auth_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, pass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, referee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, deliver_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, mark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserReq, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterAdminUserRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAdminUserDefaultAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAdminUserDefaultAddressReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAdminUserDefaultAddressReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAdminUserDefaultAddressReq, addr_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAdminUserDefaultAddressRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAdminUserDefaultAddressRep, addr_id_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ListAdminUserReq)},
  { 10, -1, sizeof(ListAdminUserRep)},
  { 16, -1, sizeof(ListAdminUserAddressReq)},
  { 23, -1, sizeof(ListAdminUserAddressRep)},
  { 29, -1, sizeof(UpdateAdminUserReq)},
  { 44, -1, sizeof(UpdateAdminUserRep)},
  { 50, -1, sizeof(UpsertAdminUserAddressReq)},
  { 68, -1, sizeof(UpsertAdminUserAddressRep)},
  { 74, -1, sizeof(UploadAdminUserImageReq)},
  { 82, -1, sizeof(UploadAdminUserImageRep)},
  { 89, -1, sizeof(DeleteAdminUserImageReq)},
  { 97, -1, sizeof(DeleteAdminUserImageRep)},
  { 104, -1, sizeof(AdminInfo)},
  { 114, -1, sizeof(AdminLoginReq)},
  { 122, -1, sizeof(AdminLoginRep)},
  { 129, -1, sizeof(GetAdminInfoReq)},
  { 135, -1, sizeof(GetAdminInfoRep)},
  { 141, -1, sizeof(DeleteAdminUserAddressReq)},
  { 149, -1, sizeof(DeleteAdminUserAddressRep)},
  { 155, -1, sizeof(RegisterAdminUserReq)},
  { 174, -1, sizeof(RegisterAdminUserRep)},
  { 180, -1, sizeof(SetAdminUserDefaultAddressReq)},
  { 188, -1, sizeof(SetAdminUserDefaultAddressRep)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListAdminUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListAdminUserRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListAdminUserAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListAdminUserAddressRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateAdminUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateAdminUserRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpsertAdminUserAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpsertAdminUserAddressRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UploadAdminUserImageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UploadAdminUserImageRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteAdminUserImageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteAdminUserImageRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdminInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdminLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdminLoginRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAdminInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAdminInfoRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteAdminUserAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteAdminUserAddressRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterAdminUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterAdminUserRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetAdminUserDefaultAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetAdminUserDefaultAddressRep_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "admin.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 23);
}

}  // namespace

void TableStruct::Shutdown() {
  _ListAdminUserReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ListAdminUserRep_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ListAdminUserAddressReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ListAdminUserAddressRep_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _UpdateAdminUserReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _UpdateAdminUserRep_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _UpsertAdminUserAddressReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _UpsertAdminUserAddressRep_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _UploadAdminUserImageReq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _UploadAdminUserImageRep_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _DeleteAdminUserImageReq_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _DeleteAdminUserImageRep_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _AdminInfo_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _AdminLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _AdminLoginRep_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _GetAdminInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _GetAdminInfoRep_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _DeleteAdminUserAddressReq_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _DeleteAdminUserAddressRep_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _RegisterAdminUserReq_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _RegisterAdminUserRep_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _SetAdminUserDefaultAddressReq_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _SetAdminUserDefaultAddressRep_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ttmall::protobuf_public_2eproto::InitDefaults();
  _ListAdminUserReq_default_instance_.DefaultConstruct();
  _ListAdminUserRep_default_instance_.DefaultConstruct();
  _ListAdminUserAddressReq_default_instance_.DefaultConstruct();
  _ListAdminUserAddressRep_default_instance_.DefaultConstruct();
  _UpdateAdminUserReq_default_instance_.DefaultConstruct();
  _UpdateAdminUserRep_default_instance_.DefaultConstruct();
  _UpsertAdminUserAddressReq_default_instance_.DefaultConstruct();
  _UpsertAdminUserAddressRep_default_instance_.DefaultConstruct();
  _UploadAdminUserImageReq_default_instance_.DefaultConstruct();
  _UploadAdminUserImageRep_default_instance_.DefaultConstruct();
  _DeleteAdminUserImageReq_default_instance_.DefaultConstruct();
  _DeleteAdminUserImageRep_default_instance_.DefaultConstruct();
  _AdminInfo_default_instance_.DefaultConstruct();
  _AdminLoginReq_default_instance_.DefaultConstruct();
  _AdminLoginRep_default_instance_.DefaultConstruct();
  _GetAdminInfoReq_default_instance_.DefaultConstruct();
  _GetAdminInfoRep_default_instance_.DefaultConstruct();
  _DeleteAdminUserAddressReq_default_instance_.DefaultConstruct();
  _DeleteAdminUserAddressRep_default_instance_.DefaultConstruct();
  _RegisterAdminUserReq_default_instance_.DefaultConstruct();
  _RegisterAdminUserRep_default_instance_.DefaultConstruct();
  _SetAdminUserDefaultAddressReq_default_instance_.DefaultConstruct();
  _SetAdminUserDefaultAddressRep_default_instance_.DefaultConstruct();
  _UpdateAdminUserRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::UserInfo*>(
      ::ttmall::UserInfo::internal_default_instance());
  _UpsertAdminUserAddressReq_default_instance_.get_mutable()->coord_ = const_cast< ::ttmall::CoordInfo*>(
      ::ttmall::CoordInfo::internal_default_instance());
  _UpsertAdminUserAddressRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::AddressInfo*>(
      ::ttmall::AddressInfo::internal_default_instance());
  _UploadAdminUserImageRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::ImageInfo*>(
      ::ttmall::ImageInfo::internal_default_instance());
  _DeleteAdminUserImageRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::ImageInfo*>(
      ::ttmall::ImageInfo::internal_default_instance());
  _AdminLoginRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::AdminInfo*>(
      ::ttmall::AdminInfo::internal_default_instance());
  _GetAdminInfoRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::AdminInfo*>(
      ::ttmall::AdminInfo::internal_default_instance());
  _RegisterAdminUserReq_default_instance_.get_mutable()->address_ = const_cast< ::ttmall::AddressInfo*>(
      ::ttmall::AddressInfo::internal_default_instance());
  _RegisterAdminUserRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::UserInfo*>(
      ::ttmall::UserInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013admin.proto\022\006ttmall\032\014public.proto\"Y\n\020L"
      "istAdminUserReq\022\r\n\005token\030\001 \001(\t\022\014\n\004skip\030\002"
      " \001(\005\022\r\n\005limit\030\003 \001(\005\022\013\n\003key\030\004 \001(\t\022\014\n\004type"
      "\030\005 \001(\005\"3\n\020ListAdminUserRep\022\037\n\005items\030\001 \003("
      "\0132\020.ttmall.UserInfo\"4\n\027ListAdminUserAddr"
      "essReq\022\r\n\005token\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\"=\n\027Lis"
      "tAdminUserAddressRep\022\"\n\005items\030\001 \003(\0132\023.tt"
      "mall.AddressInfo\"\255\001\n\022UpdateAdminUserReq\022"
      "\r\n\005token\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022\014\n\004name\030\003 \001(\t"
      "\022\r\n\005owner\030\004 \001(\t\022\r\n\005types\030\005 \003(\t\022\017\n\007refere"
      "e\030\006 \001(\t\022\024\n\014deliver_time\030\007 \001(\t\022\014\n\004mark\030\010 "
      "\001(\t\022\r\n\005level\030\t \001(\005\022\014\n\004type\030\n \001(\t\"4\n\022Upda"
      "teAdminUserRep\022\036\n\004info\030\001 \001(\0132\020.ttmall.Us"
      "erInfo\"\366\001\n\031UpsertAdminUserAddressReq\022\r\n\005"
      "token\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\n\n\002id\030\003 \001(\t"
      "\022\014\n\004name\030\004 \001(\t\022\020\n\010province\030\005 \001(\t\022\014\n\004city"
      "\030\006 \001(\t\022\014\n\004area\030\007 \001(\t\022\014\n\004addr\030\010 \001(\t\022\017\n\007co"
      "ntact\030\t \001(\t\022\016\n\006mobile\030\n \001(\t\022 \n\005coord\030\013 \001"
      "(\0132\021.ttmall.CoordInfo\022\017\n\007default\030\014 \001(\010\022\017"
      "\n\007regions\030\r \003(\t\">\n\031UpsertAdminUserAddres"
      "sRep\022!\n\004info\030\001 \001(\0132\023.ttmall.AddressInfo\""
      "G\n\027UploadAdminUserImageReq\022\r\n\005token\030\001 \001("
      "\t\022\017\n\007user_id\030\002 \001(\t\022\014\n\004data\030\003 \001(\014\"K\n\027Uplo"
      "adAdminUserImageRep\022\037\n\004info\030\001 \001(\0132\021.ttma"
      "ll.ImageInfo\022\017\n\007user_id\030\002 \001(\t\"L\n\027DeleteA"
      "dminUserImageReq\022\r\n\005token\030\001 \001(\t\022\017\n\007user_"
      "id\030\002 \001(\t\022\021\n\timage_md5\030\003 \001(\t\"K\n\027DeleteAdm"
      "inUserImageRep\022\037\n\004info\030\001 \001(\0132\021.ttmall.Im"
      "ageInfo\022\017\n\007user_id\030\002 \001(\t\"T\n\tAdminInfo\022\n\n"
      "\002id\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\016\n"
      "\006mobile\030\004 \001(\t\022\017\n\007regions\030\005 \003(\t\"A\n\rAdminL"
      "oginReq\022\016\n\006mobile\030\001 \001(\t\022\016\n\006passwd\030\002 \001(\t\022"
      "\020\n\010platform\030\003 \001(\t\"\?\n\rAdminLoginRep\022\r\n\005to"
      "ken\030\001 \001(\t\022\037\n\004Info\030\002 \001(\0132\021.ttmall.AdminIn"
      "fo\" \n\017GetAdminInfoReq\022\r\n\005token\030\001 \001(\t\"2\n\017"
      "GetAdminInfoRep\022\037\n\004info\030\001 \001(\0132\021.ttmall.A"
      "dminInfo\"L\n\031DeleteAdminUserAddressReq\022\r\n"
      "\005token\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\017\n\007addr_id"
      "\030\003 \001(\t\",\n\031DeleteAdminUserAddressRep\022\017\n\007a"
      "ddr_id\030\001 \001(\t\"\216\002\n\024RegisterAdminUserReq\022\r\n"
      "\005token\030\001 \001(\t\022\022\n\nauth_token\030\002 \001(\t\022\021\n\tauth"
      "_code\030\003 \001(\t\022\016\n\006mobile\030\004 \001(\t\022\014\n\004name\030\005 \001("
      "\t\022\r\n\005owner\030\006 \001(\t\022\r\n\005types\030\007 \003(\t\022\014\n\004pass\030"
      "\010 \001(\t\022\017\n\007referee\030\t \001(\t\022\024\n\014deliver_time\030\n"
      " \001(\t\022\014\n\004mark\030\013 \001(\t\022$\n\007address\030\014 \001(\0132\023.tt"
      "mall.AddressInfo\022\r\n\005level\030\r \001(\005\022\014\n\004type\030"
      "\016 \001(\t\"6\n\024RegisterAdminUserRep\022\036\n\004info\030\001 "
      "\001(\0132\020.ttmall.UserInfo\"P\n\035SetAdminUserDef"
      "aultAddressReq\022\r\n\005token\030\001 \001(\t\022\017\n\007user_id"
      "\030\002 \001(\t\022\017\n\007addr_id\030\003 \001(\t\"0\n\035SetAdminUserD"
      "efaultAddressRep\022\017\n\007addr_id\030\001 \001(\t2\265\010\n\014Ad"
      "minService\022\?\n\013SetDeviceId\022\026.ttmall.SetDe"
      "viceIdReq\032\026.ttmall.SetDeviceIdRep\"\000\022l\n\032S"
      "etAdminUserDefaultAddress\022%.ttmall.SetAd"
      "minUserDefaultAddressReq\032%.ttmall.SetAdm"
      "inUserDefaultAddressRep\"\000\022Q\n\021RegisterAdm"
      "inUser\022\034.ttmall.RegisterAdminUserReq\032\034.t"
      "tmall.RegisterAdminUserRep\"\000\022`\n\026DeleteAd"
      "minUserAddress\022!.ttmall.DeleteAdminUserA"
      "ddressReq\032!.ttmall.DeleteAdminUserAddres"
      "sRep\"\000\022B\n\014GetAdminInfo\022\027.ttmall.GetAdmin"
      "InfoReq\032\027.ttmall.GetAdminInfoRep\"\000\022`\n\026Up"
      "sertAdminUserAddress\022!.ttmall.UpsertAdmi"
      "nUserAddressReq\032!.ttmall.UpsertAdminUser"
      "AddressRep\"\000\022K\n\017UpdateAdminUser\022\032.ttmall"
      ".UpdateAdminUserReq\032\032.ttmall.UpdateAdmin"
      "UserRep\"\000\022Z\n\024UploadAdminUserImage\022\037.ttma"
      "ll.UploadAdminUserImageReq\032\037.ttmall.Uplo"
      "adAdminUserImageRep\"\000\022Z\n\024DeleteAdminUser"
      "Image\022\037.ttmall.DeleteAdminUserImageReq\032\037"
      ".ttmall.DeleteAdminUserImageRep\"\000\022Z\n\024Lis"
      "tAdminUserAddress\022\037.ttmall.ListAdminUser"
      "AddressReq\032\037.ttmall.ListAdminUserAddress"
      "Rep\"\000\022E\n\rListAdminUser\022\030.ttmall.ListAdmi"
      "nUserReq\032\030.ttmall.ListAdminUserRep\"\000\022:\n\014"
      "SendAuthCode\022\023.ttmall.SendAuthReq\032\023.ttma"
      "ll.SendAuthRep\"\000\0227\n\005Login\022\025.ttmall.Admin"
      "LoginReq\032\025.ttmall.AdminLoginRep\"\000b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3121);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "admin.proto", &protobuf_RegisterTypes);
  ::ttmall::protobuf_public_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_admin_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAdminUserReq::kTokenFieldNumber;
const int ListAdminUserReq::kSkipFieldNumber;
const int ListAdminUserReq::kLimitFieldNumber;
const int ListAdminUserReq::kKeyFieldNumber;
const int ListAdminUserReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAdminUserReq::ListAdminUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListAdminUserReq)
}
ListAdminUserReq::ListAdminUserReq(const ListAdminUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&skip_, &from.skip_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&skip_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ttmall.ListAdminUserReq)
}

void ListAdminUserReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&skip_) + sizeof(type_));
  _cached_size_ = 0;
}

ListAdminUserReq::~ListAdminUserReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListAdminUserReq)
  SharedDtor();
}

void ListAdminUserReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListAdminUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListAdminUserReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAdminUserReq& ListAdminUserReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListAdminUserReq* ListAdminUserReq::New(::google::protobuf::Arena* arena) const {
  ListAdminUserReq* n = new ListAdminUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListAdminUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListAdminUserReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&skip_) + sizeof(type_));
}

bool ListAdminUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListAdminUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListAdminUserReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListAdminUserReq.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListAdminUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListAdminUserReq)
  return false;
#undef DO_
}

void ListAdminUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListAdminUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAdminUserReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skip(), output);
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->limit(), output);
  }

  // string key = 4;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAdminUserReq.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->key(), output);
  }

  // int32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListAdminUserReq)
}

::google::protobuf::uint8* ListAdminUserReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListAdminUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAdminUserReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skip(), target);
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->limit(), target);
  }

  // string key = 4;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAdminUserReq.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->key(), target);
  }

  // int32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListAdminUserReq)
  return target;
}

size_t ListAdminUserReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListAdminUserReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string key = 4;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skip());
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  // int32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListAdminUserReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListAdminUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAdminUserReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAdminUserReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListAdminUserReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListAdminUserReq)
    MergeFrom(*source);
  }
}

void ListAdminUserReq::MergeFrom(const ListAdminUserReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListAdminUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.skip() != 0) {
    set_skip(from.skip());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ListAdminUserReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListAdminUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAdminUserReq::CopyFrom(const ListAdminUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListAdminUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAdminUserReq::IsInitialized() const {
  return true;
}

void ListAdminUserReq::Swap(ListAdminUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAdminUserReq::InternalSwap(ListAdminUserReq* other) {
  token_.Swap(&other->token_);
  key_.Swap(&other->key_);
  std::swap(skip_, other->skip_);
  std::swap(limit_, other->limit_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListAdminUserReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListAdminUserReq

// string token = 1;
void ListAdminUserReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListAdminUserReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.token)
  return token_.GetNoArena();
}
void ListAdminUserReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.token)
}
#if LANG_CXX11
void ListAdminUserReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAdminUserReq.token)
}
#endif
void ListAdminUserReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAdminUserReq.token)
}
void ListAdminUserReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAdminUserReq.token)
}
::std::string* ListAdminUserReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListAdminUserReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListAdminUserReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListAdminUserReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAdminUserReq.token)
}

// int32 skip = 2;
void ListAdminUserReq::clear_skip() {
  skip_ = 0;
}
::google::protobuf::int32 ListAdminUserReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.skip)
  return skip_;
}
void ListAdminUserReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.skip)
}

// int32 limit = 3;
void ListAdminUserReq::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 ListAdminUserReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.limit)
  return limit_;
}
void ListAdminUserReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.limit)
}

// string key = 4;
void ListAdminUserReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListAdminUserReq::key() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.key)
  return key_.GetNoArena();
}
void ListAdminUserReq::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.key)
}
#if LANG_CXX11
void ListAdminUserReq::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAdminUserReq.key)
}
#endif
void ListAdminUserReq::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAdminUserReq.key)
}
void ListAdminUserReq::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAdminUserReq.key)
}
::std::string* ListAdminUserReq::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserReq.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListAdminUserReq::release_key() {
  // @@protoc_insertion_point(field_release:ttmall.ListAdminUserReq.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListAdminUserReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAdminUserReq.key)
}

// int32 type = 5;
void ListAdminUserReq::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ListAdminUserReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.type)
  return type_;
}
void ListAdminUserReq::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAdminUserRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAdminUserRep::ListAdminUserRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListAdminUserRep)
}
ListAdminUserRep::ListAdminUserRep(const ListAdminUserRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListAdminUserRep)
}

void ListAdminUserRep::SharedCtor() {
  _cached_size_ = 0;
}

ListAdminUserRep::~ListAdminUserRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListAdminUserRep)
  SharedDtor();
}

void ListAdminUserRep::SharedDtor() {
}

void ListAdminUserRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListAdminUserRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAdminUserRep& ListAdminUserRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListAdminUserRep* ListAdminUserRep::New(::google::protobuf::Arena* arena) const {
  ListAdminUserRep* n = new ListAdminUserRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListAdminUserRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListAdminUserRep)
  items_.Clear();
}

bool ListAdminUserRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListAdminUserRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.UserInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListAdminUserRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListAdminUserRep)
  return false;
#undef DO_
}

void ListAdminUserRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListAdminUserRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.UserInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListAdminUserRep)
}

::google::protobuf::uint8* ListAdminUserRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListAdminUserRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.UserInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListAdminUserRep)
  return target;
}

size_t ListAdminUserRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListAdminUserRep)
  size_t total_size = 0;

  // repeated .ttmall.UserInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListAdminUserRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListAdminUserRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAdminUserRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAdminUserRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListAdminUserRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListAdminUserRep)
    MergeFrom(*source);
  }
}

void ListAdminUserRep::MergeFrom(const ListAdminUserRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListAdminUserRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListAdminUserRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListAdminUserRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAdminUserRep::CopyFrom(const ListAdminUserRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListAdminUserRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAdminUserRep::IsInitialized() const {
  return true;
}

void ListAdminUserRep::Swap(ListAdminUserRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAdminUserRep::InternalSwap(ListAdminUserRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListAdminUserRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListAdminUserRep

// repeated .ttmall.UserInfo items = 1;
int ListAdminUserRep::items_size() const {
  return items_.size();
}
void ListAdminUserRep::clear_items() {
  items_.Clear();
}
const ::ttmall::UserInfo& ListAdminUserRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserRep.items)
  return items_.Get(index);
}
::ttmall::UserInfo* ListAdminUserRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserRep.items)
  return items_.Mutable(index);
}
::ttmall::UserInfo* ListAdminUserRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListAdminUserRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::UserInfo >*
ListAdminUserRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListAdminUserRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::UserInfo >&
ListAdminUserRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListAdminUserRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAdminUserAddressReq::kTokenFieldNumber;
const int ListAdminUserAddressReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAdminUserAddressReq::ListAdminUserAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListAdminUserAddressReq)
}
ListAdminUserAddressReq::ListAdminUserAddressReq(const ListAdminUserAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListAdminUserAddressReq)
}

void ListAdminUserAddressReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListAdminUserAddressReq::~ListAdminUserAddressReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListAdminUserAddressReq)
  SharedDtor();
}

void ListAdminUserAddressReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListAdminUserAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListAdminUserAddressReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAdminUserAddressReq& ListAdminUserAddressReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListAdminUserAddressReq* ListAdminUserAddressReq::New(::google::protobuf::Arena* arena) const {
  ListAdminUserAddressReq* n = new ListAdminUserAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListAdminUserAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListAdminUserAddressReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListAdminUserAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListAdminUserAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListAdminUserAddressReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListAdminUserAddressReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListAdminUserAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListAdminUserAddressReq)
  return false;
#undef DO_
}

void ListAdminUserAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListAdminUserAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAdminUserAddressReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAdminUserAddressReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListAdminUserAddressReq)
}

::google::protobuf::uint8* ListAdminUserAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListAdminUserAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAdminUserAddressReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAdminUserAddressReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListAdminUserAddressReq)
  return target;
}

size_t ListAdminUserAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListAdminUserAddressReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListAdminUserAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListAdminUserAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAdminUserAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAdminUserAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListAdminUserAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListAdminUserAddressReq)
    MergeFrom(*source);
  }
}

void ListAdminUserAddressReq::MergeFrom(const ListAdminUserAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListAdminUserAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ListAdminUserAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListAdminUserAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAdminUserAddressReq::CopyFrom(const ListAdminUserAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListAdminUserAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAdminUserAddressReq::IsInitialized() const {
  return true;
}

void ListAdminUserAddressReq::Swap(ListAdminUserAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAdminUserAddressReq::InternalSwap(ListAdminUserAddressReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListAdminUserAddressReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListAdminUserAddressReq

// string token = 1;
void ListAdminUserAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListAdminUserAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserAddressReq.token)
  return token_.GetNoArena();
}
void ListAdminUserAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserAddressReq.token)
}
#if LANG_CXX11
void ListAdminUserAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAdminUserAddressReq.token)
}
#endif
void ListAdminUserAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAdminUserAddressReq.token)
}
void ListAdminUserAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAdminUserAddressReq.token)
}
::std::string* ListAdminUserAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListAdminUserAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListAdminUserAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListAdminUserAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAdminUserAddressReq.token)
}

// string id = 2;
void ListAdminUserAddressReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListAdminUserAddressReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserAddressReq.id)
  return id_.GetNoArena();
}
void ListAdminUserAddressReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserAddressReq.id)
}
#if LANG_CXX11
void ListAdminUserAddressReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAdminUserAddressReq.id)
}
#endif
void ListAdminUserAddressReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAdminUserAddressReq.id)
}
void ListAdminUserAddressReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAdminUserAddressReq.id)
}
::std::string* ListAdminUserAddressReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserAddressReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListAdminUserAddressReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.ListAdminUserAddressReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListAdminUserAddressReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAdminUserAddressReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAdminUserAddressRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAdminUserAddressRep::ListAdminUserAddressRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListAdminUserAddressRep)
}
ListAdminUserAddressRep::ListAdminUserAddressRep(const ListAdminUserAddressRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListAdminUserAddressRep)
}

void ListAdminUserAddressRep::SharedCtor() {
  _cached_size_ = 0;
}

ListAdminUserAddressRep::~ListAdminUserAddressRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListAdminUserAddressRep)
  SharedDtor();
}

void ListAdminUserAddressRep::SharedDtor() {
}

void ListAdminUserAddressRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListAdminUserAddressRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAdminUserAddressRep& ListAdminUserAddressRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListAdminUserAddressRep* ListAdminUserAddressRep::New(::google::protobuf::Arena* arena) const {
  ListAdminUserAddressRep* n = new ListAdminUserAddressRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListAdminUserAddressRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListAdminUserAddressRep)
  items_.Clear();
}

bool ListAdminUserAddressRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListAdminUserAddressRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.AddressInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListAdminUserAddressRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListAdminUserAddressRep)
  return false;
#undef DO_
}

void ListAdminUserAddressRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListAdminUserAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.AddressInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListAdminUserAddressRep)
}

::google::protobuf::uint8* ListAdminUserAddressRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListAdminUserAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.AddressInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListAdminUserAddressRep)
  return target;
}

size_t ListAdminUserAddressRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListAdminUserAddressRep)
  size_t total_size = 0;

  // repeated .ttmall.AddressInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListAdminUserAddressRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListAdminUserAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAdminUserAddressRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAdminUserAddressRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListAdminUserAddressRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListAdminUserAddressRep)
    MergeFrom(*source);
  }
}

void ListAdminUserAddressRep::MergeFrom(const ListAdminUserAddressRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListAdminUserAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListAdminUserAddressRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListAdminUserAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAdminUserAddressRep::CopyFrom(const ListAdminUserAddressRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListAdminUserAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAdminUserAddressRep::IsInitialized() const {
  return true;
}

void ListAdminUserAddressRep::Swap(ListAdminUserAddressRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAdminUserAddressRep::InternalSwap(ListAdminUserAddressRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListAdminUserAddressRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListAdminUserAddressRep

// repeated .ttmall.AddressInfo items = 1;
int ListAdminUserAddressRep::items_size() const {
  return items_.size();
}
void ListAdminUserAddressRep::clear_items() {
  items_.Clear();
}
const ::ttmall::AddressInfo& ListAdminUserAddressRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserAddressRep.items)
  return items_.Get(index);
}
::ttmall::AddressInfo* ListAdminUserAddressRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserAddressRep.items)
  return items_.Mutable(index);
}
::ttmall::AddressInfo* ListAdminUserAddressRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListAdminUserAddressRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
ListAdminUserAddressRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListAdminUserAddressRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
ListAdminUserAddressRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListAdminUserAddressRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateAdminUserReq::kTokenFieldNumber;
const int UpdateAdminUserReq::kIdFieldNumber;
const int UpdateAdminUserReq::kNameFieldNumber;
const int UpdateAdminUserReq::kOwnerFieldNumber;
const int UpdateAdminUserReq::kTypesFieldNumber;
const int UpdateAdminUserReq::kRefereeFieldNumber;
const int UpdateAdminUserReq::kDeliverTimeFieldNumber;
const int UpdateAdminUserReq::kMarkFieldNumber;
const int UpdateAdminUserReq::kLevelFieldNumber;
const int UpdateAdminUserReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateAdminUserReq::UpdateAdminUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpdateAdminUserReq)
}
UpdateAdminUserReq::UpdateAdminUserReq(const UpdateAdminUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      types_(from.types_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner().size() > 0) {
    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  referee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.referee().size() > 0) {
    referee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referee_);
  }
  deliver_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deliver_time().size() > 0) {
    deliver_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliver_time_);
  }
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mark().size() > 0) {
    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:ttmall.UpdateAdminUserReq)
}

void UpdateAdminUserReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  _cached_size_ = 0;
}

UpdateAdminUserReq::~UpdateAdminUserReq() {
  // @@protoc_insertion_point(destructor:ttmall.UpdateAdminUserReq)
  SharedDtor();
}

void UpdateAdminUserReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateAdminUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateAdminUserReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateAdminUserReq& UpdateAdminUserReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateAdminUserReq* UpdateAdminUserReq::New(::google::protobuf::Arena* arena) const {
  UpdateAdminUserReq* n = new UpdateAdminUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateAdminUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpdateAdminUserReq)
  types_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
}

bool UpdateAdminUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpdateAdminUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner().data(), this->owner().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string types = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->types(this->types_size() - 1).data(),
            this->types(this->types_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string referee = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referee()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->referee().data(), this->referee().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.referee"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deliver_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliver_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deliver_time().data(), this->deliver_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.deliver_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mark = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mark().data(), this->mark().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.mark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateAdminUserReq.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpdateAdminUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpdateAdminUserReq)
  return false;
#undef DO_
}

void UpdateAdminUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpdateAdminUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string owner = 4;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->owner(), output);
  }

  // repeated string types = 5;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->types(i).data(), this->types(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->types(i), output);
  }

  // string referee = 6;
  if (this->referee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referee().data(), this->referee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.referee");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->referee(), output);
  }

  // string deliver_time = 7;
  if (this->deliver_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_time().data(), this->deliver_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.deliver_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->deliver_time(), output);
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.mark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mark(), output);
  }

  // int32 level = 9;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->level(), output);
  }

  // string type = 10;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpdateAdminUserReq)
}

::google::protobuf::uint8* UpdateAdminUserReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpdateAdminUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string owner = 4;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->owner(), target);
  }

  // repeated string types = 5;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->types(i).data(), this->types(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->types(i), target);
  }

  // string referee = 6;
  if (this->referee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referee().data(), this->referee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.referee");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->referee(), target);
  }

  // string deliver_time = 7;
  if (this->deliver_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_time().data(), this->deliver_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.deliver_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->deliver_time(), target);
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.mark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mark(), target);
  }

  // int32 level = 9;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->level(), target);
  }

  // string type = 10;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateAdminUserReq.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpdateAdminUserReq)
  return target;
}

size_t UpdateAdminUserReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpdateAdminUserReq)
  size_t total_size = 0;

  // repeated string types = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->types_size());
  for (int i = 0, n = this->types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->types(i));
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string owner = 4;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  // string referee = 6;
  if (this->referee().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->referee());
  }

  // string deliver_time = 7;
  if (this->deliver_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deliver_time());
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mark());
  }

  // string type = 10;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // int32 level = 9;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateAdminUserReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpdateAdminUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAdminUserReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateAdminUserReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpdateAdminUserReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpdateAdminUserReq)
    MergeFrom(*source);
  }
}

void UpdateAdminUserReq::MergeFrom(const UpdateAdminUserReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpdateAdminUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  types_.MergeFrom(from.types_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.owner().size() > 0) {

    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  if (from.referee().size() > 0) {

    referee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referee_);
  }
  if (from.deliver_time().size() > 0) {

    deliver_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliver_time_);
  }
  if (from.mark().size() > 0) {

    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void UpdateAdminUserReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpdateAdminUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAdminUserReq::CopyFrom(const UpdateAdminUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpdateAdminUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAdminUserReq::IsInitialized() const {
  return true;
}

void UpdateAdminUserReq::Swap(UpdateAdminUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateAdminUserReq::InternalSwap(UpdateAdminUserReq* other) {
  types_.InternalSwap(&other->types_);
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  owner_.Swap(&other->owner_);
  referee_.Swap(&other->referee_);
  deliver_time_.Swap(&other->deliver_time_);
  mark_.Swap(&other->mark_);
  type_.Swap(&other->type_);
  std::swap(level_, other->level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateAdminUserReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateAdminUserReq

// string token = 1;
void UpdateAdminUserReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAdminUserReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.token)
  return token_.GetNoArena();
}
void UpdateAdminUserReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.token)
}
#if LANG_CXX11
void UpdateAdminUserReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.token)
}
#endif
void UpdateAdminUserReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.token)
}
void UpdateAdminUserReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.token)
}
::std::string* UpdateAdminUserReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAdminUserReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAdminUserReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.token)
}

// string id = 2;
void UpdateAdminUserReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAdminUserReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.id)
  return id_.GetNoArena();
}
void UpdateAdminUserReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.id)
}
#if LANG_CXX11
void UpdateAdminUserReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.id)
}
#endif
void UpdateAdminUserReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.id)
}
void UpdateAdminUserReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.id)
}
::std::string* UpdateAdminUserReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAdminUserReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAdminUserReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.id)
}

// string name = 3;
void UpdateAdminUserReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAdminUserReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.name)
  return name_.GetNoArena();
}
void UpdateAdminUserReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.name)
}
#if LANG_CXX11
void UpdateAdminUserReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.name)
}
#endif
void UpdateAdminUserReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.name)
}
void UpdateAdminUserReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.name)
}
::std::string* UpdateAdminUserReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAdminUserReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAdminUserReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.name)
}

// string owner = 4;
void UpdateAdminUserReq::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAdminUserReq::owner() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.owner)
  return owner_.GetNoArena();
}
void UpdateAdminUserReq::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.owner)
}
#if LANG_CXX11
void UpdateAdminUserReq::set_owner(::std::string&& value) {
  
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.owner)
}
#endif
void UpdateAdminUserReq::set_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.owner)
}
void UpdateAdminUserReq::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.owner)
}
::std::string* UpdateAdminUserReq::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAdminUserReq::release_owner() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAdminUserReq::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.owner)
}

// repeated string types = 5;
int UpdateAdminUserReq::types_size() const {
  return types_.size();
}
void UpdateAdminUserReq::clear_types() {
  types_.Clear();
}
const ::std::string& UpdateAdminUserReq::types(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.types)
  return types_.Get(index);
}
::std::string* UpdateAdminUserReq::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.types)
  return types_.Mutable(index);
}
void UpdateAdminUserReq::set_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.types)
  types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void UpdateAdminUserReq::set_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.types)
  types_.Mutable(index)->assign(std::move(value));
}
#endif
void UpdateAdminUserReq::set_types(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.types)
}
void UpdateAdminUserReq::set_types(int index, const char* value, size_t size) {
  types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.types)
}
::std::string* UpdateAdminUserReq::add_types() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.UpdateAdminUserReq.types)
  return types_.Add();
}
void UpdateAdminUserReq::add_types(const ::std::string& value) {
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.UpdateAdminUserReq.types)
}
#if LANG_CXX11
void UpdateAdminUserReq::add_types(::std::string&& value) {
  types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.UpdateAdminUserReq.types)
}
#endif
void UpdateAdminUserReq::add_types(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.UpdateAdminUserReq.types)
}
void UpdateAdminUserReq::add_types(const char* value, size_t size) {
  types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.UpdateAdminUserReq.types)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdateAdminUserReq::types() const {
  // @@protoc_insertion_point(field_list:ttmall.UpdateAdminUserReq.types)
  return types_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UpdateAdminUserReq::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.UpdateAdminUserReq.types)
  return &types_;
}

// string referee = 6;
void UpdateAdminUserReq::clear_referee() {
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAdminUserReq::referee() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.referee)
  return referee_.GetNoArena();
}
void UpdateAdminUserReq::set_referee(const ::std::string& value) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.referee)
}
#if LANG_CXX11
void UpdateAdminUserReq::set_referee(::std::string&& value) {
  
  referee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.referee)
}
#endif
void UpdateAdminUserReq::set_referee(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.referee)
}
void UpdateAdminUserReq::set_referee(const char* value, size_t size) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.referee)
}
::std::string* UpdateAdminUserReq::mutable_referee() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.referee)
  return referee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAdminUserReq::release_referee() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.referee)
  
  return referee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAdminUserReq::set_allocated_referee(::std::string* referee) {
  if (referee != NULL) {
    
  } else {
    
  }
  referee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referee);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.referee)
}

// string deliver_time = 7;
void UpdateAdminUserReq::clear_deliver_time() {
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAdminUserReq::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.deliver_time)
  return deliver_time_.GetNoArena();
}
void UpdateAdminUserReq::set_deliver_time(const ::std::string& value) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.deliver_time)
}
#if LANG_CXX11
void UpdateAdminUserReq::set_deliver_time(::std::string&& value) {
  
  deliver_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.deliver_time)
}
#endif
void UpdateAdminUserReq::set_deliver_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.deliver_time)
}
void UpdateAdminUserReq::set_deliver_time(const char* value, size_t size) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.deliver_time)
}
::std::string* UpdateAdminUserReq::mutable_deliver_time() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.deliver_time)
  return deliver_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAdminUserReq::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.deliver_time)
  
  return deliver_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAdminUserReq::set_allocated_deliver_time(::std::string* deliver_time) {
  if (deliver_time != NULL) {
    
  } else {
    
  }
  deliver_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliver_time);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.deliver_time)
}

// string mark = 8;
void UpdateAdminUserReq::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAdminUserReq::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.mark)
  return mark_.GetNoArena();
}
void UpdateAdminUserReq::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.mark)
}
#if LANG_CXX11
void UpdateAdminUserReq::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.mark)
}
#endif
void UpdateAdminUserReq::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.mark)
}
void UpdateAdminUserReq::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.mark)
}
::std::string* UpdateAdminUserReq::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAdminUserReq::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAdminUserReq::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.mark)
}

// int32 level = 9;
void UpdateAdminUserReq::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 UpdateAdminUserReq::level() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.level)
  return level_;
}
void UpdateAdminUserReq::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.level)
}

// string type = 10;
void UpdateAdminUserReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateAdminUserReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.type)
  return type_.GetNoArena();
}
void UpdateAdminUserReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.type)
}
#if LANG_CXX11
void UpdateAdminUserReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.type)
}
#endif
void UpdateAdminUserReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.type)
}
void UpdateAdminUserReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.type)
}
::std::string* UpdateAdminUserReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAdminUserReq::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAdminUserReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateAdminUserRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateAdminUserRep::UpdateAdminUserRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpdateAdminUserRep)
}
UpdateAdminUserRep::UpdateAdminUserRep(const UpdateAdminUserRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UpdateAdminUserRep)
}

void UpdateAdminUserRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

UpdateAdminUserRep::~UpdateAdminUserRep() {
  // @@protoc_insertion_point(destructor:ttmall.UpdateAdminUserRep)
  SharedDtor();
}

void UpdateAdminUserRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void UpdateAdminUserRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateAdminUserRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateAdminUserRep& UpdateAdminUserRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateAdminUserRep* UpdateAdminUserRep::New(::google::protobuf::Arena* arena) const {
  UpdateAdminUserRep* n = new UpdateAdminUserRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateAdminUserRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpdateAdminUserRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool UpdateAdminUserRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpdateAdminUserRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.UserInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpdateAdminUserRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpdateAdminUserRep)
  return false;
#undef DO_
}

void UpdateAdminUserRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpdateAdminUserRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpdateAdminUserRep)
}

::google::protobuf::uint8* UpdateAdminUserRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpdateAdminUserRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpdateAdminUserRep)
  return target;
}

size_t UpdateAdminUserRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpdateAdminUserRep)
  size_t total_size = 0;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateAdminUserRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpdateAdminUserRep)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAdminUserRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateAdminUserRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpdateAdminUserRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpdateAdminUserRep)
    MergeFrom(*source);
  }
}

void UpdateAdminUserRep::MergeFrom(const UpdateAdminUserRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpdateAdminUserRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::UserInfo::MergeFrom(from.info());
  }
}

void UpdateAdminUserRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpdateAdminUserRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAdminUserRep::CopyFrom(const UpdateAdminUserRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpdateAdminUserRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAdminUserRep::IsInitialized() const {
  return true;
}

void UpdateAdminUserRep::Swap(UpdateAdminUserRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateAdminUserRep::InternalSwap(UpdateAdminUserRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateAdminUserRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateAdminUserRep

// .ttmall.UserInfo info = 1;
bool UpdateAdminUserRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void UpdateAdminUserRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::UserInfo& UpdateAdminUserRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
::ttmall::UserInfo* UpdateAdminUserRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserRep.info)
  return info_;
}
::ttmall::UserInfo* UpdateAdminUserRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void UpdateAdminUserRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpsertAdminUserAddressReq::kTokenFieldNumber;
const int UpsertAdminUserAddressReq::kUserIdFieldNumber;
const int UpsertAdminUserAddressReq::kIdFieldNumber;
const int UpsertAdminUserAddressReq::kNameFieldNumber;
const int UpsertAdminUserAddressReq::kProvinceFieldNumber;
const int UpsertAdminUserAddressReq::kCityFieldNumber;
const int UpsertAdminUserAddressReq::kAreaFieldNumber;
const int UpsertAdminUserAddressReq::kAddrFieldNumber;
const int UpsertAdminUserAddressReq::kContactFieldNumber;
const int UpsertAdminUserAddressReq::kMobileFieldNumber;
const int UpsertAdminUserAddressReq::kCoordFieldNumber;
const int UpsertAdminUserAddressReq::kDefaultFieldNumber;
const int UpsertAdminUserAddressReq::kRegionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpsertAdminUserAddressReq::UpsertAdminUserAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpsertAdminUserAddressReq)
}
UpsertAdminUserAddressReq::UpsertAdminUserAddressReq(const UpsertAdminUserAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      regions_(from.regions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.province().size() > 0) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.area().size() > 0) {
    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr().size() > 0) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contact().size() > 0) {
    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.has_coord()) {
    coord_ = new ::ttmall::CoordInfo(*from.coord_);
  } else {
    coord_ = NULL;
  }
  default__ = from.default__;
  // @@protoc_insertion_point(copy_constructor:ttmall.UpsertAdminUserAddressReq)
}

void UpsertAdminUserAddressReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&coord_, 0, reinterpret_cast<char*>(&default__) -
    reinterpret_cast<char*>(&coord_) + sizeof(default__));
  _cached_size_ = 0;
}

UpsertAdminUserAddressReq::~UpsertAdminUserAddressReq() {
  // @@protoc_insertion_point(destructor:ttmall.UpsertAdminUserAddressReq)
  SharedDtor();
}

void UpsertAdminUserAddressReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete coord_;
  }
}

void UpsertAdminUserAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpsertAdminUserAddressReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpsertAdminUserAddressReq& UpsertAdminUserAddressReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpsertAdminUserAddressReq* UpsertAdminUserAddressReq::New(::google::protobuf::Arena* arena) const {
  UpsertAdminUserAddressReq* n = new UpsertAdminUserAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpsertAdminUserAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpsertAdminUserAddressReq)
  regions_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) {
    delete coord_;
  }
  coord_ = NULL;
  default__ = false;
}

bool UpsertAdminUserAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpsertAdminUserAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string province = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.province"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string city = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string area = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->area().data(), this->area().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.area"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addr = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contact = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contact().data(), this->contact().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.contact"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.CoordInfo coord = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool default = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string regions = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_regions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regions(this->regions_size() - 1).data(),
            this->regions(this->regions_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpsertAdminUserAddressReq.regions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpsertAdminUserAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpsertAdminUserAddressReq)
  return false;
#undef DO_
}

void UpsertAdminUserAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpsertAdminUserAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // string province = 5;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->province(), output);
  }

  // string city = 6;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->city(), output);
  }

  // string area = 7;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->area(), output);
  }

  // string addr = 8;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->addr(), output);
  }

  // string contact = 9;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.contact");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->contact(), output);
  }

  // string mobile = 10;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->mobile(), output);
  }

  // .ttmall.CoordInfo coord = 11;
  if (this->has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->coord_, output);
  }

  // bool default = 12;
  if (this->default_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->default_(), output);
  }

  // repeated string regions = 13;
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regions(i).data(), this->regions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.regions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->regions(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpsertAdminUserAddressReq)
}

::google::protobuf::uint8* UpsertAdminUserAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpsertAdminUserAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // string province = 5;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->province(), target);
  }

  // string city = 6;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->city(), target);
  }

  // string area = 7;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->area(), target);
  }

  // string addr = 8;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->addr(), target);
  }

  // string contact = 9;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.contact");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->contact(), target);
  }

  // string mobile = 10;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->mobile(), target);
  }

  // .ttmall.CoordInfo coord = 11;
  if (this->has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->coord_, deterministic, target);
  }

  // bool default = 12;
  if (this->default_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->default_(), target);
  }

  // repeated string regions = 13;
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regions(i).data(), this->regions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpsertAdminUserAddressReq.regions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->regions(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpsertAdminUserAddressReq)
  return target;
}

size_t UpsertAdminUserAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpsertAdminUserAddressReq)
  size_t total_size = 0;

  // repeated string regions = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->regions_size());
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->regions(i));
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string province = 5;
  if (this->province().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->province());
  }

  // string city = 6;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // string area = 7;
  if (this->area().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area());
  }

  // string addr = 8;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  // string contact = 9;
  if (this->contact().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contact());
  }

  // string mobile = 10;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // .ttmall.CoordInfo coord = 11;
  if (this->has_coord()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->coord_);
  }

  // bool default = 12;
  if (this->default_() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpsertAdminUserAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpsertAdminUserAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpsertAdminUserAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpsertAdminUserAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpsertAdminUserAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpsertAdminUserAddressReq)
    MergeFrom(*source);
  }
}

void UpsertAdminUserAddressReq::MergeFrom(const UpsertAdminUserAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpsertAdminUserAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.province().size() > 0) {

    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.area().size() > 0) {

    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  if (from.contact().size() > 0) {

    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.has_coord()) {
    mutable_coord()->::ttmall::CoordInfo::MergeFrom(from.coord());
  }
  if (from.default_() != 0) {
    set_default_(from.default_());
  }
}

void UpsertAdminUserAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpsertAdminUserAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpsertAdminUserAddressReq::CopyFrom(const UpsertAdminUserAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpsertAdminUserAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpsertAdminUserAddressReq::IsInitialized() const {
  return true;
}

void UpsertAdminUserAddressReq::Swap(UpsertAdminUserAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpsertAdminUserAddressReq::InternalSwap(UpsertAdminUserAddressReq* other) {
  regions_.InternalSwap(&other->regions_);
  token_.Swap(&other->token_);
  user_id_.Swap(&other->user_id_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  area_.Swap(&other->area_);
  addr_.Swap(&other->addr_);
  contact_.Swap(&other->contact_);
  mobile_.Swap(&other->mobile_);
  std::swap(coord_, other->coord_);
  std::swap(default__, other->default__);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpsertAdminUserAddressReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpsertAdminUserAddressReq

// string token = 1;
void UpsertAdminUserAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.token)
  return token_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.token)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.token)
}
#endif
void UpsertAdminUserAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.token)
}
void UpsertAdminUserAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.token)
}
::std::string* UpsertAdminUserAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.token)
}

// string user_id = 2;
void UpsertAdminUserAddressReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.user_id)
  return user_id_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.user_id)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.user_id)
}
#endif
void UpsertAdminUserAddressReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.user_id)
}
void UpsertAdminUserAddressReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.user_id)
}
::std::string* UpsertAdminUserAddressReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.user_id)
}

// string id = 3;
void UpsertAdminUserAddressReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.id)
  return id_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.id)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.id)
}
#endif
void UpsertAdminUserAddressReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.id)
}
void UpsertAdminUserAddressReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.id)
}
::std::string* UpsertAdminUserAddressReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.id)
}

// string name = 4;
void UpsertAdminUserAddressReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.name)
  return name_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.name)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.name)
}
#endif
void UpsertAdminUserAddressReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.name)
}
void UpsertAdminUserAddressReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.name)
}
::std::string* UpsertAdminUserAddressReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.name)
}

// string province = 5;
void UpsertAdminUserAddressReq::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::province() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.province)
  return province_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.province)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_province(::std::string&& value) {
  
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.province)
}
#endif
void UpsertAdminUserAddressReq::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.province)
}
void UpsertAdminUserAddressReq::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.province)
}
::std::string* UpsertAdminUserAddressReq::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_province() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.province)
}

// string city = 6;
void UpsertAdminUserAddressReq::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::city() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.city)
  return city_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.city)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.city)
}
#endif
void UpsertAdminUserAddressReq::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.city)
}
void UpsertAdminUserAddressReq::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.city)
}
::std::string* UpsertAdminUserAddressReq::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_city() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.city)
}

// string area = 7;
void UpsertAdminUserAddressReq::clear_area() {
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::area() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.area)
  return area_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_area(const ::std::string& value) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.area)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_area(::std::string&& value) {
  
  area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.area)
}
#endif
void UpsertAdminUserAddressReq::set_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.area)
}
void UpsertAdminUserAddressReq::set_area(const char* value, size_t size) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.area)
}
::std::string* UpsertAdminUserAddressReq::mutable_area() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.area)
  return area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_area() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.area)
  
  return area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_area(::std::string* area) {
  if (area != NULL) {
    
  } else {
    
  }
  area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.area)
}

// string addr = 8;
void UpsertAdminUserAddressReq::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::addr() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.addr)
  return addr_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.addr)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.addr)
}
#endif
void UpsertAdminUserAddressReq::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.addr)
}
void UpsertAdminUserAddressReq::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.addr)
}
::std::string* UpsertAdminUserAddressReq::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_addr() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.addr)
}

// string contact = 9;
void UpsertAdminUserAddressReq::clear_contact() {
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::contact() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.contact)
  return contact_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_contact(const ::std::string& value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.contact)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_contact(::std::string&& value) {
  
  contact_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.contact)
}
#endif
void UpsertAdminUserAddressReq::set_contact(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.contact)
}
void UpsertAdminUserAddressReq::set_contact(const char* value, size_t size) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.contact)
}
::std::string* UpsertAdminUserAddressReq::mutable_contact() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.contact)
  return contact_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_contact() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.contact)
  
  return contact_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_contact(::std::string* contact) {
  if (contact != NULL) {
    
  } else {
    
  }
  contact_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.contact)
}

// string mobile = 10;
void UpsertAdminUserAddressReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpsertAdminUserAddressReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.mobile)
  return mobile_.GetNoArena();
}
void UpsertAdminUserAddressReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.mobile)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.mobile)
}
#endif
void UpsertAdminUserAddressReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.mobile)
}
void UpsertAdminUserAddressReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.mobile)
}
::std::string* UpsertAdminUserAddressReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpsertAdminUserAddressReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpsertAdminUserAddressReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.mobile)
}

// .ttmall.CoordInfo coord = 11;
bool UpsertAdminUserAddressReq::has_coord() const {
  return this != internal_default_instance() && coord_ != NULL;
}
void UpsertAdminUserAddressReq::clear_coord() {
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
}
const ::ttmall::CoordInfo& UpsertAdminUserAddressReq::coord() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.coord)
  return coord_ != NULL ? *coord_
                         : *::ttmall::CoordInfo::internal_default_instance();
}
::ttmall::CoordInfo* UpsertAdminUserAddressReq::mutable_coord() {
  
  if (coord_ == NULL) {
    coord_ = new ::ttmall::CoordInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.coord)
  return coord_;
}
::ttmall::CoordInfo* UpsertAdminUserAddressReq::release_coord() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.coord)
  
  ::ttmall::CoordInfo* temp = coord_;
  coord_ = NULL;
  return temp;
}
void UpsertAdminUserAddressReq::set_allocated_coord(::ttmall::CoordInfo* coord) {
  delete coord_;
  coord_ = coord;
  if (coord) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.coord)
}

// bool default = 12;
void UpsertAdminUserAddressReq::clear_default_() {
  default__ = false;
}
bool UpsertAdminUserAddressReq::default_() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.default)
  return default__;
}
void UpsertAdminUserAddressReq::set_default_(bool value) {
  
  default__ = value;
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.default)
}

// repeated string regions = 13;
int UpsertAdminUserAddressReq::regions_size() const {
  return regions_.size();
}
void UpsertAdminUserAddressReq::clear_regions() {
  regions_.Clear();
}
const ::std::string& UpsertAdminUserAddressReq::regions(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.regions)
  return regions_.Get(index);
}
::std::string* UpsertAdminUserAddressReq::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.regions)
  return regions_.Mutable(index);
}
void UpsertAdminUserAddressReq::set_regions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.regions)
  regions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::set_regions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.regions)
  regions_.Mutable(index)->assign(std::move(value));
}
#endif
void UpsertAdminUserAddressReq::set_regions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.regions)
}
void UpsertAdminUserAddressReq::set_regions(int index, const char* value, size_t size) {
  regions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.regions)
}
::std::string* UpsertAdminUserAddressReq::add_regions() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.UpsertAdminUserAddressReq.regions)
  return regions_.Add();
}
void UpsertAdminUserAddressReq::add_regions(const ::std::string& value) {
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.UpsertAdminUserAddressReq.regions)
}
#if LANG_CXX11
void UpsertAdminUserAddressReq::add_regions(::std::string&& value) {
  regions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.UpsertAdminUserAddressReq.regions)
}
#endif
void UpsertAdminUserAddressReq::add_regions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.UpsertAdminUserAddressReq.regions)
}
void UpsertAdminUserAddressReq::add_regions(const char* value, size_t size) {
  regions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.UpsertAdminUserAddressReq.regions)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpsertAdminUserAddressReq::regions() const {
  // @@protoc_insertion_point(field_list:ttmall.UpsertAdminUserAddressReq.regions)
  return regions_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UpsertAdminUserAddressReq::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.UpsertAdminUserAddressReq.regions)
  return &regions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpsertAdminUserAddressRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpsertAdminUserAddressRep::UpsertAdminUserAddressRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpsertAdminUserAddressRep)
}
UpsertAdminUserAddressRep::UpsertAdminUserAddressRep(const UpsertAdminUserAddressRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::AddressInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UpsertAdminUserAddressRep)
}

void UpsertAdminUserAddressRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

UpsertAdminUserAddressRep::~UpsertAdminUserAddressRep() {
  // @@protoc_insertion_point(destructor:ttmall.UpsertAdminUserAddressRep)
  SharedDtor();
}

void UpsertAdminUserAddressRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void UpsertAdminUserAddressRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpsertAdminUserAddressRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpsertAdminUserAddressRep& UpsertAdminUserAddressRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpsertAdminUserAddressRep* UpsertAdminUserAddressRep::New(::google::protobuf::Arena* arena) const {
  UpsertAdminUserAddressRep* n = new UpsertAdminUserAddressRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpsertAdminUserAddressRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpsertAdminUserAddressRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool UpsertAdminUserAddressRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpsertAdminUserAddressRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.AddressInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpsertAdminUserAddressRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpsertAdminUserAddressRep)
  return false;
#undef DO_
}

void UpsertAdminUserAddressRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpsertAdminUserAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpsertAdminUserAddressRep)
}

::google::protobuf::uint8* UpsertAdminUserAddressRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpsertAdminUserAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpsertAdminUserAddressRep)
  return target;
}

size_t UpsertAdminUserAddressRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpsertAdminUserAddressRep)
  size_t total_size = 0;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpsertAdminUserAddressRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpsertAdminUserAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  const UpsertAdminUserAddressRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpsertAdminUserAddressRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpsertAdminUserAddressRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpsertAdminUserAddressRep)
    MergeFrom(*source);
  }
}

void UpsertAdminUserAddressRep::MergeFrom(const UpsertAdminUserAddressRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpsertAdminUserAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::AddressInfo::MergeFrom(from.info());
  }
}

void UpsertAdminUserAddressRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpsertAdminUserAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpsertAdminUserAddressRep::CopyFrom(const UpsertAdminUserAddressRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpsertAdminUserAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpsertAdminUserAddressRep::IsInitialized() const {
  return true;
}

void UpsertAdminUserAddressRep::Swap(UpsertAdminUserAddressRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpsertAdminUserAddressRep::InternalSwap(UpsertAdminUserAddressRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpsertAdminUserAddressRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpsertAdminUserAddressRep

// .ttmall.AddressInfo info = 1;
bool UpsertAdminUserAddressRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void UpsertAdminUserAddressRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::AddressInfo& UpsertAdminUserAddressRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
::ttmall::AddressInfo* UpsertAdminUserAddressRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressRep.info)
  return info_;
}
::ttmall::AddressInfo* UpsertAdminUserAddressRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressRep.info)
  
  ::ttmall::AddressInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void UpsertAdminUserAddressRep::set_allocated_info(::ttmall::AddressInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadAdminUserImageReq::kTokenFieldNumber;
const int UploadAdminUserImageReq::kUserIdFieldNumber;
const int UploadAdminUserImageReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadAdminUserImageReq::UploadAdminUserImageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UploadAdminUserImageReq)
}
UploadAdminUserImageReq::UploadAdminUserImageReq(const UploadAdminUserImageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UploadAdminUserImageReq)
}

void UploadAdminUserImageReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UploadAdminUserImageReq::~UploadAdminUserImageReq() {
  // @@protoc_insertion_point(destructor:ttmall.UploadAdminUserImageReq)
  SharedDtor();
}

void UploadAdminUserImageReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadAdminUserImageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadAdminUserImageReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadAdminUserImageReq& UploadAdminUserImageReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UploadAdminUserImageReq* UploadAdminUserImageReq::New(::google::protobuf::Arena* arena) const {
  UploadAdminUserImageReq* n = new UploadAdminUserImageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadAdminUserImageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UploadAdminUserImageReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UploadAdminUserImageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UploadAdminUserImageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UploadAdminUserImageReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UploadAdminUserImageReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UploadAdminUserImageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UploadAdminUserImageReq)
  return false;
#undef DO_
}

void UploadAdminUserImageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UploadAdminUserImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UploadAdminUserImageReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UploadAdminUserImageReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UploadAdminUserImageReq)
}

::google::protobuf::uint8* UploadAdminUserImageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UploadAdminUserImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UploadAdminUserImageReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UploadAdminUserImageReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UploadAdminUserImageReq)
  return target;
}

size_t UploadAdminUserImageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UploadAdminUserImageReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadAdminUserImageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UploadAdminUserImageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadAdminUserImageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadAdminUserImageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UploadAdminUserImageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UploadAdminUserImageReq)
    MergeFrom(*source);
  }
}

void UploadAdminUserImageReq::MergeFrom(const UploadAdminUserImageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UploadAdminUserImageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void UploadAdminUserImageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UploadAdminUserImageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadAdminUserImageReq::CopyFrom(const UploadAdminUserImageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UploadAdminUserImageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadAdminUserImageReq::IsInitialized() const {
  return true;
}

void UploadAdminUserImageReq::Swap(UploadAdminUserImageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadAdminUserImageReq::InternalSwap(UploadAdminUserImageReq* other) {
  token_.Swap(&other->token_);
  user_id_.Swap(&other->user_id_);
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadAdminUserImageReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadAdminUserImageReq

// string token = 1;
void UploadAdminUserImageReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UploadAdminUserImageReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageReq.token)
  return token_.GetNoArena();
}
void UploadAdminUserImageReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UploadAdminUserImageReq.token)
}
#if LANG_CXX11
void UploadAdminUserImageReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UploadAdminUserImageReq.token)
}
#endif
void UploadAdminUserImageReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UploadAdminUserImageReq.token)
}
void UploadAdminUserImageReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UploadAdminUserImageReq.token)
}
::std::string* UploadAdminUserImageReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadAdminUserImageReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadAdminUserImageReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageReq.token)
}

// string user_id = 2;
void UploadAdminUserImageReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UploadAdminUserImageReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageReq.user_id)
  return user_id_.GetNoArena();
}
void UploadAdminUserImageReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UploadAdminUserImageReq.user_id)
}
#if LANG_CXX11
void UploadAdminUserImageReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UploadAdminUserImageReq.user_id)
}
#endif
void UploadAdminUserImageReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UploadAdminUserImageReq.user_id)
}
void UploadAdminUserImageReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UploadAdminUserImageReq.user_id)
}
::std::string* UploadAdminUserImageReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadAdminUserImageReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadAdminUserImageReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageReq.user_id)
}

// bytes data = 3;
void UploadAdminUserImageReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UploadAdminUserImageReq::data() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageReq.data)
  return data_.GetNoArena();
}
void UploadAdminUserImageReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UploadAdminUserImageReq.data)
}
#if LANG_CXX11
void UploadAdminUserImageReq::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UploadAdminUserImageReq.data)
}
#endif
void UploadAdminUserImageReq::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UploadAdminUserImageReq.data)
}
void UploadAdminUserImageReq::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UploadAdminUserImageReq.data)
}
::std::string* UploadAdminUserImageReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadAdminUserImageReq::release_data() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageReq.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadAdminUserImageReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageReq.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadAdminUserImageRep::kInfoFieldNumber;
const int UploadAdminUserImageRep::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadAdminUserImageRep::UploadAdminUserImageRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UploadAdminUserImageRep)
}
UploadAdminUserImageRep::UploadAdminUserImageRep(const UploadAdminUserImageRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.has_info()) {
    info_ = new ::ttmall::ImageInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UploadAdminUserImageRep)
}

void UploadAdminUserImageRep::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_ = NULL;
  _cached_size_ = 0;
}

UploadAdminUserImageRep::~UploadAdminUserImageRep() {
  // @@protoc_insertion_point(destructor:ttmall.UploadAdminUserImageRep)
  SharedDtor();
}

void UploadAdminUserImageRep::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void UploadAdminUserImageRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadAdminUserImageRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadAdminUserImageRep& UploadAdminUserImageRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

UploadAdminUserImageRep* UploadAdminUserImageRep::New(::google::protobuf::Arena* arena) const {
  UploadAdminUserImageRep* n = new UploadAdminUserImageRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadAdminUserImageRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UploadAdminUserImageRep)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool UploadAdminUserImageRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UploadAdminUserImageRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.ImageInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UploadAdminUserImageRep.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UploadAdminUserImageRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UploadAdminUserImageRep)
  return false;
#undef DO_
}

void UploadAdminUserImageRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UploadAdminUserImageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.ImageInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UploadAdminUserImageRep.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UploadAdminUserImageRep)
}

::google::protobuf::uint8* UploadAdminUserImageRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UploadAdminUserImageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.ImageInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UploadAdminUserImageRep.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UploadAdminUserImageRep)
  return target;
}

size_t UploadAdminUserImageRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UploadAdminUserImageRep)
  size_t total_size = 0;

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // .ttmall.ImageInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadAdminUserImageRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UploadAdminUserImageRep)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadAdminUserImageRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadAdminUserImageRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UploadAdminUserImageRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UploadAdminUserImageRep)
    MergeFrom(*source);
  }
}

void UploadAdminUserImageRep::MergeFrom(const UploadAdminUserImageRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UploadAdminUserImageRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.has_info()) {
    mutable_info()->::ttmall::ImageInfo::MergeFrom(from.info());
  }
}

void UploadAdminUserImageRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UploadAdminUserImageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadAdminUserImageRep::CopyFrom(const UploadAdminUserImageRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UploadAdminUserImageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadAdminUserImageRep::IsInitialized() const {
  return true;
}

void UploadAdminUserImageRep::Swap(UploadAdminUserImageRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadAdminUserImageRep::InternalSwap(UploadAdminUserImageRep* other) {
  user_id_.Swap(&other->user_id_);
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadAdminUserImageRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadAdminUserImageRep

// .ttmall.ImageInfo info = 1;
bool UploadAdminUserImageRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void UploadAdminUserImageRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::ImageInfo& UploadAdminUserImageRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
::ttmall::ImageInfo* UploadAdminUserImageRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageRep.info)
  return info_;
}
::ttmall::ImageInfo* UploadAdminUserImageRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageRep.info)
  
  ::ttmall::ImageInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void UploadAdminUserImageRep::set_allocated_info(::ttmall::ImageInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageRep.info)
}

// string user_id = 2;
void UploadAdminUserImageRep::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UploadAdminUserImageRep::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageRep.user_id)
  return user_id_.GetNoArena();
}
void UploadAdminUserImageRep::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UploadAdminUserImageRep.user_id)
}
#if LANG_CXX11
void UploadAdminUserImageRep::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UploadAdminUserImageRep.user_id)
}
#endif
void UploadAdminUserImageRep::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UploadAdminUserImageRep.user_id)
}
void UploadAdminUserImageRep::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UploadAdminUserImageRep.user_id)
}
::std::string* UploadAdminUserImageRep::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageRep.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadAdminUserImageRep::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageRep.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UploadAdminUserImageRep::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageRep.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteAdminUserImageReq::kTokenFieldNumber;
const int DeleteAdminUserImageReq::kUserIdFieldNumber;
const int DeleteAdminUserImageReq::kImageMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAdminUserImageReq::DeleteAdminUserImageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DeleteAdminUserImageReq)
}
DeleteAdminUserImageReq::DeleteAdminUserImageReq(const DeleteAdminUserImageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  image_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_md5().size() > 0) {
    image_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_md5_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DeleteAdminUserImageReq)
}

void DeleteAdminUserImageReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteAdminUserImageReq::~DeleteAdminUserImageReq() {
  // @@protoc_insertion_point(destructor:ttmall.DeleteAdminUserImageReq)
  SharedDtor();
}

void DeleteAdminUserImageReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteAdminUserImageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteAdminUserImageReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAdminUserImageReq& DeleteAdminUserImageReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteAdminUserImageReq* DeleteAdminUserImageReq::New(::google::protobuf::Arena* arena) const {
  DeleteAdminUserImageReq* n = new DeleteAdminUserImageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteAdminUserImageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DeleteAdminUserImageReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteAdminUserImageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DeleteAdminUserImageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteAdminUserImageReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteAdminUserImageReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_md5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_md5().data(), this->image_md5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteAdminUserImageReq.image_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DeleteAdminUserImageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DeleteAdminUserImageReq)
  return false;
#undef DO_
}

void DeleteAdminUserImageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DeleteAdminUserImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserImageReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserImageReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string image_md5 = 3;
  if (this->image_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_md5().data(), this->image_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserImageReq.image_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->image_md5(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DeleteAdminUserImageReq)
}

::google::protobuf::uint8* DeleteAdminUserImageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DeleteAdminUserImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserImageReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserImageReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string image_md5 = 3;
  if (this->image_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_md5().data(), this->image_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserImageReq.image_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->image_md5(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DeleteAdminUserImageReq)
  return target;
}

size_t DeleteAdminUserImageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DeleteAdminUserImageReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string image_md5 = 3;
  if (this->image_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_md5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteAdminUserImageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DeleteAdminUserImageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAdminUserImageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAdminUserImageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DeleteAdminUserImageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DeleteAdminUserImageReq)
    MergeFrom(*source);
  }
}

void DeleteAdminUserImageReq::MergeFrom(const DeleteAdminUserImageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DeleteAdminUserImageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.image_md5().size() > 0) {

    image_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_md5_);
  }
}

void DeleteAdminUserImageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DeleteAdminUserImageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAdminUserImageReq::CopyFrom(const DeleteAdminUserImageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DeleteAdminUserImageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAdminUserImageReq::IsInitialized() const {
  return true;
}

void DeleteAdminUserImageReq::Swap(DeleteAdminUserImageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAdminUserImageReq::InternalSwap(DeleteAdminUserImageReq* other) {
  token_.Swap(&other->token_);
  user_id_.Swap(&other->user_id_);
  image_md5_.Swap(&other->image_md5_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteAdminUserImageReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteAdminUserImageReq

// string token = 1;
void DeleteAdminUserImageReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteAdminUserImageReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageReq.token)
  return token_.GetNoArena();
}
void DeleteAdminUserImageReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserImageReq.token)
}
#if LANG_CXX11
void DeleteAdminUserImageReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserImageReq.token)
}
#endif
void DeleteAdminUserImageReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserImageReq.token)
}
void DeleteAdminUserImageReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserImageReq.token)
}
::std::string* DeleteAdminUserImageReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteAdminUserImageReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteAdminUserImageReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageReq.token)
}

// string user_id = 2;
void DeleteAdminUserImageReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteAdminUserImageReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageReq.user_id)
  return user_id_.GetNoArena();
}
void DeleteAdminUserImageReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserImageReq.user_id)
}
#if LANG_CXX11
void DeleteAdminUserImageReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserImageReq.user_id)
}
#endif
void DeleteAdminUserImageReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserImageReq.user_id)
}
void DeleteAdminUserImageReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserImageReq.user_id)
}
::std::string* DeleteAdminUserImageReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteAdminUserImageReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteAdminUserImageReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageReq.user_id)
}

// string image_md5 = 3;
void DeleteAdminUserImageReq::clear_image_md5() {
  image_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteAdminUserImageReq::image_md5() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageReq.image_md5)
  return image_md5_.GetNoArena();
}
void DeleteAdminUserImageReq::set_image_md5(const ::std::string& value) {
  
  image_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserImageReq.image_md5)
}
#if LANG_CXX11
void DeleteAdminUserImageReq::set_image_md5(::std::string&& value) {
  
  image_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserImageReq.image_md5)
}
#endif
void DeleteAdminUserImageReq::set_image_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserImageReq.image_md5)
}
void DeleteAdminUserImageReq::set_image_md5(const char* value, size_t size) {
  
  image_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserImageReq.image_md5)
}
::std::string* DeleteAdminUserImageReq::mutable_image_md5() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageReq.image_md5)
  return image_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteAdminUserImageReq::release_image_md5() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageReq.image_md5)
  
  return image_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteAdminUserImageReq::set_allocated_image_md5(::std::string* image_md5) {
  if (image_md5 != NULL) {
    
  } else {
    
  }
  image_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_md5);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageReq.image_md5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteAdminUserImageRep::kInfoFieldNumber;
const int DeleteAdminUserImageRep::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAdminUserImageRep::DeleteAdminUserImageRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DeleteAdminUserImageRep)
}
DeleteAdminUserImageRep::DeleteAdminUserImageRep(const DeleteAdminUserImageRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.has_info()) {
    info_ = new ::ttmall::ImageInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DeleteAdminUserImageRep)
}

void DeleteAdminUserImageRep::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_ = NULL;
  _cached_size_ = 0;
}

DeleteAdminUserImageRep::~DeleteAdminUserImageRep() {
  // @@protoc_insertion_point(destructor:ttmall.DeleteAdminUserImageRep)
  SharedDtor();
}

void DeleteAdminUserImageRep::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void DeleteAdminUserImageRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteAdminUserImageRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAdminUserImageRep& DeleteAdminUserImageRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteAdminUserImageRep* DeleteAdminUserImageRep::New(::google::protobuf::Arena* arena) const {
  DeleteAdminUserImageRep* n = new DeleteAdminUserImageRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteAdminUserImageRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DeleteAdminUserImageRep)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool DeleteAdminUserImageRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DeleteAdminUserImageRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.ImageInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteAdminUserImageRep.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DeleteAdminUserImageRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DeleteAdminUserImageRep)
  return false;
#undef DO_
}

void DeleteAdminUserImageRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DeleteAdminUserImageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.ImageInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserImageRep.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DeleteAdminUserImageRep)
}

::google::protobuf::uint8* DeleteAdminUserImageRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DeleteAdminUserImageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.ImageInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserImageRep.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DeleteAdminUserImageRep)
  return target;
}

size_t DeleteAdminUserImageRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DeleteAdminUserImageRep)
  size_t total_size = 0;

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // .ttmall.ImageInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteAdminUserImageRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DeleteAdminUserImageRep)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAdminUserImageRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAdminUserImageRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DeleteAdminUserImageRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DeleteAdminUserImageRep)
    MergeFrom(*source);
  }
}

void DeleteAdminUserImageRep::MergeFrom(const DeleteAdminUserImageRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DeleteAdminUserImageRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.has_info()) {
    mutable_info()->::ttmall::ImageInfo::MergeFrom(from.info());
  }
}

void DeleteAdminUserImageRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DeleteAdminUserImageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAdminUserImageRep::CopyFrom(const DeleteAdminUserImageRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DeleteAdminUserImageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAdminUserImageRep::IsInitialized() const {
  return true;
}

void DeleteAdminUserImageRep::Swap(DeleteAdminUserImageRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAdminUserImageRep::InternalSwap(DeleteAdminUserImageRep* other) {
  user_id_.Swap(&other->user_id_);
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteAdminUserImageRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteAdminUserImageRep

// .ttmall.ImageInfo info = 1;
bool DeleteAdminUserImageRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void DeleteAdminUserImageRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::ImageInfo& DeleteAdminUserImageRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
::ttmall::ImageInfo* DeleteAdminUserImageRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageRep.info)
  return info_;
}
::ttmall::ImageInfo* DeleteAdminUserImageRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageRep.info)
  
  ::ttmall::ImageInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void DeleteAdminUserImageRep::set_allocated_info(::ttmall::ImageInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageRep.info)
}

// string user_id = 2;
void DeleteAdminUserImageRep::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteAdminUserImageRep::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageRep.user_id)
  return user_id_.GetNoArena();
}
void DeleteAdminUserImageRep::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserImageRep.user_id)
}
#if LANG_CXX11
void DeleteAdminUserImageRep::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserImageRep.user_id)
}
#endif
void DeleteAdminUserImageRep::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserImageRep.user_id)
}
void DeleteAdminUserImageRep::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserImageRep.user_id)
}
::std::string* DeleteAdminUserImageRep::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageRep.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteAdminUserImageRep::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageRep.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteAdminUserImageRep::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageRep.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdminInfo::kIdFieldNumber;
const int AdminInfo::kCodeFieldNumber;
const int AdminInfo::kNameFieldNumber;
const int AdminInfo::kMobileFieldNumber;
const int AdminInfo::kRegionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdminInfo::AdminInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AdminInfo)
}
AdminInfo::AdminInfo(const AdminInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      regions_(from.regions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.AdminInfo)
}

void AdminInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AdminInfo::~AdminInfo() {
  // @@protoc_insertion_point(destructor:ttmall.AdminInfo)
  SharedDtor();
}

void AdminInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdminInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdminInfo::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdminInfo& AdminInfo::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdminInfo* AdminInfo::New(::google::protobuf::Arena* arena) const {
  AdminInfo* n = new AdminInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdminInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AdminInfo)
  regions_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AdminInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AdminInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminInfo.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminInfo.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string regions = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_regions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regions(this->regions_size() - 1).data(),
            this->regions(this->regions_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminInfo.regions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AdminInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AdminInfo)
  return false;
#undef DO_
}

void AdminInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AdminInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string mobile = 4;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mobile(), output);
  }

  // repeated string regions = 5;
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regions(i).data(), this->regions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.regions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->regions(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AdminInfo)
}

::google::protobuf::uint8* AdminInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AdminInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string mobile = 4;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mobile(), target);
  }

  // repeated string regions = 5;
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regions(i).data(), this->regions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminInfo.regions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->regions(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AdminInfo)
  return target;
}

size_t AdminInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AdminInfo)
  size_t total_size = 0;

  // repeated string regions = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->regions_size());
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->regions(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string mobile = 4;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdminInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AdminInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AdminInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdminInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AdminInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AdminInfo)
    MergeFrom(*source);
  }
}

void AdminInfo::MergeFrom(const AdminInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AdminInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
}

void AdminInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AdminInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdminInfo::CopyFrom(const AdminInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AdminInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminInfo::IsInitialized() const {
  return true;
}

void AdminInfo::Swap(AdminInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdminInfo::InternalSwap(AdminInfo* other) {
  regions_.InternalSwap(&other->regions_);
  id_.Swap(&other->id_);
  code_.Swap(&other->code_);
  name_.Swap(&other->name_);
  mobile_.Swap(&other->mobile_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdminInfo::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdminInfo

// string id = 1;
void AdminInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.id)
  return id_.GetNoArena();
}
void AdminInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.id)
}
#if LANG_CXX11
void AdminInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminInfo.id)
}
#endif
void AdminInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.id)
}
void AdminInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.id)
}
::std::string* AdminInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.AdminInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminInfo.id)
}

// string code = 2;
void AdminInfo::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminInfo::code() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.code)
  return code_.GetNoArena();
}
void AdminInfo::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.code)
}
#if LANG_CXX11
void AdminInfo::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminInfo.code)
}
#endif
void AdminInfo::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.code)
}
void AdminInfo::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.code)
}
::std::string* AdminInfo::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminInfo::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.AdminInfo.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminInfo::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminInfo.code)
}

// string name = 3;
void AdminInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.name)
  return name_.GetNoArena();
}
void AdminInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.name)
}
#if LANG_CXX11
void AdminInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminInfo.name)
}
#endif
void AdminInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.name)
}
void AdminInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.name)
}
::std::string* AdminInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.AdminInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminInfo.name)
}

// string mobile = 4;
void AdminInfo::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminInfo::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.mobile)
  return mobile_.GetNoArena();
}
void AdminInfo::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.mobile)
}
#if LANG_CXX11
void AdminInfo::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminInfo.mobile)
}
#endif
void AdminInfo::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.mobile)
}
void AdminInfo::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.mobile)
}
::std::string* AdminInfo::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminInfo::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.AdminInfo.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminInfo::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminInfo.mobile)
}

// repeated string regions = 5;
int AdminInfo::regions_size() const {
  return regions_.size();
}
void AdminInfo::clear_regions() {
  regions_.Clear();
}
const ::std::string& AdminInfo::regions(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.regions)
  return regions_.Get(index);
}
::std::string* AdminInfo::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.regions)
  return regions_.Mutable(index);
}
void AdminInfo::set_regions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.regions)
  regions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AdminInfo::set_regions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.regions)
  regions_.Mutable(index)->assign(std::move(value));
}
#endif
void AdminInfo::set_regions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.regions)
}
void AdminInfo::set_regions(int index, const char* value, size_t size) {
  regions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.regions)
}
::std::string* AdminInfo::add_regions() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.AdminInfo.regions)
  return regions_.Add();
}
void AdminInfo::add_regions(const ::std::string& value) {
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.AdminInfo.regions)
}
#if LANG_CXX11
void AdminInfo::add_regions(::std::string&& value) {
  regions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.AdminInfo.regions)
}
#endif
void AdminInfo::add_regions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.AdminInfo.regions)
}
void AdminInfo::add_regions(const char* value, size_t size) {
  regions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.AdminInfo.regions)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AdminInfo::regions() const {
  // @@protoc_insertion_point(field_list:ttmall.AdminInfo.regions)
  return regions_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AdminInfo::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.AdminInfo.regions)
  return &regions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdminLoginReq::kMobileFieldNumber;
const int AdminLoginReq::kPasswdFieldNumber;
const int AdminLoginReq::kPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdminLoginReq::AdminLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AdminLoginReq)
}
AdminLoginReq::AdminLoginReq(const AdminLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passwd().size() > 0) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.AdminLoginReq)
}

void AdminLoginReq::SharedCtor() {
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AdminLoginReq::~AdminLoginReq() {
  // @@protoc_insertion_point(destructor:ttmall.AdminLoginReq)
  SharedDtor();
}

void AdminLoginReq::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdminLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdminLoginReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdminLoginReq& AdminLoginReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdminLoginReq* AdminLoginReq::New(::google::protobuf::Arena* arena) const {
  AdminLoginReq* n = new AdminLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdminLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AdminLoginReq)
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AdminLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AdminLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminLoginReq.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminLoginReq.passwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminLoginReq.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AdminLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AdminLoginReq)
  return false;
#undef DO_
}

void AdminLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AdminLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminLoginReq.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  // string passwd = 2;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminLoginReq.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwd(), output);
  }

  // string platform = 3;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminLoginReq.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->platform(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AdminLoginReq)
}

::google::protobuf::uint8* AdminLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AdminLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminLoginReq.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  // string passwd = 2;
  if (this->passwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminLoginReq.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwd(), target);
  }

  // string platform = 3;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminLoginReq.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->platform(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AdminLoginReq)
  return target;
}

size_t AdminLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AdminLoginReq)
  size_t total_size = 0;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // string passwd = 2;
  if (this->passwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  // string platform = 3;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdminLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AdminLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AdminLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdminLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AdminLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AdminLoginReq)
    MergeFrom(*source);
  }
}

void AdminLoginReq::MergeFrom(const AdminLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AdminLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.passwd().size() > 0) {

    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
}

void AdminLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AdminLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdminLoginReq::CopyFrom(const AdminLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AdminLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminLoginReq::IsInitialized() const {
  return true;
}

void AdminLoginReq::Swap(AdminLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdminLoginReq::InternalSwap(AdminLoginReq* other) {
  mobile_.Swap(&other->mobile_);
  passwd_.Swap(&other->passwd_);
  platform_.Swap(&other->platform_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdminLoginReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdminLoginReq

// string mobile = 1;
void AdminLoginReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminLoginReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginReq.mobile)
  return mobile_.GetNoArena();
}
void AdminLoginReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminLoginReq.mobile)
}
#if LANG_CXX11
void AdminLoginReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminLoginReq.mobile)
}
#endif
void AdminLoginReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminLoginReq.mobile)
}
void AdminLoginReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminLoginReq.mobile)
}
::std::string* AdminLoginReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminLoginReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminLoginReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginReq.mobile)
}

// string passwd = 2;
void AdminLoginReq::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminLoginReq::passwd() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginReq.passwd)
  return passwd_.GetNoArena();
}
void AdminLoginReq::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminLoginReq.passwd)
}
#if LANG_CXX11
void AdminLoginReq::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminLoginReq.passwd)
}
#endif
void AdminLoginReq::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminLoginReq.passwd)
}
void AdminLoginReq::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminLoginReq.passwd)
}
::std::string* AdminLoginReq::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginReq.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminLoginReq::release_passwd() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginReq.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminLoginReq::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginReq.passwd)
}

// string platform = 3;
void AdminLoginReq::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminLoginReq::platform() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginReq.platform)
  return platform_.GetNoArena();
}
void AdminLoginReq::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminLoginReq.platform)
}
#if LANG_CXX11
void AdminLoginReq::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminLoginReq.platform)
}
#endif
void AdminLoginReq::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminLoginReq.platform)
}
void AdminLoginReq::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminLoginReq.platform)
}
::std::string* AdminLoginReq::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginReq.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminLoginReq::release_platform() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginReq.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminLoginReq::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginReq.platform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdminLoginRep::kTokenFieldNumber;
const int AdminLoginRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdminLoginRep::AdminLoginRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AdminLoginRep)
}
AdminLoginRep::AdminLoginRep(const AdminLoginRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_info()) {
    info_ = new ::ttmall::AdminInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.AdminLoginRep)
}

void AdminLoginRep::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_ = NULL;
  _cached_size_ = 0;
}

AdminLoginRep::~AdminLoginRep() {
  // @@protoc_insertion_point(destructor:ttmall.AdminLoginRep)
  SharedDtor();
}

void AdminLoginRep::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void AdminLoginRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdminLoginRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdminLoginRep& AdminLoginRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdminLoginRep* AdminLoginRep::New(::google::protobuf::Arena* arena) const {
  AdminLoginRep* n = new AdminLoginRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdminLoginRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AdminLoginRep)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool AdminLoginRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AdminLoginRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AdminLoginRep.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.AdminInfo Info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AdminLoginRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AdminLoginRep)
  return false;
#undef DO_
}

void AdminLoginRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AdminLoginRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminLoginRep.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // .ttmall.AdminInfo Info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AdminLoginRep)
}

::google::protobuf::uint8* AdminLoginRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AdminLoginRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AdminLoginRep.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // .ttmall.AdminInfo Info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AdminLoginRep)
  return target;
}

size_t AdminLoginRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AdminLoginRep)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // .ttmall.AdminInfo Info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdminLoginRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AdminLoginRep)
  GOOGLE_DCHECK_NE(&from, this);
  const AdminLoginRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdminLoginRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AdminLoginRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AdminLoginRep)
    MergeFrom(*source);
  }
}

void AdminLoginRep::MergeFrom(const AdminLoginRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AdminLoginRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_info()) {
    mutable_info()->::ttmall::AdminInfo::MergeFrom(from.info());
  }
}

void AdminLoginRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AdminLoginRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdminLoginRep::CopyFrom(const AdminLoginRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AdminLoginRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminLoginRep::IsInitialized() const {
  return true;
}

void AdminLoginRep::Swap(AdminLoginRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdminLoginRep::InternalSwap(AdminLoginRep* other) {
  token_.Swap(&other->token_);
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdminLoginRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdminLoginRep

// string token = 1;
void AdminLoginRep::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminLoginRep::token() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginRep.token)
  return token_.GetNoArena();
}
void AdminLoginRep::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminLoginRep.token)
}
#if LANG_CXX11
void AdminLoginRep::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminLoginRep.token)
}
#endif
void AdminLoginRep::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminLoginRep.token)
}
void AdminLoginRep::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminLoginRep.token)
}
::std::string* AdminLoginRep::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginRep.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminLoginRep::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginRep.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminLoginRep::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginRep.token)
}

// .ttmall.AdminInfo Info = 2;
bool AdminLoginRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void AdminLoginRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::AdminInfo& AdminLoginRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginRep.Info)
  return info_ != NULL ? *info_
                         : *::ttmall::AdminInfo::internal_default_instance();
}
::ttmall::AdminInfo* AdminLoginRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AdminInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginRep.Info)
  return info_;
}
::ttmall::AdminInfo* AdminLoginRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginRep.Info)
  
  ::ttmall::AdminInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void AdminLoginRep::set_allocated_info(::ttmall::AdminInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginRep.Info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAdminInfoReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAdminInfoReq::GetAdminInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetAdminInfoReq)
}
GetAdminInfoReq::GetAdminInfoReq(const GetAdminInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetAdminInfoReq)
}

void GetAdminInfoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetAdminInfoReq::~GetAdminInfoReq() {
  // @@protoc_insertion_point(destructor:ttmall.GetAdminInfoReq)
  SharedDtor();
}

void GetAdminInfoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAdminInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAdminInfoReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAdminInfoReq& GetAdminInfoReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAdminInfoReq* GetAdminInfoReq::New(::google::protobuf::Arena* arena) const {
  GetAdminInfoReq* n = new GetAdminInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAdminInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetAdminInfoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetAdminInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetAdminInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetAdminInfoReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetAdminInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetAdminInfoReq)
  return false;
#undef DO_
}

void GetAdminInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetAdminInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetAdminInfoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetAdminInfoReq)
}

::google::protobuf::uint8* GetAdminInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetAdminInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetAdminInfoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetAdminInfoReq)
  return target;
}

size_t GetAdminInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetAdminInfoReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAdminInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetAdminInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAdminInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAdminInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetAdminInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetAdminInfoReq)
    MergeFrom(*source);
  }
}

void GetAdminInfoReq::MergeFrom(const GetAdminInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetAdminInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void GetAdminInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetAdminInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAdminInfoReq::CopyFrom(const GetAdminInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetAdminInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAdminInfoReq::IsInitialized() const {
  return true;
}

void GetAdminInfoReq::Swap(GetAdminInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAdminInfoReq::InternalSwap(GetAdminInfoReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAdminInfoReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAdminInfoReq

// string token = 1;
void GetAdminInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetAdminInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetAdminInfoReq.token)
  return token_.GetNoArena();
}
void GetAdminInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetAdminInfoReq.token)
}
#if LANG_CXX11
void GetAdminInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetAdminInfoReq.token)
}
#endif
void GetAdminInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetAdminInfoReq.token)
}
void GetAdminInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetAdminInfoReq.token)
}
::std::string* GetAdminInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetAdminInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAdminInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetAdminInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAdminInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetAdminInfoReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAdminInfoRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAdminInfoRep::GetAdminInfoRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetAdminInfoRep)
}
GetAdminInfoRep::GetAdminInfoRep(const GetAdminInfoRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::AdminInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetAdminInfoRep)
}

void GetAdminInfoRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

GetAdminInfoRep::~GetAdminInfoRep() {
  // @@protoc_insertion_point(destructor:ttmall.GetAdminInfoRep)
  SharedDtor();
}

void GetAdminInfoRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void GetAdminInfoRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAdminInfoRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAdminInfoRep& GetAdminInfoRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAdminInfoRep* GetAdminInfoRep::New(::google::protobuf::Arena* arena) const {
  GetAdminInfoRep* n = new GetAdminInfoRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAdminInfoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetAdminInfoRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool GetAdminInfoRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetAdminInfoRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.AdminInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetAdminInfoRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetAdminInfoRep)
  return false;
#undef DO_
}

void GetAdminInfoRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetAdminInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AdminInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetAdminInfoRep)
}

::google::protobuf::uint8* GetAdminInfoRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetAdminInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AdminInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetAdminInfoRep)
  return target;
}

size_t GetAdminInfoRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetAdminInfoRep)
  size_t total_size = 0;

  // .ttmall.AdminInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAdminInfoRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetAdminInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAdminInfoRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAdminInfoRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetAdminInfoRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetAdminInfoRep)
    MergeFrom(*source);
  }
}

void GetAdminInfoRep::MergeFrom(const GetAdminInfoRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetAdminInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::AdminInfo::MergeFrom(from.info());
  }
}

void GetAdminInfoRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetAdminInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAdminInfoRep::CopyFrom(const GetAdminInfoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetAdminInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAdminInfoRep::IsInitialized() const {
  return true;
}

void GetAdminInfoRep::Swap(GetAdminInfoRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAdminInfoRep::InternalSwap(GetAdminInfoRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAdminInfoRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAdminInfoRep

// .ttmall.AdminInfo info = 1;
bool GetAdminInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void GetAdminInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::AdminInfo& GetAdminInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.GetAdminInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::AdminInfo::internal_default_instance();
}
::ttmall::AdminInfo* GetAdminInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AdminInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.GetAdminInfoRep.info)
  return info_;
}
::ttmall::AdminInfo* GetAdminInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.GetAdminInfoRep.info)
  
  ::ttmall::AdminInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void GetAdminInfoRep::set_allocated_info(::ttmall::AdminInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetAdminInfoRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteAdminUserAddressReq::kTokenFieldNumber;
const int DeleteAdminUserAddressReq::kUserIdFieldNumber;
const int DeleteAdminUserAddressReq::kAddrIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAdminUserAddressReq::DeleteAdminUserAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DeleteAdminUserAddressReq)
}
DeleteAdminUserAddressReq::DeleteAdminUserAddressReq(const DeleteAdminUserAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  addr_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr_id().size() > 0) {
    addr_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DeleteAdminUserAddressReq)
}

void DeleteAdminUserAddressReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteAdminUserAddressReq::~DeleteAdminUserAddressReq() {
  // @@protoc_insertion_point(destructor:ttmall.DeleteAdminUserAddressReq)
  SharedDtor();
}

void DeleteAdminUserAddressReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteAdminUserAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteAdminUserAddressReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAdminUserAddressReq& DeleteAdminUserAddressReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteAdminUserAddressReq* DeleteAdminUserAddressReq::New(::google::protobuf::Arena* arena) const {
  DeleteAdminUserAddressReq* n = new DeleteAdminUserAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteAdminUserAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DeleteAdminUserAddressReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteAdminUserAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DeleteAdminUserAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteAdminUserAddressReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteAdminUserAddressReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addr_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr_id().data(), this->addr_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteAdminUserAddressReq.addr_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DeleteAdminUserAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DeleteAdminUserAddressReq)
  return false;
#undef DO_
}

void DeleteAdminUserAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DeleteAdminUserAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserAddressReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserAddressReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string addr_id = 3;
  if (this->addr_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr_id().data(), this->addr_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserAddressReq.addr_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->addr_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DeleteAdminUserAddressReq)
}

::google::protobuf::uint8* DeleteAdminUserAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DeleteAdminUserAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserAddressReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserAddressReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string addr_id = 3;
  if (this->addr_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr_id().data(), this->addr_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserAddressReq.addr_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->addr_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DeleteAdminUserAddressReq)
  return target;
}

size_t DeleteAdminUserAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DeleteAdminUserAddressReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string addr_id = 3;
  if (this->addr_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteAdminUserAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DeleteAdminUserAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAdminUserAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAdminUserAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DeleteAdminUserAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DeleteAdminUserAddressReq)
    MergeFrom(*source);
  }
}

void DeleteAdminUserAddressReq::MergeFrom(const DeleteAdminUserAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DeleteAdminUserAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.addr_id().size() > 0) {

    addr_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_id_);
  }
}

void DeleteAdminUserAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DeleteAdminUserAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAdminUserAddressReq::CopyFrom(const DeleteAdminUserAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DeleteAdminUserAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAdminUserAddressReq::IsInitialized() const {
  return true;
}

void DeleteAdminUserAddressReq::Swap(DeleteAdminUserAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAdminUserAddressReq::InternalSwap(DeleteAdminUserAddressReq* other) {
  token_.Swap(&other->token_);
  user_id_.Swap(&other->user_id_);
  addr_id_.Swap(&other->addr_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteAdminUserAddressReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteAdminUserAddressReq

// string token = 1;
void DeleteAdminUserAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteAdminUserAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserAddressReq.token)
  return token_.GetNoArena();
}
void DeleteAdminUserAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserAddressReq.token)
}
#if LANG_CXX11
void DeleteAdminUserAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserAddressReq.token)
}
#endif
void DeleteAdminUserAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserAddressReq.token)
}
void DeleteAdminUserAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserAddressReq.token)
}
::std::string* DeleteAdminUserAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteAdminUserAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteAdminUserAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserAddressReq.token)
}

// string user_id = 2;
void DeleteAdminUserAddressReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteAdminUserAddressReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserAddressReq.user_id)
  return user_id_.GetNoArena();
}
void DeleteAdminUserAddressReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserAddressReq.user_id)
}
#if LANG_CXX11
void DeleteAdminUserAddressReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserAddressReq.user_id)
}
#endif
void DeleteAdminUserAddressReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserAddressReq.user_id)
}
void DeleteAdminUserAddressReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserAddressReq.user_id)
}
::std::string* DeleteAdminUserAddressReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserAddressReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteAdminUserAddressReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserAddressReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteAdminUserAddressReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserAddressReq.user_id)
}

// string addr_id = 3;
void DeleteAdminUserAddressReq::clear_addr_id() {
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteAdminUserAddressReq::addr_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserAddressReq.addr_id)
  return addr_id_.GetNoArena();
}
void DeleteAdminUserAddressReq::set_addr_id(const ::std::string& value) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserAddressReq.addr_id)
}
#if LANG_CXX11
void DeleteAdminUserAddressReq::set_addr_id(::std::string&& value) {
  
  addr_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserAddressReq.addr_id)
}
#endif
void DeleteAdminUserAddressReq::set_addr_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserAddressReq.addr_id)
}
void DeleteAdminUserAddressReq::set_addr_id(const char* value, size_t size) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserAddressReq.addr_id)
}
::std::string* DeleteAdminUserAddressReq::mutable_addr_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserAddressReq.addr_id)
  return addr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteAdminUserAddressReq::release_addr_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserAddressReq.addr_id)
  
  return addr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteAdminUserAddressReq::set_allocated_addr_id(::std::string* addr_id) {
  if (addr_id != NULL) {
    
  } else {
    
  }
  addr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserAddressReq.addr_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteAdminUserAddressRep::kAddrIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteAdminUserAddressRep::DeleteAdminUserAddressRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DeleteAdminUserAddressRep)
}
DeleteAdminUserAddressRep::DeleteAdminUserAddressRep(const DeleteAdminUserAddressRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr_id().size() > 0) {
    addr_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DeleteAdminUserAddressRep)
}

void DeleteAdminUserAddressRep::SharedCtor() {
  addr_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteAdminUserAddressRep::~DeleteAdminUserAddressRep() {
  // @@protoc_insertion_point(destructor:ttmall.DeleteAdminUserAddressRep)
  SharedDtor();
}

void DeleteAdminUserAddressRep::SharedDtor() {
  addr_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteAdminUserAddressRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteAdminUserAddressRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteAdminUserAddressRep& DeleteAdminUserAddressRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteAdminUserAddressRep* DeleteAdminUserAddressRep::New(::google::protobuf::Arena* arena) const {
  DeleteAdminUserAddressRep* n = new DeleteAdminUserAddressRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteAdminUserAddressRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DeleteAdminUserAddressRep)
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteAdminUserAddressRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DeleteAdminUserAddressRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string addr_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr_id().data(), this->addr_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteAdminUserAddressRep.addr_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DeleteAdminUserAddressRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DeleteAdminUserAddressRep)
  return false;
#undef DO_
}

void DeleteAdminUserAddressRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DeleteAdminUserAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr_id = 1;
  if (this->addr_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr_id().data(), this->addr_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserAddressRep.addr_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DeleteAdminUserAddressRep)
}

::google::protobuf::uint8* DeleteAdminUserAddressRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DeleteAdminUserAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr_id = 1;
  if (this->addr_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr_id().data(), this->addr_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteAdminUserAddressRep.addr_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DeleteAdminUserAddressRep)
  return target;
}

size_t DeleteAdminUserAddressRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DeleteAdminUserAddressRep)
  size_t total_size = 0;

  // string addr_id = 1;
  if (this->addr_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteAdminUserAddressRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DeleteAdminUserAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteAdminUserAddressRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteAdminUserAddressRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DeleteAdminUserAddressRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DeleteAdminUserAddressRep)
    MergeFrom(*source);
  }
}

void DeleteAdminUserAddressRep::MergeFrom(const DeleteAdminUserAddressRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DeleteAdminUserAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.addr_id().size() > 0) {

    addr_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_id_);
  }
}

void DeleteAdminUserAddressRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DeleteAdminUserAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteAdminUserAddressRep::CopyFrom(const DeleteAdminUserAddressRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DeleteAdminUserAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAdminUserAddressRep::IsInitialized() const {
  return true;
}

void DeleteAdminUserAddressRep::Swap(DeleteAdminUserAddressRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteAdminUserAddressRep::InternalSwap(DeleteAdminUserAddressRep* other) {
  addr_id_.Swap(&other->addr_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteAdminUserAddressRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteAdminUserAddressRep

// string addr_id = 1;
void DeleteAdminUserAddressRep::clear_addr_id() {
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteAdminUserAddressRep::addr_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserAddressRep.addr_id)
  return addr_id_.GetNoArena();
}
void DeleteAdminUserAddressRep::set_addr_id(const ::std::string& value) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserAddressRep.addr_id)
}
#if LANG_CXX11
void DeleteAdminUserAddressRep::set_addr_id(::std::string&& value) {
  
  addr_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserAddressRep.addr_id)
}
#endif
void DeleteAdminUserAddressRep::set_addr_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserAddressRep.addr_id)
}
void DeleteAdminUserAddressRep::set_addr_id(const char* value, size_t size) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserAddressRep.addr_id)
}
::std::string* DeleteAdminUserAddressRep::mutable_addr_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserAddressRep.addr_id)
  return addr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteAdminUserAddressRep::release_addr_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserAddressRep.addr_id)
  
  return addr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteAdminUserAddressRep::set_allocated_addr_id(::std::string* addr_id) {
  if (addr_id != NULL) {
    
  } else {
    
  }
  addr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserAddressRep.addr_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterAdminUserReq::kTokenFieldNumber;
const int RegisterAdminUserReq::kAuthTokenFieldNumber;
const int RegisterAdminUserReq::kAuthCodeFieldNumber;
const int RegisterAdminUserReq::kMobileFieldNumber;
const int RegisterAdminUserReq::kNameFieldNumber;
const int RegisterAdminUserReq::kOwnerFieldNumber;
const int RegisterAdminUserReq::kTypesFieldNumber;
const int RegisterAdminUserReq::kPassFieldNumber;
const int RegisterAdminUserReq::kRefereeFieldNumber;
const int RegisterAdminUserReq::kDeliverTimeFieldNumber;
const int RegisterAdminUserReq::kMarkFieldNumber;
const int RegisterAdminUserReq::kAddressFieldNumber;
const int RegisterAdminUserReq::kLevelFieldNumber;
const int RegisterAdminUserReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterAdminUserReq::RegisterAdminUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.RegisterAdminUserReq)
}
RegisterAdminUserReq::RegisterAdminUserReq(const RegisterAdminUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      types_(from.types_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  auth_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auth_token().size() > 0) {
    auth_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_token_);
  }
  auth_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auth_code().size() > 0) {
    auth_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_code_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner().size() > 0) {
    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pass().size() > 0) {
    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  referee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.referee().size() > 0) {
    referee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referee_);
  }
  deliver_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deliver_time().size() > 0) {
    deliver_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliver_time_);
  }
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mark().size() > 0) {
    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_address()) {
    address_ = new ::ttmall::AddressInfo(*from.address_);
  } else {
    address_ = NULL;
  }
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:ttmall.RegisterAdminUserReq)
}

void RegisterAdminUserReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&address_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&address_) + sizeof(level_));
  _cached_size_ = 0;
}

RegisterAdminUserReq::~RegisterAdminUserReq() {
  // @@protoc_insertion_point(destructor:ttmall.RegisterAdminUserReq)
  SharedDtor();
}

void RegisterAdminUserReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void RegisterAdminUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterAdminUserReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterAdminUserReq& RegisterAdminUserReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterAdminUserReq* RegisterAdminUserReq::New(::google::protobuf::Arena* arena) const {
  RegisterAdminUserReq* n = new RegisterAdminUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterAdminUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.RegisterAdminUserReq)
  types_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  level_ = 0;
}

bool RegisterAdminUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.RegisterAdminUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string auth_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auth_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auth_token().data(), this->auth_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.auth_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string auth_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auth_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auth_code().data(), this->auth_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.auth_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner().data(), this->owner().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string types = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->types(this->types_size() - 1).data(),
            this->types(this->types_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pass = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pass().data(), this->pass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.pass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string referee = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referee()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->referee().data(), this->referee().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.referee"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deliver_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliver_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deliver_time().data(), this->deliver_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.deliver_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mark = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mark().data(), this->mark().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.mark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.AddressInfo address = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegisterAdminUserReq.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.RegisterAdminUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.RegisterAdminUserReq)
  return false;
#undef DO_
}

void RegisterAdminUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.RegisterAdminUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string auth_token = 2;
  if (this->auth_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_token().data(), this->auth_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.auth_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->auth_token(), output);
  }

  // string auth_code = 3;
  if (this->auth_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_code().data(), this->auth_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.auth_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->auth_code(), output);
  }

  // string mobile = 4;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mobile(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // string owner = 6;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->owner(), output);
  }

  // repeated string types = 7;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->types(i).data(), this->types(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->types(i), output);
  }

  // string pass = 8;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->pass(), output);
  }

  // string referee = 9;
  if (this->referee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referee().data(), this->referee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.referee");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->referee(), output);
  }

  // string deliver_time = 10;
  if (this->deliver_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_time().data(), this->deliver_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.deliver_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->deliver_time(), output);
  }

  // string mark = 11;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.mark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->mark(), output);
  }

  // .ttmall.AddressInfo address = 12;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->address_, output);
  }

  // int32 level = 13;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->level(), output);
  }

  // string type = 14;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.RegisterAdminUserReq)
}

::google::protobuf::uint8* RegisterAdminUserReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.RegisterAdminUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string auth_token = 2;
  if (this->auth_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_token().data(), this->auth_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.auth_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->auth_token(), target);
  }

  // string auth_code = 3;
  if (this->auth_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth_code().data(), this->auth_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.auth_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->auth_code(), target);
  }

  // string mobile = 4;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mobile(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // string owner = 6;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->owner(), target);
  }

  // repeated string types = 7;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->types(i).data(), this->types(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->types(i), target);
  }

  // string pass = 8;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->pass(), target);
  }

  // string referee = 9;
  if (this->referee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referee().data(), this->referee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.referee");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->referee(), target);
  }

  // string deliver_time = 10;
  if (this->deliver_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_time().data(), this->deliver_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.deliver_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->deliver_time(), target);
  }

  // string mark = 11;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.mark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->mark(), target);
  }

  // .ttmall.AddressInfo address = 12;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->address_, deterministic, target);
  }

  // int32 level = 13;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->level(), target);
  }

  // string type = 14;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegisterAdminUserReq.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.RegisterAdminUserReq)
  return target;
}

size_t RegisterAdminUserReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.RegisterAdminUserReq)
  size_t total_size = 0;

  // repeated string types = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->types_size());
  for (int i = 0, n = this->types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->types(i));
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string auth_token = 2;
  if (this->auth_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auth_token());
  }

  // string auth_code = 3;
  if (this->auth_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auth_code());
  }

  // string mobile = 4;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string owner = 6;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  // string pass = 8;
  if (this->pass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());
  }

  // string referee = 9;
  if (this->referee().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->referee());
  }

  // string deliver_time = 10;
  if (this->deliver_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deliver_time());
  }

  // string mark = 11;
  if (this->mark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mark());
  }

  // string type = 14;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .ttmall.AddressInfo address = 12;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  // int32 level = 13;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterAdminUserReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.RegisterAdminUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAdminUserReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterAdminUserReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.RegisterAdminUserReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.RegisterAdminUserReq)
    MergeFrom(*source);
  }
}

void RegisterAdminUserReq::MergeFrom(const RegisterAdminUserReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.RegisterAdminUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  types_.MergeFrom(from.types_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.auth_token().size() > 0) {

    auth_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_token_);
  }
  if (from.auth_code().size() > 0) {

    auth_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_code_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.owner().size() > 0) {

    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  if (from.pass().size() > 0) {

    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  if (from.referee().size() > 0) {

    referee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referee_);
  }
  if (from.deliver_time().size() > 0) {

    deliver_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliver_time_);
  }
  if (from.mark().size() > 0) {

    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_address()) {
    mutable_address()->::ttmall::AddressInfo::MergeFrom(from.address());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void RegisterAdminUserReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.RegisterAdminUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAdminUserReq::CopyFrom(const RegisterAdminUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.RegisterAdminUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAdminUserReq::IsInitialized() const {
  return true;
}

void RegisterAdminUserReq::Swap(RegisterAdminUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterAdminUserReq::InternalSwap(RegisterAdminUserReq* other) {
  types_.InternalSwap(&other->types_);
  token_.Swap(&other->token_);
  auth_token_.Swap(&other->auth_token_);
  auth_code_.Swap(&other->auth_code_);
  mobile_.Swap(&other->mobile_);
  name_.Swap(&other->name_);
  owner_.Swap(&other->owner_);
  pass_.Swap(&other->pass_);
  referee_.Swap(&other->referee_);
  deliver_time_.Swap(&other->deliver_time_);
  mark_.Swap(&other->mark_);
  type_.Swap(&other->type_);
  std::swap(address_, other->address_);
  std::swap(level_, other->level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterAdminUserReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterAdminUserReq

// string token = 1;
void RegisterAdminUserReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.token)
  return token_.GetNoArena();
}
void RegisterAdminUserReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.token)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.token)
}
#endif
void RegisterAdminUserReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.token)
}
void RegisterAdminUserReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.token)
}
::std::string* RegisterAdminUserReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.token)
}

// string auth_token = 2;
void RegisterAdminUserReq::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::auth_token() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.auth_token)
  return auth_token_.GetNoArena();
}
void RegisterAdminUserReq::set_auth_token(const ::std::string& value) {
  
  auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.auth_token)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_auth_token(::std::string&& value) {
  
  auth_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.auth_token)
}
#endif
void RegisterAdminUserReq::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.auth_token)
}
void RegisterAdminUserReq::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.auth_token)
}
::std::string* RegisterAdminUserReq::mutable_auth_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.auth_token)
  return auth_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_auth_token() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.auth_token)
  
  return auth_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_auth_token(::std::string* auth_token) {
  if (auth_token != NULL) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.auth_token)
}

// string auth_code = 3;
void RegisterAdminUserReq::clear_auth_code() {
  auth_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::auth_code() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.auth_code)
  return auth_code_.GetNoArena();
}
void RegisterAdminUserReq::set_auth_code(const ::std::string& value) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.auth_code)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_auth_code(::std::string&& value) {
  
  auth_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.auth_code)
}
#endif
void RegisterAdminUserReq::set_auth_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.auth_code)
}
void RegisterAdminUserReq::set_auth_code(const char* value, size_t size) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.auth_code)
}
::std::string* RegisterAdminUserReq::mutable_auth_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.auth_code)
  return auth_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_auth_code() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.auth_code)
  
  return auth_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_auth_code(::std::string* auth_code) {
  if (auth_code != NULL) {
    
  } else {
    
  }
  auth_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.auth_code)
}

// string mobile = 4;
void RegisterAdminUserReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.mobile)
  return mobile_.GetNoArena();
}
void RegisterAdminUserReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.mobile)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.mobile)
}
#endif
void RegisterAdminUserReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.mobile)
}
void RegisterAdminUserReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.mobile)
}
::std::string* RegisterAdminUserReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.mobile)
}

// string name = 5;
void RegisterAdminUserReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.name)
  return name_.GetNoArena();
}
void RegisterAdminUserReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.name)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.name)
}
#endif
void RegisterAdminUserReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.name)
}
void RegisterAdminUserReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.name)
}
::std::string* RegisterAdminUserReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.name)
}

// string owner = 6;
void RegisterAdminUserReq::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::owner() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.owner)
  return owner_.GetNoArena();
}
void RegisterAdminUserReq::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.owner)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_owner(::std::string&& value) {
  
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.owner)
}
#endif
void RegisterAdminUserReq::set_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.owner)
}
void RegisterAdminUserReq::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.owner)
}
::std::string* RegisterAdminUserReq::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_owner() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.owner)
}

// repeated string types = 7;
int RegisterAdminUserReq::types_size() const {
  return types_.size();
}
void RegisterAdminUserReq::clear_types() {
  types_.Clear();
}
const ::std::string& RegisterAdminUserReq::types(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.types)
  return types_.Get(index);
}
::std::string* RegisterAdminUserReq::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.types)
  return types_.Mutable(index);
}
void RegisterAdminUserReq::set_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.types)
  types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void RegisterAdminUserReq::set_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.types)
  types_.Mutable(index)->assign(std::move(value));
}
#endif
void RegisterAdminUserReq::set_types(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.types)
}
void RegisterAdminUserReq::set_types(int index, const char* value, size_t size) {
  types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.types)
}
::std::string* RegisterAdminUserReq::add_types() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.RegisterAdminUserReq.types)
  return types_.Add();
}
void RegisterAdminUserReq::add_types(const ::std::string& value) {
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.RegisterAdminUserReq.types)
}
#if LANG_CXX11
void RegisterAdminUserReq::add_types(::std::string&& value) {
  types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.RegisterAdminUserReq.types)
}
#endif
void RegisterAdminUserReq::add_types(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.RegisterAdminUserReq.types)
}
void RegisterAdminUserReq::add_types(const char* value, size_t size) {
  types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.RegisterAdminUserReq.types)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RegisterAdminUserReq::types() const {
  // @@protoc_insertion_point(field_list:ttmall.RegisterAdminUserReq.types)
  return types_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RegisterAdminUserReq::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.RegisterAdminUserReq.types)
  return &types_;
}

// string pass = 8;
void RegisterAdminUserReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::pass() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.pass)
  return pass_.GetNoArena();
}
void RegisterAdminUserReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.pass)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_pass(::std::string&& value) {
  
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.pass)
}
#endif
void RegisterAdminUserReq::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.pass)
}
void RegisterAdminUserReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.pass)
}
::std::string* RegisterAdminUserReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_pass() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.pass)
}

// string referee = 9;
void RegisterAdminUserReq::clear_referee() {
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::referee() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.referee)
  return referee_.GetNoArena();
}
void RegisterAdminUserReq::set_referee(const ::std::string& value) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.referee)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_referee(::std::string&& value) {
  
  referee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.referee)
}
#endif
void RegisterAdminUserReq::set_referee(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.referee)
}
void RegisterAdminUserReq::set_referee(const char* value, size_t size) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.referee)
}
::std::string* RegisterAdminUserReq::mutable_referee() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.referee)
  return referee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_referee() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.referee)
  
  return referee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_referee(::std::string* referee) {
  if (referee != NULL) {
    
  } else {
    
  }
  referee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referee);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.referee)
}

// string deliver_time = 10;
void RegisterAdminUserReq::clear_deliver_time() {
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.deliver_time)
  return deliver_time_.GetNoArena();
}
void RegisterAdminUserReq::set_deliver_time(const ::std::string& value) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.deliver_time)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_deliver_time(::std::string&& value) {
  
  deliver_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.deliver_time)
}
#endif
void RegisterAdminUserReq::set_deliver_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.deliver_time)
}
void RegisterAdminUserReq::set_deliver_time(const char* value, size_t size) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.deliver_time)
}
::std::string* RegisterAdminUserReq::mutable_deliver_time() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.deliver_time)
  return deliver_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.deliver_time)
  
  return deliver_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_deliver_time(::std::string* deliver_time) {
  if (deliver_time != NULL) {
    
  } else {
    
  }
  deliver_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliver_time);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.deliver_time)
}

// string mark = 11;
void RegisterAdminUserReq::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.mark)
  return mark_.GetNoArena();
}
void RegisterAdminUserReq::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.mark)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.mark)
}
#endif
void RegisterAdminUserReq::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.mark)
}
void RegisterAdminUserReq::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.mark)
}
::std::string* RegisterAdminUserReq::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.mark)
}

// .ttmall.AddressInfo address = 12;
bool RegisterAdminUserReq::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void RegisterAdminUserReq::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::ttmall::AddressInfo& RegisterAdminUserReq::address() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.address)
  return address_ != NULL ? *address_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
::ttmall::AddressInfo* RegisterAdminUserReq::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.address)
  return address_;
}
::ttmall::AddressInfo* RegisterAdminUserReq::release_address() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.address)
  
  ::ttmall::AddressInfo* temp = address_;
  address_ = NULL;
  return temp;
}
void RegisterAdminUserReq::set_allocated_address(::ttmall::AddressInfo* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.address)
}

// int32 level = 13;
void RegisterAdminUserReq::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 RegisterAdminUserReq::level() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.level)
  return level_;
}
void RegisterAdminUserReq::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.level)
}

// string type = 14;
void RegisterAdminUserReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegisterAdminUserReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.type)
  return type_.GetNoArena();
}
void RegisterAdminUserReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.type)
}
#if LANG_CXX11
void RegisterAdminUserReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.type)
}
#endif
void RegisterAdminUserReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.type)
}
void RegisterAdminUserReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.type)
}
::std::string* RegisterAdminUserReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterAdminUserReq::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterAdminUserReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterAdminUserRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterAdminUserRep::RegisterAdminUserRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.RegisterAdminUserRep)
}
RegisterAdminUserRep::RegisterAdminUserRep(const RegisterAdminUserRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.RegisterAdminUserRep)
}

void RegisterAdminUserRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

RegisterAdminUserRep::~RegisterAdminUserRep() {
  // @@protoc_insertion_point(destructor:ttmall.RegisterAdminUserRep)
  SharedDtor();
}

void RegisterAdminUserRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void RegisterAdminUserRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterAdminUserRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterAdminUserRep& RegisterAdminUserRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterAdminUserRep* RegisterAdminUserRep::New(::google::protobuf::Arena* arena) const {
  RegisterAdminUserRep* n = new RegisterAdminUserRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterAdminUserRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.RegisterAdminUserRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool RegisterAdminUserRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.RegisterAdminUserRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.UserInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.RegisterAdminUserRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.RegisterAdminUserRep)
  return false;
#undef DO_
}

void RegisterAdminUserRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.RegisterAdminUserRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.RegisterAdminUserRep)
}

::google::protobuf::uint8* RegisterAdminUserRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.RegisterAdminUserRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.RegisterAdminUserRep)
  return target;
}

size_t RegisterAdminUserRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.RegisterAdminUserRep)
  size_t total_size = 0;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterAdminUserRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.RegisterAdminUserRep)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAdminUserRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterAdminUserRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.RegisterAdminUserRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.RegisterAdminUserRep)
    MergeFrom(*source);
  }
}

void RegisterAdminUserRep::MergeFrom(const RegisterAdminUserRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.RegisterAdminUserRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::UserInfo::MergeFrom(from.info());
  }
}

void RegisterAdminUserRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.RegisterAdminUserRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAdminUserRep::CopyFrom(const RegisterAdminUserRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.RegisterAdminUserRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAdminUserRep::IsInitialized() const {
  return true;
}

void RegisterAdminUserRep::Swap(RegisterAdminUserRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterAdminUserRep::InternalSwap(RegisterAdminUserRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterAdminUserRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterAdminUserRep

// .ttmall.UserInfo info = 1;
bool RegisterAdminUserRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void RegisterAdminUserRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::UserInfo& RegisterAdminUserRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
::ttmall::UserInfo* RegisterAdminUserRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserRep.info)
  return info_;
}
::ttmall::UserInfo* RegisterAdminUserRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void RegisterAdminUserRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAdminUserDefaultAddressReq::kTokenFieldNumber;
const int SetAdminUserDefaultAddressReq::kUserIdFieldNumber;
const int SetAdminUserDefaultAddressReq::kAddrIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAdminUserDefaultAddressReq::SetAdminUserDefaultAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetAdminUserDefaultAddressReq)
}
SetAdminUserDefaultAddressReq::SetAdminUserDefaultAddressReq(const SetAdminUserDefaultAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  addr_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr_id().size() > 0) {
    addr_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SetAdminUserDefaultAddressReq)
}

void SetAdminUserDefaultAddressReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetAdminUserDefaultAddressReq::~SetAdminUserDefaultAddressReq() {
  // @@protoc_insertion_point(destructor:ttmall.SetAdminUserDefaultAddressReq)
  SharedDtor();
}

void SetAdminUserDefaultAddressReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetAdminUserDefaultAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetAdminUserDefaultAddressReq::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetAdminUserDefaultAddressReq& SetAdminUserDefaultAddressReq::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetAdminUserDefaultAddressReq* SetAdminUserDefaultAddressReq::New(::google::protobuf::Arena* arena) const {
  SetAdminUserDefaultAddressReq* n = new SetAdminUserDefaultAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetAdminUserDefaultAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetAdminUserDefaultAddressReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SetAdminUserDefaultAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetAdminUserDefaultAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetAdminUserDefaultAddressReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetAdminUserDefaultAddressReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addr_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr_id().data(), this->addr_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetAdminUserDefaultAddressReq.addr_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetAdminUserDefaultAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetAdminUserDefaultAddressReq)
  return false;
#undef DO_
}

void SetAdminUserDefaultAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetAdminUserDefaultAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetAdminUserDefaultAddressReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetAdminUserDefaultAddressReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string addr_id = 3;
  if (this->addr_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr_id().data(), this->addr_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetAdminUserDefaultAddressReq.addr_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->addr_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SetAdminUserDefaultAddressReq)
}

::google::protobuf::uint8* SetAdminUserDefaultAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetAdminUserDefaultAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetAdminUserDefaultAddressReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetAdminUserDefaultAddressReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string addr_id = 3;
  if (this->addr_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr_id().data(), this->addr_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetAdminUserDefaultAddressReq.addr_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->addr_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetAdminUserDefaultAddressReq)
  return target;
}

size_t SetAdminUserDefaultAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetAdminUserDefaultAddressReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string addr_id = 3;
  if (this->addr_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetAdminUserDefaultAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetAdminUserDefaultAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAdminUserDefaultAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetAdminUserDefaultAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetAdminUserDefaultAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetAdminUserDefaultAddressReq)
    MergeFrom(*source);
  }
}

void SetAdminUserDefaultAddressReq::MergeFrom(const SetAdminUserDefaultAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetAdminUserDefaultAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.addr_id().size() > 0) {

    addr_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_id_);
  }
}

void SetAdminUserDefaultAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetAdminUserDefaultAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAdminUserDefaultAddressReq::CopyFrom(const SetAdminUserDefaultAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetAdminUserDefaultAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAdminUserDefaultAddressReq::IsInitialized() const {
  return true;
}

void SetAdminUserDefaultAddressReq::Swap(SetAdminUserDefaultAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAdminUserDefaultAddressReq::InternalSwap(SetAdminUserDefaultAddressReq* other) {
  token_.Swap(&other->token_);
  user_id_.Swap(&other->user_id_);
  addr_id_.Swap(&other->addr_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetAdminUserDefaultAddressReq::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetAdminUserDefaultAddressReq

// string token = 1;
void SetAdminUserDefaultAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetAdminUserDefaultAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SetAdminUserDefaultAddressReq.token)
  return token_.GetNoArena();
}
void SetAdminUserDefaultAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetAdminUserDefaultAddressReq.token)
}
#if LANG_CXX11
void SetAdminUserDefaultAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetAdminUserDefaultAddressReq.token)
}
#endif
void SetAdminUserDefaultAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetAdminUserDefaultAddressReq.token)
}
void SetAdminUserDefaultAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetAdminUserDefaultAddressReq.token)
}
::std::string* SetAdminUserDefaultAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetAdminUserDefaultAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetAdminUserDefaultAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SetAdminUserDefaultAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetAdminUserDefaultAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetAdminUserDefaultAddressReq.token)
}

// string user_id = 2;
void SetAdminUserDefaultAddressReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetAdminUserDefaultAddressReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetAdminUserDefaultAddressReq.user_id)
  return user_id_.GetNoArena();
}
void SetAdminUserDefaultAddressReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetAdminUserDefaultAddressReq.user_id)
}
#if LANG_CXX11
void SetAdminUserDefaultAddressReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetAdminUserDefaultAddressReq.user_id)
}
#endif
void SetAdminUserDefaultAddressReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetAdminUserDefaultAddressReq.user_id)
}
void SetAdminUserDefaultAddressReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetAdminUserDefaultAddressReq.user_id)
}
::std::string* SetAdminUserDefaultAddressReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetAdminUserDefaultAddressReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetAdminUserDefaultAddressReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetAdminUserDefaultAddressReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetAdminUserDefaultAddressReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetAdminUserDefaultAddressReq.user_id)
}

// string addr_id = 3;
void SetAdminUserDefaultAddressReq::clear_addr_id() {
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetAdminUserDefaultAddressReq::addr_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetAdminUserDefaultAddressReq.addr_id)
  return addr_id_.GetNoArena();
}
void SetAdminUserDefaultAddressReq::set_addr_id(const ::std::string& value) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}
#if LANG_CXX11
void SetAdminUserDefaultAddressReq::set_addr_id(::std::string&& value) {
  
  addr_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}
#endif
void SetAdminUserDefaultAddressReq::set_addr_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}
void SetAdminUserDefaultAddressReq::set_addr_id(const char* value, size_t size) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}
::std::string* SetAdminUserDefaultAddressReq::mutable_addr_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetAdminUserDefaultAddressReq.addr_id)
  return addr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetAdminUserDefaultAddressReq::release_addr_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetAdminUserDefaultAddressReq.addr_id)
  
  return addr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetAdminUserDefaultAddressReq::set_allocated_addr_id(::std::string* addr_id) {
  if (addr_id != NULL) {
    
  } else {
    
  }
  addr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAdminUserDefaultAddressRep::kAddrIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAdminUserDefaultAddressRep::SetAdminUserDefaultAddressRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_admin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetAdminUserDefaultAddressRep)
}
SetAdminUserDefaultAddressRep::SetAdminUserDefaultAddressRep(const SetAdminUserDefaultAddressRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr_id().size() > 0) {
    addr_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SetAdminUserDefaultAddressRep)
}

void SetAdminUserDefaultAddressRep::SharedCtor() {
  addr_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetAdminUserDefaultAddressRep::~SetAdminUserDefaultAddressRep() {
  // @@protoc_insertion_point(destructor:ttmall.SetAdminUserDefaultAddressRep)
  SharedDtor();
}

void SetAdminUserDefaultAddressRep::SharedDtor() {
  addr_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetAdminUserDefaultAddressRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetAdminUserDefaultAddressRep::descriptor() {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetAdminUserDefaultAddressRep& SetAdminUserDefaultAddressRep::default_instance() {
  protobuf_admin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetAdminUserDefaultAddressRep* SetAdminUserDefaultAddressRep::New(::google::protobuf::Arena* arena) const {
  SetAdminUserDefaultAddressRep* n = new SetAdminUserDefaultAddressRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetAdminUserDefaultAddressRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetAdminUserDefaultAddressRep)
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SetAdminUserDefaultAddressRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetAdminUserDefaultAddressRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string addr_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr_id().data(), this->addr_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetAdminUserDefaultAddressRep.addr_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetAdminUserDefaultAddressRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetAdminUserDefaultAddressRep)
  return false;
#undef DO_
}

void SetAdminUserDefaultAddressRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetAdminUserDefaultAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr_id = 1;
  if (this->addr_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr_id().data(), this->addr_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetAdminUserDefaultAddressRep.addr_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SetAdminUserDefaultAddressRep)
}

::google::protobuf::uint8* SetAdminUserDefaultAddressRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetAdminUserDefaultAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr_id = 1;
  if (this->addr_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr_id().data(), this->addr_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetAdminUserDefaultAddressRep.addr_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetAdminUserDefaultAddressRep)
  return target;
}

size_t SetAdminUserDefaultAddressRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetAdminUserDefaultAddressRep)
  size_t total_size = 0;

  // string addr_id = 1;
  if (this->addr_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetAdminUserDefaultAddressRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetAdminUserDefaultAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAdminUserDefaultAddressRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetAdminUserDefaultAddressRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetAdminUserDefaultAddressRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetAdminUserDefaultAddressRep)
    MergeFrom(*source);
  }
}

void SetAdminUserDefaultAddressRep::MergeFrom(const SetAdminUserDefaultAddressRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetAdminUserDefaultAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.addr_id().size() > 0) {

    addr_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_id_);
  }
}

void SetAdminUserDefaultAddressRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetAdminUserDefaultAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAdminUserDefaultAddressRep::CopyFrom(const SetAdminUserDefaultAddressRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetAdminUserDefaultAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAdminUserDefaultAddressRep::IsInitialized() const {
  return true;
}

void SetAdminUserDefaultAddressRep::Swap(SetAdminUserDefaultAddressRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAdminUserDefaultAddressRep::InternalSwap(SetAdminUserDefaultAddressRep* other) {
  addr_id_.Swap(&other->addr_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetAdminUserDefaultAddressRep::GetMetadata() const {
  protobuf_admin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_admin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetAdminUserDefaultAddressRep

// string addr_id = 1;
void SetAdminUserDefaultAddressRep::clear_addr_id() {
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetAdminUserDefaultAddressRep::addr_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetAdminUserDefaultAddressRep.addr_id)
  return addr_id_.GetNoArena();
}
void SetAdminUserDefaultAddressRep::set_addr_id(const ::std::string& value) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}
#if LANG_CXX11
void SetAdminUserDefaultAddressRep::set_addr_id(::std::string&& value) {
  
  addr_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}
#endif
void SetAdminUserDefaultAddressRep::set_addr_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}
void SetAdminUserDefaultAddressRep::set_addr_id(const char* value, size_t size) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}
::std::string* SetAdminUserDefaultAddressRep::mutable_addr_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetAdminUserDefaultAddressRep.addr_id)
  return addr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetAdminUserDefaultAddressRep::release_addr_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetAdminUserDefaultAddressRep.addr_id)
  
  return addr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetAdminUserDefaultAddressRep::set_allocated_addr_id(::std::string* addr_id) {
  if (addr_id != NULL) {
    
  } else {
    
  }
  addr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ttmall

// @@protoc_insertion_point(global_scope)
