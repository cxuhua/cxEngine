// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin.proto

#ifndef PROTOBUF_admin_2eproto__INCLUDED
#define PROTOBUF_admin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "public.pb.h"
// @@protoc_insertion_point(includes)
namespace ttmall {
class AddressInfo;
class AddressInfoDefaultTypeInternal;
extern AddressInfoDefaultTypeInternal _AddressInfo_default_instance_;
class AdminInfo;
class AdminInfoDefaultTypeInternal;
extern AdminInfoDefaultTypeInternal _AdminInfo_default_instance_;
class AdminLoginRep;
class AdminLoginRepDefaultTypeInternal;
extern AdminLoginRepDefaultTypeInternal _AdminLoginRep_default_instance_;
class AdminLoginReq;
class AdminLoginReqDefaultTypeInternal;
extern AdminLoginReqDefaultTypeInternal _AdminLoginReq_default_instance_;
class AttrGroup;
class AttrGroupDefaultTypeInternal;
extern AttrGroupDefaultTypeInternal _AttrGroup_default_instance_;
class AttrInfo;
class AttrInfoDefaultTypeInternal;
extern AttrInfoDefaultTypeInternal _AttrInfo_default_instance_;
class BrandInfo;
class BrandInfoDefaultTypeInternal;
extern BrandInfoDefaultTypeInternal _BrandInfo_default_instance_;
class CarInfo;
class CarInfoDefaultTypeInternal;
extern CarInfoDefaultTypeInternal _CarInfo_default_instance_;
class CheckUpdateRep;
class CheckUpdateRepDefaultTypeInternal;
extern CheckUpdateRepDefaultTypeInternal _CheckUpdateRep_default_instance_;
class CheckUpdateReq;
class CheckUpdateReqDefaultTypeInternal;
extern CheckUpdateReqDefaultTypeInternal _CheckUpdateReq_default_instance_;
class CoordInfo;
class CoordInfoDefaultTypeInternal;
extern CoordInfoDefaultTypeInternal _CoordInfo_default_instance_;
class CouponInfo;
class CouponInfoDefaultTypeInternal;
extern CouponInfoDefaultTypeInternal _CouponInfo_default_instance_;
class DeleteAdminUserAddressRep;
class DeleteAdminUserAddressRepDefaultTypeInternal;
extern DeleteAdminUserAddressRepDefaultTypeInternal _DeleteAdminUserAddressRep_default_instance_;
class DeleteAdminUserAddressReq;
class DeleteAdminUserAddressReqDefaultTypeInternal;
extern DeleteAdminUserAddressReqDefaultTypeInternal _DeleteAdminUserAddressReq_default_instance_;
class DeleteAdminUserImageRep;
class DeleteAdminUserImageRepDefaultTypeInternal;
extern DeleteAdminUserImageRepDefaultTypeInternal _DeleteAdminUserImageRep_default_instance_;
class DeleteAdminUserImageReq;
class DeleteAdminUserImageReqDefaultTypeInternal;
extern DeleteAdminUserImageReqDefaultTypeInternal _DeleteAdminUserImageReq_default_instance_;
class DeleteMessageRep;
class DeleteMessageRepDefaultTypeInternal;
extern DeleteMessageRepDefaultTypeInternal _DeleteMessageRep_default_instance_;
class DeleteMessageReq;
class DeleteMessageReqDefaultTypeInternal;
extern DeleteMessageReqDefaultTypeInternal _DeleteMessageReq_default_instance_;
class ExtInfo;
class ExtInfoDefaultTypeInternal;
extern ExtInfoDefaultTypeInternal _ExtInfo_default_instance_;
class GetAdminInfoRep;
class GetAdminInfoRepDefaultTypeInternal;
extern GetAdminInfoRepDefaultTypeInternal _GetAdminInfoRep_default_instance_;
class GetAdminInfoReq;
class GetAdminInfoReqDefaultTypeInternal;
extern GetAdminInfoReqDefaultTypeInternal _GetAdminInfoReq_default_instance_;
class GetNewMessageRep;
class GetNewMessageRepDefaultTypeInternal;
extern GetNewMessageRepDefaultTypeInternal _GetNewMessageRep_default_instance_;
class GetNewMessageReq;
class GetNewMessageReqDefaultTypeInternal;
extern GetNewMessageReqDefaultTypeInternal _GetNewMessageReq_default_instance_;
class GoodsInfo;
class GoodsInfoDefaultTypeInternal;
extern GoodsInfoDefaultTypeInternal _GoodsInfo_default_instance_;
class GoodsInfo_AttrsEntry;
class GoodsInfo_AttrsEntryDefaultTypeInternal;
extern GoodsInfo_AttrsEntryDefaultTypeInternal _GoodsInfo_AttrsEntry_default_instance_;
class GoodsInfo_MapsEntry;
class GoodsInfo_MapsEntryDefaultTypeInternal;
extern GoodsInfo_MapsEntryDefaultTypeInternal _GoodsInfo_MapsEntry_default_instance_;
class GoodsInfo_PricesEntry;
class GoodsInfo_PricesEntryDefaultTypeInternal;
extern GoodsInfo_PricesEntryDefaultTypeInternal _GoodsInfo_PricesEntry_default_instance_;
class ImageInfo;
class ImageInfoDefaultTypeInternal;
extern ImageInfoDefaultTypeInternal _ImageInfo_default_instance_;
class IndexAd;
class IndexAdDefaultTypeInternal;
extern IndexAdDefaultTypeInternal _IndexAd_default_instance_;
class IndexAdGroup;
class IndexAdGroupDefaultTypeInternal;
extern IndexAdGroupDefaultTypeInternal _IndexAdGroup_default_instance_;
class IndexAdInfoRep;
class IndexAdInfoRepDefaultTypeInternal;
extern IndexAdInfoRepDefaultTypeInternal _IndexAdInfoRep_default_instance_;
class IndexAdInfoReq;
class IndexAdInfoReqDefaultTypeInternal;
extern IndexAdInfoReqDefaultTypeInternal _IndexAdInfoReq_default_instance_;
class IndexRep;
class IndexRepDefaultTypeInternal;
extern IndexRepDefaultTypeInternal _IndexRep_default_instance_;
class IndexRep_GroupsEntry;
class IndexRep_GroupsEntryDefaultTypeInternal;
extern IndexRep_GroupsEntryDefaultTypeInternal _IndexRep_GroupsEntry_default_instance_;
class IndexReq;
class IndexReqDefaultTypeInternal;
extern IndexReqDefaultTypeInternal _IndexReq_default_instance_;
class IndexType;
class IndexTypeDefaultTypeInternal;
extern IndexTypeDefaultTypeInternal _IndexType_default_instance_;
class ListAdminUserAddressRep;
class ListAdminUserAddressRepDefaultTypeInternal;
extern ListAdminUserAddressRepDefaultTypeInternal _ListAdminUserAddressRep_default_instance_;
class ListAdminUserAddressReq;
class ListAdminUserAddressReqDefaultTypeInternal;
extern ListAdminUserAddressReqDefaultTypeInternal _ListAdminUserAddressReq_default_instance_;
class ListAdminUserRep;
class ListAdminUserRepDefaultTypeInternal;
extern ListAdminUserRepDefaultTypeInternal _ListAdminUserRep_default_instance_;
class ListAdminUserReq;
class ListAdminUserReqDefaultTypeInternal;
extern ListAdminUserReqDefaultTypeInternal _ListAdminUserReq_default_instance_;
class ListCarRep;
class ListCarRepDefaultTypeInternal;
extern ListCarRepDefaultTypeInternal _ListCarRep_default_instance_;
class ListCarReq;
class ListCarReqDefaultTypeInternal;
extern ListCarReqDefaultTypeInternal _ListCarReq_default_instance_;
class ListMessageRep;
class ListMessageRepDefaultTypeInternal;
extern ListMessageRepDefaultTypeInternal _ListMessageRep_default_instance_;
class ListMessageReq;
class ListMessageReqDefaultTypeInternal;
extern ListMessageReqDefaultTypeInternal _ListMessageReq_default_instance_;
class ListNoticeRep;
class ListNoticeRepDefaultTypeInternal;
extern ListNoticeRepDefaultTypeInternal _ListNoticeRep_default_instance_;
class ListNoticeReq;
class ListNoticeReqDefaultTypeInternal;
extern ListNoticeReqDefaultTypeInternal _ListNoticeReq_default_instance_;
class ListRegionsRep;
class ListRegionsRepDefaultTypeInternal;
extern ListRegionsRepDefaultTypeInternal _ListRegionsRep_default_instance_;
class ListRegionsReq;
class ListRegionsReqDefaultTypeInternal;
extern ListRegionsReqDefaultTypeInternal _ListRegionsReq_default_instance_;
class ListUserTypeRep;
class ListUserTypeRepDefaultTypeInternal;
extern ListUserTypeRepDefaultTypeInternal _ListUserTypeRep_default_instance_;
class ListUserTypeReq;
class ListUserTypeReqDefaultTypeInternal;
extern ListUserTypeReqDefaultTypeInternal _ListUserTypeReq_default_instance_;
class MapInfo;
class MapInfoDefaultTypeInternal;
extern MapInfoDefaultTypeInternal _MapInfo_default_instance_;
class MessageInfo;
class MessageInfoDefaultTypeInternal;
extern MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;
class NoticeInfo;
class NoticeInfoDefaultTypeInternal;
extern NoticeInfoDefaultTypeInternal _NoticeInfo_default_instance_;
class PriceInfo;
class PriceInfoDefaultTypeInternal;
extern PriceInfoDefaultTypeInternal _PriceInfo_default_instance_;
class PriceRange;
class PriceRangeDefaultTypeInternal;
extern PriceRangeDefaultTypeInternal _PriceRange_default_instance_;
class PublicInfoRep;
class PublicInfoRepDefaultTypeInternal;
extern PublicInfoRepDefaultTypeInternal _PublicInfoRep_default_instance_;
class PublicInfoReq;
class PublicInfoReqDefaultTypeInternal;
extern PublicInfoReqDefaultTypeInternal _PublicInfoReq_default_instance_;
class RegionInfo;
class RegionInfoDefaultTypeInternal;
extern RegionInfoDefaultTypeInternal _RegionInfo_default_instance_;
class RegisterAdminUserRep;
class RegisterAdminUserRepDefaultTypeInternal;
extern RegisterAdminUserRepDefaultTypeInternal _RegisterAdminUserRep_default_instance_;
class RegisterAdminUserReq;
class RegisterAdminUserReqDefaultTypeInternal;
extern RegisterAdminUserReqDefaultTypeInternal _RegisterAdminUserReq_default_instance_;
class SendAuthRep;
class SendAuthRepDefaultTypeInternal;
extern SendAuthRepDefaultTypeInternal _SendAuthRep_default_instance_;
class SendAuthReq;
class SendAuthReqDefaultTypeInternal;
extern SendAuthReqDefaultTypeInternal _SendAuthReq_default_instance_;
class SetAdminUserDefaultAddressRep;
class SetAdminUserDefaultAddressRepDefaultTypeInternal;
extern SetAdminUserDefaultAddressRepDefaultTypeInternal _SetAdminUserDefaultAddressRep_default_instance_;
class SetAdminUserDefaultAddressReq;
class SetAdminUserDefaultAddressReqDefaultTypeInternal;
extern SetAdminUserDefaultAddressReqDefaultTypeInternal _SetAdminUserDefaultAddressReq_default_instance_;
class SetDeviceIdRep;
class SetDeviceIdRepDefaultTypeInternal;
extern SetDeviceIdRepDefaultTypeInternal _SetDeviceIdRep_default_instance_;
class SetDeviceIdReq;
class SetDeviceIdReqDefaultTypeInternal;
extern SetDeviceIdReqDefaultTypeInternal _SetDeviceIdReq_default_instance_;
class SetInfo;
class SetInfoDefaultTypeInternal;
extern SetInfoDefaultTypeInternal _SetInfo_default_instance_;
class SetMessageReadRep;
class SetMessageReadRepDefaultTypeInternal;
extern SetMessageReadRepDefaultTypeInternal _SetMessageReadRep_default_instance_;
class SetMessageReadReq;
class SetMessageReadReqDefaultTypeInternal;
extern SetMessageReadReqDefaultTypeInternal _SetMessageReadReq_default_instance_;
class TypeInfo;
class TypeInfoDefaultTypeInternal;
extern TypeInfoDefaultTypeInternal _TypeInfo_default_instance_;
class UpdateAdminUserRep;
class UpdateAdminUserRepDefaultTypeInternal;
extern UpdateAdminUserRepDefaultTypeInternal _UpdateAdminUserRep_default_instance_;
class UpdateAdminUserReq;
class UpdateAdminUserReqDefaultTypeInternal;
extern UpdateAdminUserReqDefaultTypeInternal _UpdateAdminUserReq_default_instance_;
class UploadAdminUserImageRep;
class UploadAdminUserImageRepDefaultTypeInternal;
extern UploadAdminUserImageRepDefaultTypeInternal _UploadAdminUserImageRep_default_instance_;
class UploadAdminUserImageReq;
class UploadAdminUserImageReqDefaultTypeInternal;
extern UploadAdminUserImageReqDefaultTypeInternal _UploadAdminUserImageReq_default_instance_;
class UpsertAdminUserAddressRep;
class UpsertAdminUserAddressRepDefaultTypeInternal;
extern UpsertAdminUserAddressRepDefaultTypeInternal _UpsertAdminUserAddressRep_default_instance_;
class UpsertAdminUserAddressReq;
class UpsertAdminUserAddressReqDefaultTypeInternal;
extern UpsertAdminUserAddressReqDefaultTypeInternal _UpsertAdminUserAddressReq_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserType;
class UserTypeDefaultTypeInternal;
extern UserTypeDefaultTypeInternal _UserType_default_instance_;
class WareInfo;
class WareInfoDefaultTypeInternal;
extern WareInfoDefaultTypeInternal _WareInfo_default_instance_;
}  // namespace ttmall

namespace ttmall {

namespace protobuf_admin_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_admin_2eproto

// ===================================================================

class ListAdminUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListAdminUserReq) */ {
 public:
  ListAdminUserReq();
  virtual ~ListAdminUserReq();

  ListAdminUserReq(const ListAdminUserReq& from);

  inline ListAdminUserReq& operator=(const ListAdminUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListAdminUserReq& default_instance();

  static inline const ListAdminUserReq* internal_default_instance() {
    return reinterpret_cast<const ListAdminUserReq*>(
               &_ListAdminUserReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ListAdminUserReq* other);

  // implements Message ----------------------------------------------

  inline ListAdminUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListAdminUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListAdminUserReq& from);
  void MergeFrom(const ListAdminUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListAdminUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // int32 skip = 2;
  void clear_skip();
  static const int kSkipFieldNumber = 2;
  ::google::protobuf::int32 skip() const;
  void set_skip(::google::protobuf::int32 value);

  // int32 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.ListAdminUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 skip_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListAdminUserRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListAdminUserRep) */ {
 public:
  ListAdminUserRep();
  virtual ~ListAdminUserRep();

  ListAdminUserRep(const ListAdminUserRep& from);

  inline ListAdminUserRep& operator=(const ListAdminUserRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListAdminUserRep& default_instance();

  static inline const ListAdminUserRep* internal_default_instance() {
    return reinterpret_cast<const ListAdminUserRep*>(
               &_ListAdminUserRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ListAdminUserRep* other);

  // implements Message ----------------------------------------------

  inline ListAdminUserRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListAdminUserRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListAdminUserRep& from);
  void MergeFrom(const ListAdminUserRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListAdminUserRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.UserInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::UserInfo& items(int index) const;
  ::ttmall::UserInfo* mutable_items(int index);
  ::ttmall::UserInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::UserInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::UserInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListAdminUserRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::UserInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListAdminUserAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListAdminUserAddressReq) */ {
 public:
  ListAdminUserAddressReq();
  virtual ~ListAdminUserAddressReq();

  ListAdminUserAddressReq(const ListAdminUserAddressReq& from);

  inline ListAdminUserAddressReq& operator=(const ListAdminUserAddressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListAdminUserAddressReq& default_instance();

  static inline const ListAdminUserAddressReq* internal_default_instance() {
    return reinterpret_cast<const ListAdminUserAddressReq*>(
               &_ListAdminUserAddressReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ListAdminUserAddressReq* other);

  // implements Message ----------------------------------------------

  inline ListAdminUserAddressReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListAdminUserAddressReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListAdminUserAddressReq& from);
  void MergeFrom(const ListAdminUserAddressReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListAdminUserAddressReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ttmall.ListAdminUserAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListAdminUserAddressRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListAdminUserAddressRep) */ {
 public:
  ListAdminUserAddressRep();
  virtual ~ListAdminUserAddressRep();

  ListAdminUserAddressRep(const ListAdminUserAddressRep& from);

  inline ListAdminUserAddressRep& operator=(const ListAdminUserAddressRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListAdminUserAddressRep& default_instance();

  static inline const ListAdminUserAddressRep* internal_default_instance() {
    return reinterpret_cast<const ListAdminUserAddressRep*>(
               &_ListAdminUserAddressRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ListAdminUserAddressRep* other);

  // implements Message ----------------------------------------------

  inline ListAdminUserAddressRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListAdminUserAddressRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListAdminUserAddressRep& from);
  void MergeFrom(const ListAdminUserAddressRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListAdminUserAddressRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.AddressInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::AddressInfo& items(int index) const;
  ::ttmall::AddressInfo* mutable_items(int index);
  ::ttmall::AddressInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListAdminUserAddressRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateAdminUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpdateAdminUserReq) */ {
 public:
  UpdateAdminUserReq();
  virtual ~UpdateAdminUserReq();

  UpdateAdminUserReq(const UpdateAdminUserReq& from);

  inline UpdateAdminUserReq& operator=(const UpdateAdminUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAdminUserReq& default_instance();

  static inline const UpdateAdminUserReq* internal_default_instance() {
    return reinterpret_cast<const UpdateAdminUserReq*>(
               &_UpdateAdminUserReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UpdateAdminUserReq* other);

  // implements Message ----------------------------------------------

  inline UpdateAdminUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateAdminUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateAdminUserReq& from);
  void MergeFrom(const UpdateAdminUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateAdminUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string types = 5;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 5;
  const ::std::string& types(int index) const;
  ::std::string* mutable_types(int index);
  void set_types(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_types(int index, ::std::string&& value);
  #endif
  void set_types(int index, const char* value);
  void set_types(int index, const char* value, size_t size);
  ::std::string* add_types();
  void add_types(const ::std::string& value);
  #if LANG_CXX11
  void add_types(::std::string&& value);
  #endif
  void add_types(const char* value);
  void add_types(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& types() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_types();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string owner = 4;
  void clear_owner();
  static const int kOwnerFieldNumber = 4;
  const ::std::string& owner() const;
  void set_owner(const ::std::string& value);
  #if LANG_CXX11
  void set_owner(::std::string&& value);
  #endif
  void set_owner(const char* value);
  void set_owner(const char* value, size_t size);
  ::std::string* mutable_owner();
  ::std::string* release_owner();
  void set_allocated_owner(::std::string* owner);

  // string referee = 6;
  void clear_referee();
  static const int kRefereeFieldNumber = 6;
  const ::std::string& referee() const;
  void set_referee(const ::std::string& value);
  #if LANG_CXX11
  void set_referee(::std::string&& value);
  #endif
  void set_referee(const char* value);
  void set_referee(const char* value, size_t size);
  ::std::string* mutable_referee();
  ::std::string* release_referee();
  void set_allocated_referee(::std::string* referee);

  // string deliver_time = 7;
  void clear_deliver_time();
  static const int kDeliverTimeFieldNumber = 7;
  const ::std::string& deliver_time() const;
  void set_deliver_time(const ::std::string& value);
  #if LANG_CXX11
  void set_deliver_time(::std::string&& value);
  #endif
  void set_deliver_time(const char* value);
  void set_deliver_time(const char* value, size_t size);
  ::std::string* mutable_deliver_time();
  ::std::string* release_deliver_time();
  void set_allocated_deliver_time(::std::string* deliver_time);

  // string mark = 8;
  void clear_mark();
  static const int kMarkFieldNumber = 8;
  const ::std::string& mark() const;
  void set_mark(const ::std::string& value);
  #if LANG_CXX11
  void set_mark(::std::string&& value);
  #endif
  void set_mark(const char* value);
  void set_mark(const char* value, size_t size);
  ::std::string* mutable_mark();
  ::std::string* release_mark();
  void set_allocated_mark(::std::string* mark);

  // string type = 10;
  void clear_type();
  static const int kTypeFieldNumber = 10;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // int32 level = 9;
  void clear_level();
  static const int kLevelFieldNumber = 9;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.UpdateAdminUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> types_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr owner_;
  ::google::protobuf::internal::ArenaStringPtr referee_;
  ::google::protobuf::internal::ArenaStringPtr deliver_time_;
  ::google::protobuf::internal::ArenaStringPtr mark_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateAdminUserRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpdateAdminUserRep) */ {
 public:
  UpdateAdminUserRep();
  virtual ~UpdateAdminUserRep();

  UpdateAdminUserRep(const UpdateAdminUserRep& from);

  inline UpdateAdminUserRep& operator=(const UpdateAdminUserRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAdminUserRep& default_instance();

  static inline const UpdateAdminUserRep* internal_default_instance() {
    return reinterpret_cast<const UpdateAdminUserRep*>(
               &_UpdateAdminUserRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(UpdateAdminUserRep* other);

  // implements Message ----------------------------------------------

  inline UpdateAdminUserRep* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateAdminUserRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateAdminUserRep& from);
  void MergeFrom(const UpdateAdminUserRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateAdminUserRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.UserInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::UserInfo& info() const;
  ::ttmall::UserInfo* mutable_info();
  ::ttmall::UserInfo* release_info();
  void set_allocated_info(::ttmall::UserInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.UpdateAdminUserRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::UserInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpsertAdminUserAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpsertAdminUserAddressReq) */ {
 public:
  UpsertAdminUserAddressReq();
  virtual ~UpsertAdminUserAddressReq();

  UpsertAdminUserAddressReq(const UpsertAdminUserAddressReq& from);

  inline UpsertAdminUserAddressReq& operator=(const UpsertAdminUserAddressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpsertAdminUserAddressReq& default_instance();

  static inline const UpsertAdminUserAddressReq* internal_default_instance() {
    return reinterpret_cast<const UpsertAdminUserAddressReq*>(
               &_UpsertAdminUserAddressReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(UpsertAdminUserAddressReq* other);

  // implements Message ----------------------------------------------

  inline UpsertAdminUserAddressReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpsertAdminUserAddressReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpsertAdminUserAddressReq& from);
  void MergeFrom(const UpsertAdminUserAddressReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpsertAdminUserAddressReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string regions = 13;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 13;
  const ::std::string& regions(int index) const;
  ::std::string* mutable_regions(int index);
  void set_regions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_regions(int index, ::std::string&& value);
  #endif
  void set_regions(int index, const char* value);
  void set_regions(int index, const char* value, size_t size);
  ::std::string* add_regions();
  void add_regions(const ::std::string& value);
  #if LANG_CXX11
  void add_regions(::std::string&& value);
  #endif
  void add_regions(const char* value);
  void add_regions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& regions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_regions();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string province = 5;
  void clear_province();
  static const int kProvinceFieldNumber = 5;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  #if LANG_CXX11
  void set_province(::std::string&& value);
  #endif
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // string city = 6;
  void clear_city();
  static const int kCityFieldNumber = 6;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // string area = 7;
  void clear_area();
  static const int kAreaFieldNumber = 7;
  const ::std::string& area() const;
  void set_area(const ::std::string& value);
  #if LANG_CXX11
  void set_area(::std::string&& value);
  #endif
  void set_area(const char* value);
  void set_area(const char* value, size_t size);
  ::std::string* mutable_area();
  ::std::string* release_area();
  void set_allocated_area(::std::string* area);

  // string addr = 8;
  void clear_addr();
  static const int kAddrFieldNumber = 8;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_addr(::std::string&& value);
  #endif
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // string contact = 9;
  void clear_contact();
  static const int kContactFieldNumber = 9;
  const ::std::string& contact() const;
  void set_contact(const ::std::string& value);
  #if LANG_CXX11
  void set_contact(::std::string&& value);
  #endif
  void set_contact(const char* value);
  void set_contact(const char* value, size_t size);
  ::std::string* mutable_contact();
  ::std::string* release_contact();
  void set_allocated_contact(::std::string* contact);

  // string mobile = 10;
  void clear_mobile();
  static const int kMobileFieldNumber = 10;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // .ttmall.CoordInfo coord = 11;
  bool has_coord() const;
  void clear_coord();
  static const int kCoordFieldNumber = 11;
  const ::ttmall::CoordInfo& coord() const;
  ::ttmall::CoordInfo* mutable_coord();
  ::ttmall::CoordInfo* release_coord();
  void set_allocated_coord(::ttmall::CoordInfo* coord);

  // bool default = 12;
  void clear_default_();
  static const int kDefaultFieldNumber = 12;
  bool default_() const;
  void set_default_(bool value);

  // @@protoc_insertion_point(class_scope:ttmall.UpsertAdminUserAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> regions_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr area_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::internal::ArenaStringPtr contact_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::ttmall::CoordInfo* coord_;
  bool default__;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpsertAdminUserAddressRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpsertAdminUserAddressRep) */ {
 public:
  UpsertAdminUserAddressRep();
  virtual ~UpsertAdminUserAddressRep();

  UpsertAdminUserAddressRep(const UpsertAdminUserAddressRep& from);

  inline UpsertAdminUserAddressRep& operator=(const UpsertAdminUserAddressRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpsertAdminUserAddressRep& default_instance();

  static inline const UpsertAdminUserAddressRep* internal_default_instance() {
    return reinterpret_cast<const UpsertAdminUserAddressRep*>(
               &_UpsertAdminUserAddressRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(UpsertAdminUserAddressRep* other);

  // implements Message ----------------------------------------------

  inline UpsertAdminUserAddressRep* New() const PROTOBUF_FINAL { return New(NULL); }

  UpsertAdminUserAddressRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpsertAdminUserAddressRep& from);
  void MergeFrom(const UpsertAdminUserAddressRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpsertAdminUserAddressRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.AddressInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::AddressInfo& info() const;
  ::ttmall::AddressInfo* mutable_info();
  ::ttmall::AddressInfo* release_info();
  void set_allocated_info(::ttmall::AddressInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.UpsertAdminUserAddressRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::AddressInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UploadAdminUserImageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UploadAdminUserImageReq) */ {
 public:
  UploadAdminUserImageReq();
  virtual ~UploadAdminUserImageReq();

  UploadAdminUserImageReq(const UploadAdminUserImageReq& from);

  inline UploadAdminUserImageReq& operator=(const UploadAdminUserImageReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadAdminUserImageReq& default_instance();

  static inline const UploadAdminUserImageReq* internal_default_instance() {
    return reinterpret_cast<const UploadAdminUserImageReq*>(
               &_UploadAdminUserImageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(UploadAdminUserImageReq* other);

  // implements Message ----------------------------------------------

  inline UploadAdminUserImageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadAdminUserImageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UploadAdminUserImageReq& from);
  void MergeFrom(const UploadAdminUserImageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadAdminUserImageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:ttmall.UploadAdminUserImageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UploadAdminUserImageRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UploadAdminUserImageRep) */ {
 public:
  UploadAdminUserImageRep();
  virtual ~UploadAdminUserImageRep();

  UploadAdminUserImageRep(const UploadAdminUserImageRep& from);

  inline UploadAdminUserImageRep& operator=(const UploadAdminUserImageRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadAdminUserImageRep& default_instance();

  static inline const UploadAdminUserImageRep* internal_default_instance() {
    return reinterpret_cast<const UploadAdminUserImageRep*>(
               &_UploadAdminUserImageRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(UploadAdminUserImageRep* other);

  // implements Message ----------------------------------------------

  inline UploadAdminUserImageRep* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadAdminUserImageRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UploadAdminUserImageRep& from);
  void MergeFrom(const UploadAdminUserImageRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadAdminUserImageRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // .ttmall.ImageInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::ImageInfo& info() const;
  ::ttmall::ImageInfo* mutable_info();
  ::ttmall::ImageInfo* release_info();
  void set_allocated_info(::ttmall::ImageInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.UploadAdminUserImageRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::ttmall::ImageInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteAdminUserImageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DeleteAdminUserImageReq) */ {
 public:
  DeleteAdminUserImageReq();
  virtual ~DeleteAdminUserImageReq();

  DeleteAdminUserImageReq(const DeleteAdminUserImageReq& from);

  inline DeleteAdminUserImageReq& operator=(const DeleteAdminUserImageReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAdminUserImageReq& default_instance();

  static inline const DeleteAdminUserImageReq* internal_default_instance() {
    return reinterpret_cast<const DeleteAdminUserImageReq*>(
               &_DeleteAdminUserImageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(DeleteAdminUserImageReq* other);

  // implements Message ----------------------------------------------

  inline DeleteAdminUserImageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteAdminUserImageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteAdminUserImageReq& from);
  void MergeFrom(const DeleteAdminUserImageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteAdminUserImageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string image_md5 = 3;
  void clear_image_md5();
  static const int kImageMd5FieldNumber = 3;
  const ::std::string& image_md5() const;
  void set_image_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_image_md5(::std::string&& value);
  #endif
  void set_image_md5(const char* value);
  void set_image_md5(const char* value, size_t size);
  ::std::string* mutable_image_md5();
  ::std::string* release_image_md5();
  void set_allocated_image_md5(::std::string* image_md5);

  // @@protoc_insertion_point(class_scope:ttmall.DeleteAdminUserImageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr image_md5_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteAdminUserImageRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DeleteAdminUserImageRep) */ {
 public:
  DeleteAdminUserImageRep();
  virtual ~DeleteAdminUserImageRep();

  DeleteAdminUserImageRep(const DeleteAdminUserImageRep& from);

  inline DeleteAdminUserImageRep& operator=(const DeleteAdminUserImageRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAdminUserImageRep& default_instance();

  static inline const DeleteAdminUserImageRep* internal_default_instance() {
    return reinterpret_cast<const DeleteAdminUserImageRep*>(
               &_DeleteAdminUserImageRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(DeleteAdminUserImageRep* other);

  // implements Message ----------------------------------------------

  inline DeleteAdminUserImageRep* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteAdminUserImageRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteAdminUserImageRep& from);
  void MergeFrom(const DeleteAdminUserImageRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteAdminUserImageRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // .ttmall.ImageInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::ImageInfo& info() const;
  ::ttmall::ImageInfo* mutable_info();
  ::ttmall::ImageInfo* release_info();
  void set_allocated_info(::ttmall::ImageInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.DeleteAdminUserImageRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::ttmall::ImageInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdminInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.AdminInfo) */ {
 public:
  AdminInfo();
  virtual ~AdminInfo();

  AdminInfo(const AdminInfo& from);

  inline AdminInfo& operator=(const AdminInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdminInfo& default_instance();

  static inline const AdminInfo* internal_default_instance() {
    return reinterpret_cast<const AdminInfo*>(
               &_AdminInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(AdminInfo* other);

  // implements Message ----------------------------------------------

  inline AdminInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AdminInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdminInfo& from);
  void MergeFrom(const AdminInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdminInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string regions = 5;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 5;
  const ::std::string& regions(int index) const;
  ::std::string* mutable_regions(int index);
  void set_regions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_regions(int index, ::std::string&& value);
  #endif
  void set_regions(int index, const char* value);
  void set_regions(int index, const char* value, size_t size);
  ::std::string* add_regions();
  void add_regions(const ::std::string& value);
  #if LANG_CXX11
  void add_regions(::std::string&& value);
  #endif
  void add_regions(const char* value);
  void add_regions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& regions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_regions();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string mobile = 4;
  void clear_mobile();
  static const int kMobileFieldNumber = 4;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // @@protoc_insertion_point(class_scope:ttmall.AdminInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> regions_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdminLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.AdminLoginReq) */ {
 public:
  AdminLoginReq();
  virtual ~AdminLoginReq();

  AdminLoginReq(const AdminLoginReq& from);

  inline AdminLoginReq& operator=(const AdminLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdminLoginReq& default_instance();

  static inline const AdminLoginReq* internal_default_instance() {
    return reinterpret_cast<const AdminLoginReq*>(
               &_AdminLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(AdminLoginReq* other);

  // implements Message ----------------------------------------------

  inline AdminLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AdminLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdminLoginReq& from);
  void MergeFrom(const AdminLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdminLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string mobile = 1;
  void clear_mobile();
  static const int kMobileFieldNumber = 1;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // string passwd = 2;
  void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // string platform = 3;
  void clear_platform();
  static const int kPlatformFieldNumber = 3;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // @@protoc_insertion_point(class_scope:ttmall.AdminLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdminLoginRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.AdminLoginRep) */ {
 public:
  AdminLoginRep();
  virtual ~AdminLoginRep();

  AdminLoginRep(const AdminLoginRep& from);

  inline AdminLoginRep& operator=(const AdminLoginRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdminLoginRep& default_instance();

  static inline const AdminLoginRep* internal_default_instance() {
    return reinterpret_cast<const AdminLoginRep*>(
               &_AdminLoginRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(AdminLoginRep* other);

  // implements Message ----------------------------------------------

  inline AdminLoginRep* New() const PROTOBUF_FINAL { return New(NULL); }

  AdminLoginRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdminLoginRep& from);
  void MergeFrom(const AdminLoginRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdminLoginRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // .ttmall.AdminInfo Info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::ttmall::AdminInfo& info() const;
  ::ttmall::AdminInfo* mutable_info();
  ::ttmall::AdminInfo* release_info();
  void set_allocated_info(::ttmall::AdminInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.AdminLoginRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::ttmall::AdminInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAdminInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetAdminInfoReq) */ {
 public:
  GetAdminInfoReq();
  virtual ~GetAdminInfoReq();

  GetAdminInfoReq(const GetAdminInfoReq& from);

  inline GetAdminInfoReq& operator=(const GetAdminInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAdminInfoReq& default_instance();

  static inline const GetAdminInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetAdminInfoReq*>(
               &_GetAdminInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetAdminInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetAdminInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAdminInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAdminInfoReq& from);
  void MergeFrom(const GetAdminInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAdminInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ttmall.GetAdminInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAdminInfoRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetAdminInfoRep) */ {
 public:
  GetAdminInfoRep();
  virtual ~GetAdminInfoRep();

  GetAdminInfoRep(const GetAdminInfoRep& from);

  inline GetAdminInfoRep& operator=(const GetAdminInfoRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAdminInfoRep& default_instance();

  static inline const GetAdminInfoRep* internal_default_instance() {
    return reinterpret_cast<const GetAdminInfoRep*>(
               &_GetAdminInfoRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GetAdminInfoRep* other);

  // implements Message ----------------------------------------------

  inline GetAdminInfoRep* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAdminInfoRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAdminInfoRep& from);
  void MergeFrom(const GetAdminInfoRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAdminInfoRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.AdminInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::AdminInfo& info() const;
  ::ttmall::AdminInfo* mutable_info();
  ::ttmall::AdminInfo* release_info();
  void set_allocated_info(::ttmall::AdminInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.GetAdminInfoRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::AdminInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteAdminUserAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DeleteAdminUserAddressReq) */ {
 public:
  DeleteAdminUserAddressReq();
  virtual ~DeleteAdminUserAddressReq();

  DeleteAdminUserAddressReq(const DeleteAdminUserAddressReq& from);

  inline DeleteAdminUserAddressReq& operator=(const DeleteAdminUserAddressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAdminUserAddressReq& default_instance();

  static inline const DeleteAdminUserAddressReq* internal_default_instance() {
    return reinterpret_cast<const DeleteAdminUserAddressReq*>(
               &_DeleteAdminUserAddressReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(DeleteAdminUserAddressReq* other);

  // implements Message ----------------------------------------------

  inline DeleteAdminUserAddressReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteAdminUserAddressReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteAdminUserAddressReq& from);
  void MergeFrom(const DeleteAdminUserAddressReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteAdminUserAddressReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string addr_id = 3;
  void clear_addr_id();
  static const int kAddrIdFieldNumber = 3;
  const ::std::string& addr_id() const;
  void set_addr_id(const ::std::string& value);
  #if LANG_CXX11
  void set_addr_id(::std::string&& value);
  #endif
  void set_addr_id(const char* value);
  void set_addr_id(const char* value, size_t size);
  ::std::string* mutable_addr_id();
  ::std::string* release_addr_id();
  void set_allocated_addr_id(::std::string* addr_id);

  // @@protoc_insertion_point(class_scope:ttmall.DeleteAdminUserAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr addr_id_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteAdminUserAddressRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DeleteAdminUserAddressRep) */ {
 public:
  DeleteAdminUserAddressRep();
  virtual ~DeleteAdminUserAddressRep();

  DeleteAdminUserAddressRep(const DeleteAdminUserAddressRep& from);

  inline DeleteAdminUserAddressRep& operator=(const DeleteAdminUserAddressRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAdminUserAddressRep& default_instance();

  static inline const DeleteAdminUserAddressRep* internal_default_instance() {
    return reinterpret_cast<const DeleteAdminUserAddressRep*>(
               &_DeleteAdminUserAddressRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(DeleteAdminUserAddressRep* other);

  // implements Message ----------------------------------------------

  inline DeleteAdminUserAddressRep* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteAdminUserAddressRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteAdminUserAddressRep& from);
  void MergeFrom(const DeleteAdminUserAddressRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteAdminUserAddressRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string addr_id = 1;
  void clear_addr_id();
  static const int kAddrIdFieldNumber = 1;
  const ::std::string& addr_id() const;
  void set_addr_id(const ::std::string& value);
  #if LANG_CXX11
  void set_addr_id(::std::string&& value);
  #endif
  void set_addr_id(const char* value);
  void set_addr_id(const char* value, size_t size);
  ::std::string* mutable_addr_id();
  ::std::string* release_addr_id();
  void set_allocated_addr_id(::std::string* addr_id);

  // @@protoc_insertion_point(class_scope:ttmall.DeleteAdminUserAddressRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr addr_id_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterAdminUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.RegisterAdminUserReq) */ {
 public:
  RegisterAdminUserReq();
  virtual ~RegisterAdminUserReq();

  RegisterAdminUserReq(const RegisterAdminUserReq& from);

  inline RegisterAdminUserReq& operator=(const RegisterAdminUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterAdminUserReq& default_instance();

  static inline const RegisterAdminUserReq* internal_default_instance() {
    return reinterpret_cast<const RegisterAdminUserReq*>(
               &_RegisterAdminUserReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(RegisterAdminUserReq* other);

  // implements Message ----------------------------------------------

  inline RegisterAdminUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterAdminUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterAdminUserReq& from);
  void MergeFrom(const RegisterAdminUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterAdminUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string types = 7;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 7;
  const ::std::string& types(int index) const;
  ::std::string* mutable_types(int index);
  void set_types(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_types(int index, ::std::string&& value);
  #endif
  void set_types(int index, const char* value);
  void set_types(int index, const char* value, size_t size);
  ::std::string* add_types();
  void add_types(const ::std::string& value);
  #if LANG_CXX11
  void add_types(::std::string&& value);
  #endif
  void add_types(const char* value);
  void add_types(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& types() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_types();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string auth_token = 2;
  void clear_auth_token();
  static const int kAuthTokenFieldNumber = 2;
  const ::std::string& auth_token() const;
  void set_auth_token(const ::std::string& value);
  #if LANG_CXX11
  void set_auth_token(::std::string&& value);
  #endif
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  ::std::string* mutable_auth_token();
  ::std::string* release_auth_token();
  void set_allocated_auth_token(::std::string* auth_token);

  // string auth_code = 3;
  void clear_auth_code();
  static const int kAuthCodeFieldNumber = 3;
  const ::std::string& auth_code() const;
  void set_auth_code(const ::std::string& value);
  #if LANG_CXX11
  void set_auth_code(::std::string&& value);
  #endif
  void set_auth_code(const char* value);
  void set_auth_code(const char* value, size_t size);
  ::std::string* mutable_auth_code();
  ::std::string* release_auth_code();
  void set_allocated_auth_code(::std::string* auth_code);

  // string mobile = 4;
  void clear_mobile();
  static const int kMobileFieldNumber = 4;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string owner = 6;
  void clear_owner();
  static const int kOwnerFieldNumber = 6;
  const ::std::string& owner() const;
  void set_owner(const ::std::string& value);
  #if LANG_CXX11
  void set_owner(::std::string&& value);
  #endif
  void set_owner(const char* value);
  void set_owner(const char* value, size_t size);
  ::std::string* mutable_owner();
  ::std::string* release_owner();
  void set_allocated_owner(::std::string* owner);

  // string pass = 8;
  void clear_pass();
  static const int kPassFieldNumber = 8;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  #if LANG_CXX11
  void set_pass(::std::string&& value);
  #endif
  void set_pass(const char* value);
  void set_pass(const char* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // string referee = 9;
  void clear_referee();
  static const int kRefereeFieldNumber = 9;
  const ::std::string& referee() const;
  void set_referee(const ::std::string& value);
  #if LANG_CXX11
  void set_referee(::std::string&& value);
  #endif
  void set_referee(const char* value);
  void set_referee(const char* value, size_t size);
  ::std::string* mutable_referee();
  ::std::string* release_referee();
  void set_allocated_referee(::std::string* referee);

  // string deliver_time = 10;
  void clear_deliver_time();
  static const int kDeliverTimeFieldNumber = 10;
  const ::std::string& deliver_time() const;
  void set_deliver_time(const ::std::string& value);
  #if LANG_CXX11
  void set_deliver_time(::std::string&& value);
  #endif
  void set_deliver_time(const char* value);
  void set_deliver_time(const char* value, size_t size);
  ::std::string* mutable_deliver_time();
  ::std::string* release_deliver_time();
  void set_allocated_deliver_time(::std::string* deliver_time);

  // string mark = 11;
  void clear_mark();
  static const int kMarkFieldNumber = 11;
  const ::std::string& mark() const;
  void set_mark(const ::std::string& value);
  #if LANG_CXX11
  void set_mark(::std::string&& value);
  #endif
  void set_mark(const char* value);
  void set_mark(const char* value, size_t size);
  ::std::string* mutable_mark();
  ::std::string* release_mark();
  void set_allocated_mark(::std::string* mark);

  // string type = 14;
  void clear_type();
  static const int kTypeFieldNumber = 14;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // .ttmall.AddressInfo address = 12;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 12;
  const ::ttmall::AddressInfo& address() const;
  ::ttmall::AddressInfo* mutable_address();
  ::ttmall::AddressInfo* release_address();
  void set_allocated_address(::ttmall::AddressInfo* address);

  // int32 level = 13;
  void clear_level();
  static const int kLevelFieldNumber = 13;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.RegisterAdminUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> types_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr auth_token_;
  ::google::protobuf::internal::ArenaStringPtr auth_code_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr owner_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::google::protobuf::internal::ArenaStringPtr referee_;
  ::google::protobuf::internal::ArenaStringPtr deliver_time_;
  ::google::protobuf::internal::ArenaStringPtr mark_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::ttmall::AddressInfo* address_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterAdminUserRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.RegisterAdminUserRep) */ {
 public:
  RegisterAdminUserRep();
  virtual ~RegisterAdminUserRep();

  RegisterAdminUserRep(const RegisterAdminUserRep& from);

  inline RegisterAdminUserRep& operator=(const RegisterAdminUserRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterAdminUserRep& default_instance();

  static inline const RegisterAdminUserRep* internal_default_instance() {
    return reinterpret_cast<const RegisterAdminUserRep*>(
               &_RegisterAdminUserRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(RegisterAdminUserRep* other);

  // implements Message ----------------------------------------------

  inline RegisterAdminUserRep* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterAdminUserRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterAdminUserRep& from);
  void MergeFrom(const RegisterAdminUserRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterAdminUserRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.UserInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::UserInfo& info() const;
  ::ttmall::UserInfo* mutable_info();
  ::ttmall::UserInfo* release_info();
  void set_allocated_info(::ttmall::UserInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.RegisterAdminUserRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::UserInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetAdminUserDefaultAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.SetAdminUserDefaultAddressReq) */ {
 public:
  SetAdminUserDefaultAddressReq();
  virtual ~SetAdminUserDefaultAddressReq();

  SetAdminUserDefaultAddressReq(const SetAdminUserDefaultAddressReq& from);

  inline SetAdminUserDefaultAddressReq& operator=(const SetAdminUserDefaultAddressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAdminUserDefaultAddressReq& default_instance();

  static inline const SetAdminUserDefaultAddressReq* internal_default_instance() {
    return reinterpret_cast<const SetAdminUserDefaultAddressReq*>(
               &_SetAdminUserDefaultAddressReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SetAdminUserDefaultAddressReq* other);

  // implements Message ----------------------------------------------

  inline SetAdminUserDefaultAddressReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetAdminUserDefaultAddressReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetAdminUserDefaultAddressReq& from);
  void MergeFrom(const SetAdminUserDefaultAddressReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetAdminUserDefaultAddressReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string addr_id = 3;
  void clear_addr_id();
  static const int kAddrIdFieldNumber = 3;
  const ::std::string& addr_id() const;
  void set_addr_id(const ::std::string& value);
  #if LANG_CXX11
  void set_addr_id(::std::string&& value);
  #endif
  void set_addr_id(const char* value);
  void set_addr_id(const char* value, size_t size);
  ::std::string* mutable_addr_id();
  ::std::string* release_addr_id();
  void set_allocated_addr_id(::std::string* addr_id);

  // @@protoc_insertion_point(class_scope:ttmall.SetAdminUserDefaultAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr addr_id_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetAdminUserDefaultAddressRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.SetAdminUserDefaultAddressRep) */ {
 public:
  SetAdminUserDefaultAddressRep();
  virtual ~SetAdminUserDefaultAddressRep();

  SetAdminUserDefaultAddressRep(const SetAdminUserDefaultAddressRep& from);

  inline SetAdminUserDefaultAddressRep& operator=(const SetAdminUserDefaultAddressRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAdminUserDefaultAddressRep& default_instance();

  static inline const SetAdminUserDefaultAddressRep* internal_default_instance() {
    return reinterpret_cast<const SetAdminUserDefaultAddressRep*>(
               &_SetAdminUserDefaultAddressRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SetAdminUserDefaultAddressRep* other);

  // implements Message ----------------------------------------------

  inline SetAdminUserDefaultAddressRep* New() const PROTOBUF_FINAL { return New(NULL); }

  SetAdminUserDefaultAddressRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetAdminUserDefaultAddressRep& from);
  void MergeFrom(const SetAdminUserDefaultAddressRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetAdminUserDefaultAddressRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string addr_id = 1;
  void clear_addr_id();
  static const int kAddrIdFieldNumber = 1;
  const ::std::string& addr_id() const;
  void set_addr_id(const ::std::string& value);
  #if LANG_CXX11
  void set_addr_id(::std::string&& value);
  #endif
  void set_addr_id(const char* value);
  void set_addr_id(const char* value, size_t size);
  ::std::string* mutable_addr_id();
  ::std::string* release_addr_id();
  void set_allocated_addr_id(::std::string* addr_id);

  // @@protoc_insertion_point(class_scope:ttmall.SetAdminUserDefaultAddressRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr addr_id_;
  mutable int _cached_size_;
  friend struct protobuf_admin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ListAdminUserReq

// string token = 1;
inline void ListAdminUserReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAdminUserReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.token)
  return token_.GetNoArena();
}
inline void ListAdminUserReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.token)
}
#if LANG_CXX11
inline void ListAdminUserReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAdminUserReq.token)
}
#endif
inline void ListAdminUserReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAdminUserReq.token)
}
inline void ListAdminUserReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAdminUserReq.token)
}
inline ::std::string* ListAdminUserReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAdminUserReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListAdminUserReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAdminUserReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAdminUserReq.token)
}

// int32 skip = 2;
inline void ListAdminUserReq::clear_skip() {
  skip_ = 0;
}
inline ::google::protobuf::int32 ListAdminUserReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.skip)
  return skip_;
}
inline void ListAdminUserReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.skip)
}

// int32 limit = 3;
inline void ListAdminUserReq::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 ListAdminUserReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.limit)
  return limit_;
}
inline void ListAdminUserReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.limit)
}

// string key = 4;
inline void ListAdminUserReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAdminUserReq::key() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.key)
  return key_.GetNoArena();
}
inline void ListAdminUserReq::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.key)
}
#if LANG_CXX11
inline void ListAdminUserReq::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAdminUserReq.key)
}
#endif
inline void ListAdminUserReq::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAdminUserReq.key)
}
inline void ListAdminUserReq::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAdminUserReq.key)
}
inline ::std::string* ListAdminUserReq::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserReq.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAdminUserReq::release_key() {
  // @@protoc_insertion_point(field_release:ttmall.ListAdminUserReq.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAdminUserReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAdminUserReq.key)
}

// int32 type = 5;
inline void ListAdminUserReq::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ListAdminUserReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserReq.type)
  return type_;
}
inline void ListAdminUserReq::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserReq.type)
}

// -------------------------------------------------------------------

// ListAdminUserRep

// repeated .ttmall.UserInfo items = 1;
inline int ListAdminUserRep::items_size() const {
  return items_.size();
}
inline void ListAdminUserRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::UserInfo& ListAdminUserRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserRep.items)
  return items_.Get(index);
}
inline ::ttmall::UserInfo* ListAdminUserRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::UserInfo* ListAdminUserRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListAdminUserRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::UserInfo >*
ListAdminUserRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListAdminUserRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::UserInfo >&
ListAdminUserRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListAdminUserRep.items)
  return items_;
}

// -------------------------------------------------------------------

// ListAdminUserAddressReq

// string token = 1;
inline void ListAdminUserAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAdminUserAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserAddressReq.token)
  return token_.GetNoArena();
}
inline void ListAdminUserAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserAddressReq.token)
}
#if LANG_CXX11
inline void ListAdminUserAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAdminUserAddressReq.token)
}
#endif
inline void ListAdminUserAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAdminUserAddressReq.token)
}
inline void ListAdminUserAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAdminUserAddressReq.token)
}
inline ::std::string* ListAdminUserAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAdminUserAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListAdminUserAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAdminUserAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAdminUserAddressReq.token)
}

// string id = 2;
inline void ListAdminUserAddressReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAdminUserAddressReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserAddressReq.id)
  return id_.GetNoArena();
}
inline void ListAdminUserAddressReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAdminUserAddressReq.id)
}
#if LANG_CXX11
inline void ListAdminUserAddressReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAdminUserAddressReq.id)
}
#endif
inline void ListAdminUserAddressReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAdminUserAddressReq.id)
}
inline void ListAdminUserAddressReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAdminUserAddressReq.id)
}
inline ::std::string* ListAdminUserAddressReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserAddressReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAdminUserAddressReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.ListAdminUserAddressReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAdminUserAddressReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAdminUserAddressReq.id)
}

// -------------------------------------------------------------------

// ListAdminUserAddressRep

// repeated .ttmall.AddressInfo items = 1;
inline int ListAdminUserAddressRep::items_size() const {
  return items_.size();
}
inline void ListAdminUserAddressRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::AddressInfo& ListAdminUserAddressRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListAdminUserAddressRep.items)
  return items_.Get(index);
}
inline ::ttmall::AddressInfo* ListAdminUserAddressRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListAdminUserAddressRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::AddressInfo* ListAdminUserAddressRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListAdminUserAddressRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
ListAdminUserAddressRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListAdminUserAddressRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
ListAdminUserAddressRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListAdminUserAddressRep.items)
  return items_;
}

// -------------------------------------------------------------------

// UpdateAdminUserReq

// string token = 1;
inline void UpdateAdminUserReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateAdminUserReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.token)
  return token_.GetNoArena();
}
inline void UpdateAdminUserReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.token)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.token)
}
#endif
inline void UpdateAdminUserReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.token)
}
inline void UpdateAdminUserReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.token)
}
inline ::std::string* UpdateAdminUserReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAdminUserReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAdminUserReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.token)
}

// string id = 2;
inline void UpdateAdminUserReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateAdminUserReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.id)
  return id_.GetNoArena();
}
inline void UpdateAdminUserReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.id)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.id)
}
#endif
inline void UpdateAdminUserReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.id)
}
inline void UpdateAdminUserReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.id)
}
inline ::std::string* UpdateAdminUserReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAdminUserReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAdminUserReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.id)
}

// string name = 3;
inline void UpdateAdminUserReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateAdminUserReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.name)
  return name_.GetNoArena();
}
inline void UpdateAdminUserReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.name)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.name)
}
#endif
inline void UpdateAdminUserReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.name)
}
inline void UpdateAdminUserReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.name)
}
inline ::std::string* UpdateAdminUserReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAdminUserReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAdminUserReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.name)
}

// string owner = 4;
inline void UpdateAdminUserReq::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateAdminUserReq::owner() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.owner)
  return owner_.GetNoArena();
}
inline void UpdateAdminUserReq::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.owner)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_owner(::std::string&& value) {
  
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.owner)
}
#endif
inline void UpdateAdminUserReq::set_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.owner)
}
inline void UpdateAdminUserReq::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.owner)
}
inline ::std::string* UpdateAdminUserReq::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAdminUserReq::release_owner() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAdminUserReq::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.owner)
}

// repeated string types = 5;
inline int UpdateAdminUserReq::types_size() const {
  return types_.size();
}
inline void UpdateAdminUserReq::clear_types() {
  types_.Clear();
}
inline const ::std::string& UpdateAdminUserReq::types(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.types)
  return types_.Get(index);
}
inline ::std::string* UpdateAdminUserReq::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.types)
  return types_.Mutable(index);
}
inline void UpdateAdminUserReq::set_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.types)
  types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.types)
  types_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UpdateAdminUserReq::set_types(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.types)
}
inline void UpdateAdminUserReq::set_types(int index, const char* value, size_t size) {
  types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.types)
}
inline ::std::string* UpdateAdminUserReq::add_types() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.UpdateAdminUserReq.types)
  return types_.Add();
}
inline void UpdateAdminUserReq::add_types(const ::std::string& value) {
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.UpdateAdminUserReq.types)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::add_types(::std::string&& value) {
  types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.UpdateAdminUserReq.types)
}
#endif
inline void UpdateAdminUserReq::add_types(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.UpdateAdminUserReq.types)
}
inline void UpdateAdminUserReq::add_types(const char* value, size_t size) {
  types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.UpdateAdminUserReq.types)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdateAdminUserReq::types() const {
  // @@protoc_insertion_point(field_list:ttmall.UpdateAdminUserReq.types)
  return types_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpdateAdminUserReq::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.UpdateAdminUserReq.types)
  return &types_;
}

// string referee = 6;
inline void UpdateAdminUserReq::clear_referee() {
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateAdminUserReq::referee() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.referee)
  return referee_.GetNoArena();
}
inline void UpdateAdminUserReq::set_referee(const ::std::string& value) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.referee)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_referee(::std::string&& value) {
  
  referee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.referee)
}
#endif
inline void UpdateAdminUserReq::set_referee(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.referee)
}
inline void UpdateAdminUserReq::set_referee(const char* value, size_t size) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.referee)
}
inline ::std::string* UpdateAdminUserReq::mutable_referee() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.referee)
  return referee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAdminUserReq::release_referee() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.referee)
  
  return referee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAdminUserReq::set_allocated_referee(::std::string* referee) {
  if (referee != NULL) {
    
  } else {
    
  }
  referee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referee);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.referee)
}

// string deliver_time = 7;
inline void UpdateAdminUserReq::clear_deliver_time() {
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateAdminUserReq::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.deliver_time)
  return deliver_time_.GetNoArena();
}
inline void UpdateAdminUserReq::set_deliver_time(const ::std::string& value) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.deliver_time)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_deliver_time(::std::string&& value) {
  
  deliver_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.deliver_time)
}
#endif
inline void UpdateAdminUserReq::set_deliver_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.deliver_time)
}
inline void UpdateAdminUserReq::set_deliver_time(const char* value, size_t size) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.deliver_time)
}
inline ::std::string* UpdateAdminUserReq::mutable_deliver_time() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.deliver_time)
  return deliver_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAdminUserReq::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.deliver_time)
  
  return deliver_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAdminUserReq::set_allocated_deliver_time(::std::string* deliver_time) {
  if (deliver_time != NULL) {
    
  } else {
    
  }
  deliver_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliver_time);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.deliver_time)
}

// string mark = 8;
inline void UpdateAdminUserReq::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateAdminUserReq::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.mark)
  return mark_.GetNoArena();
}
inline void UpdateAdminUserReq::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.mark)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.mark)
}
#endif
inline void UpdateAdminUserReq::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.mark)
}
inline void UpdateAdminUserReq::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.mark)
}
inline ::std::string* UpdateAdminUserReq::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAdminUserReq::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAdminUserReq::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.mark)
}

// int32 level = 9;
inline void UpdateAdminUserReq::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 UpdateAdminUserReq::level() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.level)
  return level_;
}
inline void UpdateAdminUserReq::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.level)
}

// string type = 10;
inline void UpdateAdminUserReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateAdminUserReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserReq.type)
  return type_.GetNoArena();
}
inline void UpdateAdminUserReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateAdminUserReq.type)
}
#if LANG_CXX11
inline void UpdateAdminUserReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateAdminUserReq.type)
}
#endif
inline void UpdateAdminUserReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateAdminUserReq.type)
}
inline void UpdateAdminUserReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateAdminUserReq.type)
}
inline ::std::string* UpdateAdminUserReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAdminUserReq::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAdminUserReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserReq.type)
}

// -------------------------------------------------------------------

// UpdateAdminUserRep

// .ttmall.UserInfo info = 1;
inline bool UpdateAdminUserRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UpdateAdminUserRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::UserInfo& UpdateAdminUserRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateAdminUserRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
inline ::ttmall::UserInfo* UpdateAdminUserRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateAdminUserRep.info)
  return info_;
}
inline ::ttmall::UserInfo* UpdateAdminUserRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateAdminUserRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UpdateAdminUserRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateAdminUserRep.info)
}

// -------------------------------------------------------------------

// UpsertAdminUserAddressReq

// string token = 1;
inline void UpsertAdminUserAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.token)
  return token_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.token)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.token)
}
#endif
inline void UpsertAdminUserAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.token)
}
inline void UpsertAdminUserAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.token)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.token)
}

// string user_id = 2;
inline void UpsertAdminUserAddressReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.user_id)
  return user_id_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.user_id)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.user_id)
}
#endif
inline void UpsertAdminUserAddressReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.user_id)
}
inline void UpsertAdminUserAddressReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.user_id)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.user_id)
}

// string id = 3;
inline void UpsertAdminUserAddressReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.id)
  return id_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.id)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.id)
}
#endif
inline void UpsertAdminUserAddressReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.id)
}
inline void UpsertAdminUserAddressReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.id)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.id)
}

// string name = 4;
inline void UpsertAdminUserAddressReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.name)
  return name_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.name)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.name)
}
#endif
inline void UpsertAdminUserAddressReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.name)
}
inline void UpsertAdminUserAddressReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.name)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.name)
}

// string province = 5;
inline void UpsertAdminUserAddressReq::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::province() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.province)
  return province_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.province)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_province(::std::string&& value) {
  
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.province)
}
#endif
inline void UpsertAdminUserAddressReq::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.province)
}
inline void UpsertAdminUserAddressReq::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.province)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_province() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.province)
}

// string city = 6;
inline void UpsertAdminUserAddressReq::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::city() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.city)
  return city_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.city)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.city)
}
#endif
inline void UpsertAdminUserAddressReq::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.city)
}
inline void UpsertAdminUserAddressReq::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.city)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_city() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.city)
}

// string area = 7;
inline void UpsertAdminUserAddressReq::clear_area() {
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::area() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.area)
  return area_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_area(const ::std::string& value) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.area)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_area(::std::string&& value) {
  
  area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.area)
}
#endif
inline void UpsertAdminUserAddressReq::set_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.area)
}
inline void UpsertAdminUserAddressReq::set_area(const char* value, size_t size) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.area)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_area() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.area)
  return area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_area() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.area)
  
  return area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_area(::std::string* area) {
  if (area != NULL) {
    
  } else {
    
  }
  area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.area)
}

// string addr = 8;
inline void UpsertAdminUserAddressReq::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::addr() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.addr)
  return addr_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.addr)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.addr)
}
#endif
inline void UpsertAdminUserAddressReq::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.addr)
}
inline void UpsertAdminUserAddressReq::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.addr)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_addr() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.addr)
}

// string contact = 9;
inline void UpsertAdminUserAddressReq::clear_contact() {
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::contact() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.contact)
  return contact_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_contact(const ::std::string& value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.contact)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_contact(::std::string&& value) {
  
  contact_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.contact)
}
#endif
inline void UpsertAdminUserAddressReq::set_contact(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.contact)
}
inline void UpsertAdminUserAddressReq::set_contact(const char* value, size_t size) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.contact)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_contact() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.contact)
  return contact_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_contact() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.contact)
  
  return contact_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_contact(::std::string* contact) {
  if (contact != NULL) {
    
  } else {
    
  }
  contact_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.contact)
}

// string mobile = 10;
inline void UpsertAdminUserAddressReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpsertAdminUserAddressReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.mobile)
  return mobile_.GetNoArena();
}
inline void UpsertAdminUserAddressReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.mobile)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpsertAdminUserAddressReq.mobile)
}
#endif
inline void UpsertAdminUserAddressReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.mobile)
}
inline void UpsertAdminUserAddressReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.mobile)
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpsertAdminUserAddressReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpsertAdminUserAddressReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.mobile)
}

// .ttmall.CoordInfo coord = 11;
inline bool UpsertAdminUserAddressReq::has_coord() const {
  return this != internal_default_instance() && coord_ != NULL;
}
inline void UpsertAdminUserAddressReq::clear_coord() {
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
}
inline const ::ttmall::CoordInfo& UpsertAdminUserAddressReq::coord() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.coord)
  return coord_ != NULL ? *coord_
                         : *::ttmall::CoordInfo::internal_default_instance();
}
inline ::ttmall::CoordInfo* UpsertAdminUserAddressReq::mutable_coord() {
  
  if (coord_ == NULL) {
    coord_ = new ::ttmall::CoordInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.coord)
  return coord_;
}
inline ::ttmall::CoordInfo* UpsertAdminUserAddressReq::release_coord() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressReq.coord)
  
  ::ttmall::CoordInfo* temp = coord_;
  coord_ = NULL;
  return temp;
}
inline void UpsertAdminUserAddressReq::set_allocated_coord(::ttmall::CoordInfo* coord) {
  delete coord_;
  coord_ = coord;
  if (coord) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressReq.coord)
}

// bool default = 12;
inline void UpsertAdminUserAddressReq::clear_default_() {
  default__ = false;
}
inline bool UpsertAdminUserAddressReq::default_() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.default)
  return default__;
}
inline void UpsertAdminUserAddressReq::set_default_(bool value) {
  
  default__ = value;
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.default)
}

// repeated string regions = 13;
inline int UpsertAdminUserAddressReq::regions_size() const {
  return regions_.size();
}
inline void UpsertAdminUserAddressReq::clear_regions() {
  regions_.Clear();
}
inline const ::std::string& UpsertAdminUserAddressReq::regions(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressReq.regions)
  return regions_.Get(index);
}
inline ::std::string* UpsertAdminUserAddressReq::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressReq.regions)
  return regions_.Mutable(index);
}
inline void UpsertAdminUserAddressReq::set_regions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.regions)
  regions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::set_regions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.UpsertAdminUserAddressReq.regions)
  regions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UpsertAdminUserAddressReq::set_regions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.UpsertAdminUserAddressReq.regions)
}
inline void UpsertAdminUserAddressReq::set_regions(int index, const char* value, size_t size) {
  regions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpsertAdminUserAddressReq.regions)
}
inline ::std::string* UpsertAdminUserAddressReq::add_regions() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.UpsertAdminUserAddressReq.regions)
  return regions_.Add();
}
inline void UpsertAdminUserAddressReq::add_regions(const ::std::string& value) {
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.UpsertAdminUserAddressReq.regions)
}
#if LANG_CXX11
inline void UpsertAdminUserAddressReq::add_regions(::std::string&& value) {
  regions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.UpsertAdminUserAddressReq.regions)
}
#endif
inline void UpsertAdminUserAddressReq::add_regions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.UpsertAdminUserAddressReq.regions)
}
inline void UpsertAdminUserAddressReq::add_regions(const char* value, size_t size) {
  regions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.UpsertAdminUserAddressReq.regions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpsertAdminUserAddressReq::regions() const {
  // @@protoc_insertion_point(field_list:ttmall.UpsertAdminUserAddressReq.regions)
  return regions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpsertAdminUserAddressReq::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.UpsertAdminUserAddressReq.regions)
  return &regions_;
}

// -------------------------------------------------------------------

// UpsertAdminUserAddressRep

// .ttmall.AddressInfo info = 1;
inline bool UpsertAdminUserAddressRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UpsertAdminUserAddressRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::AddressInfo& UpsertAdminUserAddressRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpsertAdminUserAddressRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
inline ::ttmall::AddressInfo* UpsertAdminUserAddressRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpsertAdminUserAddressRep.info)
  return info_;
}
inline ::ttmall::AddressInfo* UpsertAdminUserAddressRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpsertAdminUserAddressRep.info)
  
  ::ttmall::AddressInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UpsertAdminUserAddressRep::set_allocated_info(::ttmall::AddressInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpsertAdminUserAddressRep.info)
}

// -------------------------------------------------------------------

// UploadAdminUserImageReq

// string token = 1;
inline void UploadAdminUserImageReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UploadAdminUserImageReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageReq.token)
  return token_.GetNoArena();
}
inline void UploadAdminUserImageReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UploadAdminUserImageReq.token)
}
#if LANG_CXX11
inline void UploadAdminUserImageReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UploadAdminUserImageReq.token)
}
#endif
inline void UploadAdminUserImageReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UploadAdminUserImageReq.token)
}
inline void UploadAdminUserImageReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UploadAdminUserImageReq.token)
}
inline ::std::string* UploadAdminUserImageReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadAdminUserImageReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadAdminUserImageReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageReq.token)
}

// string user_id = 2;
inline void UploadAdminUserImageReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UploadAdminUserImageReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageReq.user_id)
  return user_id_.GetNoArena();
}
inline void UploadAdminUserImageReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UploadAdminUserImageReq.user_id)
}
#if LANG_CXX11
inline void UploadAdminUserImageReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UploadAdminUserImageReq.user_id)
}
#endif
inline void UploadAdminUserImageReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UploadAdminUserImageReq.user_id)
}
inline void UploadAdminUserImageReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UploadAdminUserImageReq.user_id)
}
inline ::std::string* UploadAdminUserImageReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadAdminUserImageReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadAdminUserImageReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageReq.user_id)
}

// bytes data = 3;
inline void UploadAdminUserImageReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UploadAdminUserImageReq::data() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageReq.data)
  return data_.GetNoArena();
}
inline void UploadAdminUserImageReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UploadAdminUserImageReq.data)
}
#if LANG_CXX11
inline void UploadAdminUserImageReq::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UploadAdminUserImageReq.data)
}
#endif
inline void UploadAdminUserImageReq::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UploadAdminUserImageReq.data)
}
inline void UploadAdminUserImageReq::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UploadAdminUserImageReq.data)
}
inline ::std::string* UploadAdminUserImageReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadAdminUserImageReq::release_data() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageReq.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadAdminUserImageReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageReq.data)
}

// -------------------------------------------------------------------

// UploadAdminUserImageRep

// .ttmall.ImageInfo info = 1;
inline bool UploadAdminUserImageRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UploadAdminUserImageRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::ImageInfo& UploadAdminUserImageRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
inline ::ttmall::ImageInfo* UploadAdminUserImageRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageRep.info)
  return info_;
}
inline ::ttmall::ImageInfo* UploadAdminUserImageRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageRep.info)
  
  ::ttmall::ImageInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UploadAdminUserImageRep::set_allocated_info(::ttmall::ImageInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageRep.info)
}

// string user_id = 2;
inline void UploadAdminUserImageRep::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UploadAdminUserImageRep::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.UploadAdminUserImageRep.user_id)
  return user_id_.GetNoArena();
}
inline void UploadAdminUserImageRep::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UploadAdminUserImageRep.user_id)
}
#if LANG_CXX11
inline void UploadAdminUserImageRep::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UploadAdminUserImageRep.user_id)
}
#endif
inline void UploadAdminUserImageRep::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UploadAdminUserImageRep.user_id)
}
inline void UploadAdminUserImageRep::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UploadAdminUserImageRep.user_id)
}
inline ::std::string* UploadAdminUserImageRep::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UploadAdminUserImageRep.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadAdminUserImageRep::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.UploadAdminUserImageRep.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadAdminUserImageRep::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UploadAdminUserImageRep.user_id)
}

// -------------------------------------------------------------------

// DeleteAdminUserImageReq

// string token = 1;
inline void DeleteAdminUserImageReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAdminUserImageReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageReq.token)
  return token_.GetNoArena();
}
inline void DeleteAdminUserImageReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserImageReq.token)
}
#if LANG_CXX11
inline void DeleteAdminUserImageReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserImageReq.token)
}
#endif
inline void DeleteAdminUserImageReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserImageReq.token)
}
inline void DeleteAdminUserImageReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserImageReq.token)
}
inline ::std::string* DeleteAdminUserImageReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAdminUserImageReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAdminUserImageReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageReq.token)
}

// string user_id = 2;
inline void DeleteAdminUserImageReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAdminUserImageReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageReq.user_id)
  return user_id_.GetNoArena();
}
inline void DeleteAdminUserImageReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserImageReq.user_id)
}
#if LANG_CXX11
inline void DeleteAdminUserImageReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserImageReq.user_id)
}
#endif
inline void DeleteAdminUserImageReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserImageReq.user_id)
}
inline void DeleteAdminUserImageReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserImageReq.user_id)
}
inline ::std::string* DeleteAdminUserImageReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAdminUserImageReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAdminUserImageReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageReq.user_id)
}

// string image_md5 = 3;
inline void DeleteAdminUserImageReq::clear_image_md5() {
  image_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAdminUserImageReq::image_md5() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageReq.image_md5)
  return image_md5_.GetNoArena();
}
inline void DeleteAdminUserImageReq::set_image_md5(const ::std::string& value) {
  
  image_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserImageReq.image_md5)
}
#if LANG_CXX11
inline void DeleteAdminUserImageReq::set_image_md5(::std::string&& value) {
  
  image_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserImageReq.image_md5)
}
#endif
inline void DeleteAdminUserImageReq::set_image_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserImageReq.image_md5)
}
inline void DeleteAdminUserImageReq::set_image_md5(const char* value, size_t size) {
  
  image_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserImageReq.image_md5)
}
inline ::std::string* DeleteAdminUserImageReq::mutable_image_md5() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageReq.image_md5)
  return image_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAdminUserImageReq::release_image_md5() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageReq.image_md5)
  
  return image_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAdminUserImageReq::set_allocated_image_md5(::std::string* image_md5) {
  if (image_md5 != NULL) {
    
  } else {
    
  }
  image_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_md5);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageReq.image_md5)
}

// -------------------------------------------------------------------

// DeleteAdminUserImageRep

// .ttmall.ImageInfo info = 1;
inline bool DeleteAdminUserImageRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void DeleteAdminUserImageRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::ImageInfo& DeleteAdminUserImageRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
inline ::ttmall::ImageInfo* DeleteAdminUserImageRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageRep.info)
  return info_;
}
inline ::ttmall::ImageInfo* DeleteAdminUserImageRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageRep.info)
  
  ::ttmall::ImageInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DeleteAdminUserImageRep::set_allocated_info(::ttmall::ImageInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageRep.info)
}

// string user_id = 2;
inline void DeleteAdminUserImageRep::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAdminUserImageRep::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserImageRep.user_id)
  return user_id_.GetNoArena();
}
inline void DeleteAdminUserImageRep::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserImageRep.user_id)
}
#if LANG_CXX11
inline void DeleteAdminUserImageRep::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserImageRep.user_id)
}
#endif
inline void DeleteAdminUserImageRep::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserImageRep.user_id)
}
inline void DeleteAdminUserImageRep::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserImageRep.user_id)
}
inline ::std::string* DeleteAdminUserImageRep::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserImageRep.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAdminUserImageRep::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserImageRep.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAdminUserImageRep::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserImageRep.user_id)
}

// -------------------------------------------------------------------

// AdminInfo

// string id = 1;
inline void AdminInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdminInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.id)
  return id_.GetNoArena();
}
inline void AdminInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.id)
}
#if LANG_CXX11
inline void AdminInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminInfo.id)
}
#endif
inline void AdminInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.id)
}
inline void AdminInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.id)
}
inline ::std::string* AdminInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdminInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.AdminInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdminInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminInfo.id)
}

// string code = 2;
inline void AdminInfo::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdminInfo::code() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.code)
  return code_.GetNoArena();
}
inline void AdminInfo::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.code)
}
#if LANG_CXX11
inline void AdminInfo::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminInfo.code)
}
#endif
inline void AdminInfo::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.code)
}
inline void AdminInfo::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.code)
}
inline ::std::string* AdminInfo::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdminInfo::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.AdminInfo.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdminInfo::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminInfo.code)
}

// string name = 3;
inline void AdminInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdminInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.name)
  return name_.GetNoArena();
}
inline void AdminInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.name)
}
#if LANG_CXX11
inline void AdminInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminInfo.name)
}
#endif
inline void AdminInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.name)
}
inline void AdminInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.name)
}
inline ::std::string* AdminInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdminInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.AdminInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdminInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminInfo.name)
}

// string mobile = 4;
inline void AdminInfo::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdminInfo::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.mobile)
  return mobile_.GetNoArena();
}
inline void AdminInfo::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.mobile)
}
#if LANG_CXX11
inline void AdminInfo::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminInfo.mobile)
}
#endif
inline void AdminInfo::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.mobile)
}
inline void AdminInfo::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.mobile)
}
inline ::std::string* AdminInfo::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdminInfo::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.AdminInfo.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdminInfo::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminInfo.mobile)
}

// repeated string regions = 5;
inline int AdminInfo::regions_size() const {
  return regions_.size();
}
inline void AdminInfo::clear_regions() {
  regions_.Clear();
}
inline const ::std::string& AdminInfo::regions(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.AdminInfo.regions)
  return regions_.Get(index);
}
inline ::std::string* AdminInfo::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.AdminInfo.regions)
  return regions_.Mutable(index);
}
inline void AdminInfo::set_regions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.regions)
  regions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AdminInfo::set_regions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.AdminInfo.regions)
  regions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AdminInfo::set_regions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.AdminInfo.regions)
}
inline void AdminInfo::set_regions(int index, const char* value, size_t size) {
  regions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminInfo.regions)
}
inline ::std::string* AdminInfo::add_regions() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.AdminInfo.regions)
  return regions_.Add();
}
inline void AdminInfo::add_regions(const ::std::string& value) {
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.AdminInfo.regions)
}
#if LANG_CXX11
inline void AdminInfo::add_regions(::std::string&& value) {
  regions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.AdminInfo.regions)
}
#endif
inline void AdminInfo::add_regions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.AdminInfo.regions)
}
inline void AdminInfo::add_regions(const char* value, size_t size) {
  regions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.AdminInfo.regions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AdminInfo::regions() const {
  // @@protoc_insertion_point(field_list:ttmall.AdminInfo.regions)
  return regions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AdminInfo::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.AdminInfo.regions)
  return &regions_;
}

// -------------------------------------------------------------------

// AdminLoginReq

// string mobile = 1;
inline void AdminLoginReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdminLoginReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginReq.mobile)
  return mobile_.GetNoArena();
}
inline void AdminLoginReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminLoginReq.mobile)
}
#if LANG_CXX11
inline void AdminLoginReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminLoginReq.mobile)
}
#endif
inline void AdminLoginReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminLoginReq.mobile)
}
inline void AdminLoginReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminLoginReq.mobile)
}
inline ::std::string* AdminLoginReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdminLoginReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdminLoginReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginReq.mobile)
}

// string passwd = 2;
inline void AdminLoginReq::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdminLoginReq::passwd() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginReq.passwd)
  return passwd_.GetNoArena();
}
inline void AdminLoginReq::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminLoginReq.passwd)
}
#if LANG_CXX11
inline void AdminLoginReq::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminLoginReq.passwd)
}
#endif
inline void AdminLoginReq::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminLoginReq.passwd)
}
inline void AdminLoginReq::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminLoginReq.passwd)
}
inline ::std::string* AdminLoginReq::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginReq.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdminLoginReq::release_passwd() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginReq.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdminLoginReq::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginReq.passwd)
}

// string platform = 3;
inline void AdminLoginReq::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdminLoginReq::platform() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginReq.platform)
  return platform_.GetNoArena();
}
inline void AdminLoginReq::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminLoginReq.platform)
}
#if LANG_CXX11
inline void AdminLoginReq::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminLoginReq.platform)
}
#endif
inline void AdminLoginReq::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminLoginReq.platform)
}
inline void AdminLoginReq::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminLoginReq.platform)
}
inline ::std::string* AdminLoginReq::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginReq.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdminLoginReq::release_platform() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginReq.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdminLoginReq::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginReq.platform)
}

// -------------------------------------------------------------------

// AdminLoginRep

// string token = 1;
inline void AdminLoginRep::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdminLoginRep::token() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginRep.token)
  return token_.GetNoArena();
}
inline void AdminLoginRep::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AdminLoginRep.token)
}
#if LANG_CXX11
inline void AdminLoginRep::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AdminLoginRep.token)
}
#endif
inline void AdminLoginRep::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AdminLoginRep.token)
}
inline void AdminLoginRep::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AdminLoginRep.token)
}
inline ::std::string* AdminLoginRep::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginRep.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdminLoginRep::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginRep.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdminLoginRep::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginRep.token)
}

// .ttmall.AdminInfo Info = 2;
inline bool AdminLoginRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void AdminLoginRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::AdminInfo& AdminLoginRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.AdminLoginRep.Info)
  return info_ != NULL ? *info_
                         : *::ttmall::AdminInfo::internal_default_instance();
}
inline ::ttmall::AdminInfo* AdminLoginRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AdminInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.AdminLoginRep.Info)
  return info_;
}
inline ::ttmall::AdminInfo* AdminLoginRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.AdminLoginRep.Info)
  
  ::ttmall::AdminInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void AdminLoginRep::set_allocated_info(::ttmall::AdminInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.AdminLoginRep.Info)
}

// -------------------------------------------------------------------

// GetAdminInfoReq

// string token = 1;
inline void GetAdminInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAdminInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetAdminInfoReq.token)
  return token_.GetNoArena();
}
inline void GetAdminInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetAdminInfoReq.token)
}
#if LANG_CXX11
inline void GetAdminInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetAdminInfoReq.token)
}
#endif
inline void GetAdminInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetAdminInfoReq.token)
}
inline void GetAdminInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetAdminInfoReq.token)
}
inline ::std::string* GetAdminInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetAdminInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAdminInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetAdminInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAdminInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetAdminInfoReq.token)
}

// -------------------------------------------------------------------

// GetAdminInfoRep

// .ttmall.AdminInfo info = 1;
inline bool GetAdminInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void GetAdminInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::AdminInfo& GetAdminInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.GetAdminInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::AdminInfo::internal_default_instance();
}
inline ::ttmall::AdminInfo* GetAdminInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AdminInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.GetAdminInfoRep.info)
  return info_;
}
inline ::ttmall::AdminInfo* GetAdminInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.GetAdminInfoRep.info)
  
  ::ttmall::AdminInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GetAdminInfoRep::set_allocated_info(::ttmall::AdminInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetAdminInfoRep.info)
}

// -------------------------------------------------------------------

// DeleteAdminUserAddressReq

// string token = 1;
inline void DeleteAdminUserAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAdminUserAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserAddressReq.token)
  return token_.GetNoArena();
}
inline void DeleteAdminUserAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserAddressReq.token)
}
#if LANG_CXX11
inline void DeleteAdminUserAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserAddressReq.token)
}
#endif
inline void DeleteAdminUserAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserAddressReq.token)
}
inline void DeleteAdminUserAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserAddressReq.token)
}
inline ::std::string* DeleteAdminUserAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAdminUserAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAdminUserAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserAddressReq.token)
}

// string user_id = 2;
inline void DeleteAdminUserAddressReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAdminUserAddressReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserAddressReq.user_id)
  return user_id_.GetNoArena();
}
inline void DeleteAdminUserAddressReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserAddressReq.user_id)
}
#if LANG_CXX11
inline void DeleteAdminUserAddressReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserAddressReq.user_id)
}
#endif
inline void DeleteAdminUserAddressReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserAddressReq.user_id)
}
inline void DeleteAdminUserAddressReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserAddressReq.user_id)
}
inline ::std::string* DeleteAdminUserAddressReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserAddressReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAdminUserAddressReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserAddressReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAdminUserAddressReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserAddressReq.user_id)
}

// string addr_id = 3;
inline void DeleteAdminUserAddressReq::clear_addr_id() {
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAdminUserAddressReq::addr_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserAddressReq.addr_id)
  return addr_id_.GetNoArena();
}
inline void DeleteAdminUserAddressReq::set_addr_id(const ::std::string& value) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserAddressReq.addr_id)
}
#if LANG_CXX11
inline void DeleteAdminUserAddressReq::set_addr_id(::std::string&& value) {
  
  addr_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserAddressReq.addr_id)
}
#endif
inline void DeleteAdminUserAddressReq::set_addr_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserAddressReq.addr_id)
}
inline void DeleteAdminUserAddressReq::set_addr_id(const char* value, size_t size) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserAddressReq.addr_id)
}
inline ::std::string* DeleteAdminUserAddressReq::mutable_addr_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserAddressReq.addr_id)
  return addr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAdminUserAddressReq::release_addr_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserAddressReq.addr_id)
  
  return addr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAdminUserAddressReq::set_allocated_addr_id(::std::string* addr_id) {
  if (addr_id != NULL) {
    
  } else {
    
  }
  addr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserAddressReq.addr_id)
}

// -------------------------------------------------------------------

// DeleteAdminUserAddressRep

// string addr_id = 1;
inline void DeleteAdminUserAddressRep::clear_addr_id() {
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAdminUserAddressRep::addr_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteAdminUserAddressRep.addr_id)
  return addr_id_.GetNoArena();
}
inline void DeleteAdminUserAddressRep::set_addr_id(const ::std::string& value) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteAdminUserAddressRep.addr_id)
}
#if LANG_CXX11
inline void DeleteAdminUserAddressRep::set_addr_id(::std::string&& value) {
  
  addr_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteAdminUserAddressRep.addr_id)
}
#endif
inline void DeleteAdminUserAddressRep::set_addr_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteAdminUserAddressRep.addr_id)
}
inline void DeleteAdminUserAddressRep::set_addr_id(const char* value, size_t size) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteAdminUserAddressRep.addr_id)
}
inline ::std::string* DeleteAdminUserAddressRep::mutable_addr_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteAdminUserAddressRep.addr_id)
  return addr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAdminUserAddressRep::release_addr_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteAdminUserAddressRep.addr_id)
  
  return addr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAdminUserAddressRep::set_allocated_addr_id(::std::string* addr_id) {
  if (addr_id != NULL) {
    
  } else {
    
  }
  addr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteAdminUserAddressRep.addr_id)
}

// -------------------------------------------------------------------

// RegisterAdminUserReq

// string token = 1;
inline void RegisterAdminUserReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.token)
  return token_.GetNoArena();
}
inline void RegisterAdminUserReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.token)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.token)
}
#endif
inline void RegisterAdminUserReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.token)
}
inline void RegisterAdminUserReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.token)
}
inline ::std::string* RegisterAdminUserReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.token)
}

// string auth_token = 2;
inline void RegisterAdminUserReq::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::auth_token() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.auth_token)
  return auth_token_.GetNoArena();
}
inline void RegisterAdminUserReq::set_auth_token(const ::std::string& value) {
  
  auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.auth_token)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_auth_token(::std::string&& value) {
  
  auth_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.auth_token)
}
#endif
inline void RegisterAdminUserReq::set_auth_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.auth_token)
}
inline void RegisterAdminUserReq::set_auth_token(const char* value, size_t size) {
  
  auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.auth_token)
}
inline ::std::string* RegisterAdminUserReq::mutable_auth_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.auth_token)
  return auth_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_auth_token() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.auth_token)
  
  return auth_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_auth_token(::std::string* auth_token) {
  if (auth_token != NULL) {
    
  } else {
    
  }
  auth_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.auth_token)
}

// string auth_code = 3;
inline void RegisterAdminUserReq::clear_auth_code() {
  auth_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::auth_code() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.auth_code)
  return auth_code_.GetNoArena();
}
inline void RegisterAdminUserReq::set_auth_code(const ::std::string& value) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.auth_code)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_auth_code(::std::string&& value) {
  
  auth_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.auth_code)
}
#endif
inline void RegisterAdminUserReq::set_auth_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.auth_code)
}
inline void RegisterAdminUserReq::set_auth_code(const char* value, size_t size) {
  
  auth_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.auth_code)
}
inline ::std::string* RegisterAdminUserReq::mutable_auth_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.auth_code)
  return auth_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_auth_code() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.auth_code)
  
  return auth_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_auth_code(::std::string* auth_code) {
  if (auth_code != NULL) {
    
  } else {
    
  }
  auth_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.auth_code)
}

// string mobile = 4;
inline void RegisterAdminUserReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.mobile)
  return mobile_.GetNoArena();
}
inline void RegisterAdminUserReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.mobile)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.mobile)
}
#endif
inline void RegisterAdminUserReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.mobile)
}
inline void RegisterAdminUserReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.mobile)
}
inline ::std::string* RegisterAdminUserReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.mobile)
}

// string name = 5;
inline void RegisterAdminUserReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.name)
  return name_.GetNoArena();
}
inline void RegisterAdminUserReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.name)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.name)
}
#endif
inline void RegisterAdminUserReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.name)
}
inline void RegisterAdminUserReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.name)
}
inline ::std::string* RegisterAdminUserReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.name)
}

// string owner = 6;
inline void RegisterAdminUserReq::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::owner() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.owner)
  return owner_.GetNoArena();
}
inline void RegisterAdminUserReq::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.owner)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_owner(::std::string&& value) {
  
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.owner)
}
#endif
inline void RegisterAdminUserReq::set_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.owner)
}
inline void RegisterAdminUserReq::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.owner)
}
inline ::std::string* RegisterAdminUserReq::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_owner() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.owner)
}

// repeated string types = 7;
inline int RegisterAdminUserReq::types_size() const {
  return types_.size();
}
inline void RegisterAdminUserReq::clear_types() {
  types_.Clear();
}
inline const ::std::string& RegisterAdminUserReq::types(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.types)
  return types_.Get(index);
}
inline ::std::string* RegisterAdminUserReq::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.types)
  return types_.Mutable(index);
}
inline void RegisterAdminUserReq::set_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.types)
  types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.types)
  types_.Mutable(index)->assign(std::move(value));
}
#endif
inline void RegisterAdminUserReq::set_types(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.types)
}
inline void RegisterAdminUserReq::set_types(int index, const char* value, size_t size) {
  types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.types)
}
inline ::std::string* RegisterAdminUserReq::add_types() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.RegisterAdminUserReq.types)
  return types_.Add();
}
inline void RegisterAdminUserReq::add_types(const ::std::string& value) {
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.RegisterAdminUserReq.types)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::add_types(::std::string&& value) {
  types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.RegisterAdminUserReq.types)
}
#endif
inline void RegisterAdminUserReq::add_types(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.RegisterAdminUserReq.types)
}
inline void RegisterAdminUserReq::add_types(const char* value, size_t size) {
  types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.RegisterAdminUserReq.types)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RegisterAdminUserReq::types() const {
  // @@protoc_insertion_point(field_list:ttmall.RegisterAdminUserReq.types)
  return types_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RegisterAdminUserReq::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.RegisterAdminUserReq.types)
  return &types_;
}

// string pass = 8;
inline void RegisterAdminUserReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::pass() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.pass)
  return pass_.GetNoArena();
}
inline void RegisterAdminUserReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.pass)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_pass(::std::string&& value) {
  
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.pass)
}
#endif
inline void RegisterAdminUserReq::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.pass)
}
inline void RegisterAdminUserReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.pass)
}
inline ::std::string* RegisterAdminUserReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_pass() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.pass)
}

// string referee = 9;
inline void RegisterAdminUserReq::clear_referee() {
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::referee() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.referee)
  return referee_.GetNoArena();
}
inline void RegisterAdminUserReq::set_referee(const ::std::string& value) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.referee)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_referee(::std::string&& value) {
  
  referee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.referee)
}
#endif
inline void RegisterAdminUserReq::set_referee(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.referee)
}
inline void RegisterAdminUserReq::set_referee(const char* value, size_t size) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.referee)
}
inline ::std::string* RegisterAdminUserReq::mutable_referee() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.referee)
  return referee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_referee() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.referee)
  
  return referee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_referee(::std::string* referee) {
  if (referee != NULL) {
    
  } else {
    
  }
  referee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referee);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.referee)
}

// string deliver_time = 10;
inline void RegisterAdminUserReq::clear_deliver_time() {
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.deliver_time)
  return deliver_time_.GetNoArena();
}
inline void RegisterAdminUserReq::set_deliver_time(const ::std::string& value) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.deliver_time)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_deliver_time(::std::string&& value) {
  
  deliver_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.deliver_time)
}
#endif
inline void RegisterAdminUserReq::set_deliver_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.deliver_time)
}
inline void RegisterAdminUserReq::set_deliver_time(const char* value, size_t size) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.deliver_time)
}
inline ::std::string* RegisterAdminUserReq::mutable_deliver_time() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.deliver_time)
  return deliver_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.deliver_time)
  
  return deliver_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_deliver_time(::std::string* deliver_time) {
  if (deliver_time != NULL) {
    
  } else {
    
  }
  deliver_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliver_time);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.deliver_time)
}

// string mark = 11;
inline void RegisterAdminUserReq::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.mark)
  return mark_.GetNoArena();
}
inline void RegisterAdminUserReq::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.mark)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.mark)
}
#endif
inline void RegisterAdminUserReq::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.mark)
}
inline void RegisterAdminUserReq::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.mark)
}
inline ::std::string* RegisterAdminUserReq::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.mark)
}

// .ttmall.AddressInfo address = 12;
inline bool RegisterAdminUserReq::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline void RegisterAdminUserReq::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
inline const ::ttmall::AddressInfo& RegisterAdminUserReq::address() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.address)
  return address_ != NULL ? *address_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
inline ::ttmall::AddressInfo* RegisterAdminUserReq::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.address)
  return address_;
}
inline ::ttmall::AddressInfo* RegisterAdminUserReq::release_address() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.address)
  
  ::ttmall::AddressInfo* temp = address_;
  address_ = NULL;
  return temp;
}
inline void RegisterAdminUserReq::set_allocated_address(::ttmall::AddressInfo* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.address)
}

// int32 level = 13;
inline void RegisterAdminUserReq::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 RegisterAdminUserReq::level() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.level)
  return level_;
}
inline void RegisterAdminUserReq::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.level)
}

// string type = 14;
inline void RegisterAdminUserReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterAdminUserReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserReq.type)
  return type_.GetNoArena();
}
inline void RegisterAdminUserReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegisterAdminUserReq.type)
}
#if LANG_CXX11
inline void RegisterAdminUserReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegisterAdminUserReq.type)
}
#endif
inline void RegisterAdminUserReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegisterAdminUserReq.type)
}
inline void RegisterAdminUserReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegisterAdminUserReq.type)
}
inline ::std::string* RegisterAdminUserReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterAdminUserReq::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterAdminUserReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserReq.type)
}

// -------------------------------------------------------------------

// RegisterAdminUserRep

// .ttmall.UserInfo info = 1;
inline bool RegisterAdminUserRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void RegisterAdminUserRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::UserInfo& RegisterAdminUserRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.RegisterAdminUserRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
inline ::ttmall::UserInfo* RegisterAdminUserRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.RegisterAdminUserRep.info)
  return info_;
}
inline ::ttmall::UserInfo* RegisterAdminUserRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.RegisterAdminUserRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RegisterAdminUserRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegisterAdminUserRep.info)
}

// -------------------------------------------------------------------

// SetAdminUserDefaultAddressReq

// string token = 1;
inline void SetAdminUserDefaultAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminUserDefaultAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SetAdminUserDefaultAddressReq.token)
  return token_.GetNoArena();
}
inline void SetAdminUserDefaultAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetAdminUserDefaultAddressReq.token)
}
#if LANG_CXX11
inline void SetAdminUserDefaultAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetAdminUserDefaultAddressReq.token)
}
#endif
inline void SetAdminUserDefaultAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetAdminUserDefaultAddressReq.token)
}
inline void SetAdminUserDefaultAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetAdminUserDefaultAddressReq.token)
}
inline ::std::string* SetAdminUserDefaultAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetAdminUserDefaultAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminUserDefaultAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SetAdminUserDefaultAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminUserDefaultAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetAdminUserDefaultAddressReq.token)
}

// string user_id = 2;
inline void SetAdminUserDefaultAddressReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminUserDefaultAddressReq::user_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetAdminUserDefaultAddressReq.user_id)
  return user_id_.GetNoArena();
}
inline void SetAdminUserDefaultAddressReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetAdminUserDefaultAddressReq.user_id)
}
#if LANG_CXX11
inline void SetAdminUserDefaultAddressReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetAdminUserDefaultAddressReq.user_id)
}
#endif
inline void SetAdminUserDefaultAddressReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetAdminUserDefaultAddressReq.user_id)
}
inline void SetAdminUserDefaultAddressReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetAdminUserDefaultAddressReq.user_id)
}
inline ::std::string* SetAdminUserDefaultAddressReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetAdminUserDefaultAddressReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminUserDefaultAddressReq::release_user_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetAdminUserDefaultAddressReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminUserDefaultAddressReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetAdminUserDefaultAddressReq.user_id)
}

// string addr_id = 3;
inline void SetAdminUserDefaultAddressReq::clear_addr_id() {
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminUserDefaultAddressReq::addr_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetAdminUserDefaultAddressReq.addr_id)
  return addr_id_.GetNoArena();
}
inline void SetAdminUserDefaultAddressReq::set_addr_id(const ::std::string& value) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}
#if LANG_CXX11
inline void SetAdminUserDefaultAddressReq::set_addr_id(::std::string&& value) {
  
  addr_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}
#endif
inline void SetAdminUserDefaultAddressReq::set_addr_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}
inline void SetAdminUserDefaultAddressReq::set_addr_id(const char* value, size_t size) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}
inline ::std::string* SetAdminUserDefaultAddressReq::mutable_addr_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetAdminUserDefaultAddressReq.addr_id)
  return addr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminUserDefaultAddressReq::release_addr_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetAdminUserDefaultAddressReq.addr_id)
  
  return addr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminUserDefaultAddressReq::set_allocated_addr_id(::std::string* addr_id) {
  if (addr_id != NULL) {
    
  } else {
    
  }
  addr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetAdminUserDefaultAddressReq.addr_id)
}

// -------------------------------------------------------------------

// SetAdminUserDefaultAddressRep

// string addr_id = 1;
inline void SetAdminUserDefaultAddressRep::clear_addr_id() {
  addr_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminUserDefaultAddressRep::addr_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetAdminUserDefaultAddressRep.addr_id)
  return addr_id_.GetNoArena();
}
inline void SetAdminUserDefaultAddressRep::set_addr_id(const ::std::string& value) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}
#if LANG_CXX11
inline void SetAdminUserDefaultAddressRep::set_addr_id(::std::string&& value) {
  
  addr_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}
#endif
inline void SetAdminUserDefaultAddressRep::set_addr_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}
inline void SetAdminUserDefaultAddressRep::set_addr_id(const char* value, size_t size) {
  
  addr_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}
inline ::std::string* SetAdminUserDefaultAddressRep::mutable_addr_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetAdminUserDefaultAddressRep.addr_id)
  return addr_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminUserDefaultAddressRep::release_addr_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetAdminUserDefaultAddressRep.addr_id)
  
  return addr_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminUserDefaultAddressRep::set_allocated_addr_id(::std::string* addr_id) {
  if (addr_id != NULL) {
    
  } else {
    
  }
  addr_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetAdminUserDefaultAddressRep.addr_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ttmall

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_admin_2eproto__INCLUDED
