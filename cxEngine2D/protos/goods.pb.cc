// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goods.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "goods.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ttmall {
class ListDiscountReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListDiscountReq> {
} _ListDiscountReq_default_instance_;
class ListDiscountRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListDiscountRep> {
} _ListDiscountRep_default_instance_;
class ListGoodsReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListGoodsReq> {
} _ListGoodsReq_default_instance_;
class ListGoodsRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListGoodsRep> {
} _ListGoodsRep_default_instance_;
class ListTypeReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListTypeReq> {
} _ListTypeReq_default_instance_;
class ListTypeRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListTypeRep> {
} _ListTypeRep_default_instance_;
class SearchGoodsReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchGoodsReq> {
} _SearchGoodsReq_default_instance_;
class SearchGoodsRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchGoodsRep> {
} _SearchGoodsRep_default_instance_;
class ListTypeBrandReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListTypeBrandReq> {
} _ListTypeBrandReq_default_instance_;
class ListTypeBrandRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListTypeBrandRep> {
} _ListTypeBrandRep_default_instance_;
class GetGoodsInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetGoodsInfoReq> {
} _GetGoodsInfoReq_default_instance_;
class GetGoodsInfoRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetGoodsInfoRep> {
} _GetGoodsInfoRep_default_instance_;

namespace protobuf_goods_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[12];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDiscountReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDiscountReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDiscountRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDiscountRep, remain_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListDiscountRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsReq, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsReq, skip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsReq, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsReq, brand_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsReq, discount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchGoodsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchGoodsReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchGoodsReq, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchGoodsReq, skip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchGoodsReq, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchGoodsRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchGoodsRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeBrandReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeBrandReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeBrandReq, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeBrandRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTypeBrandRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGoodsInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGoodsInfoReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGoodsInfoReq, goods_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGoodsInfoRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGoodsInfoRep, info_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ListDiscountReq)},
  { 6, -1, sizeof(ListDiscountRep)},
  { 13, -1, sizeof(ListGoodsReq)},
  { 24, -1, sizeof(ListGoodsRep)},
  { 30, -1, sizeof(ListTypeReq)},
  { 36, -1, sizeof(ListTypeRep)},
  { 42, -1, sizeof(SearchGoodsReq)},
  { 51, -1, sizeof(SearchGoodsRep)},
  { 57, -1, sizeof(ListTypeBrandReq)},
  { 64, -1, sizeof(ListTypeBrandRep)},
  { 70, -1, sizeof(GetGoodsInfoReq)},
  { 77, -1, sizeof(GetGoodsInfoRep)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListDiscountReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListDiscountRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListGoodsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListGoodsRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListTypeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListTypeRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchGoodsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchGoodsRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListTypeBrandReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListTypeBrandRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetGoodsInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetGoodsInfoRep_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "goods.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

}  // namespace

void TableStruct::Shutdown() {
  _ListDiscountReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ListDiscountRep_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ListGoodsReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ListGoodsRep_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ListTypeReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ListTypeRep_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _SearchGoodsReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _SearchGoodsRep_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ListTypeBrandReq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ListTypeBrandRep_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _GetGoodsInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _GetGoodsInfoRep_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ttmall::protobuf_public_2eproto::InitDefaults();
  _ListDiscountReq_default_instance_.DefaultConstruct();
  _ListDiscountRep_default_instance_.DefaultConstruct();
  _ListGoodsReq_default_instance_.DefaultConstruct();
  _ListGoodsRep_default_instance_.DefaultConstruct();
  _ListTypeReq_default_instance_.DefaultConstruct();
  _ListTypeRep_default_instance_.DefaultConstruct();
  _SearchGoodsReq_default_instance_.DefaultConstruct();
  _SearchGoodsRep_default_instance_.DefaultConstruct();
  _ListTypeBrandReq_default_instance_.DefaultConstruct();
  _ListTypeBrandRep_default_instance_.DefaultConstruct();
  _GetGoodsInfoReq_default_instance_.DefaultConstruct();
  _GetGoodsInfoRep_default_instance_.DefaultConstruct();
  _GetGoodsInfoRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::GoodsInfo*>(
      ::ttmall::GoodsInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013goods.proto\022\006ttmall\032\014public.proto\" \n\017L"
      "istDiscountReq\022\r\n\005token\030\001 \001(\t\"H\n\017ListDis"
      "countRep\022\023\n\013remain_time\030\001 \001(\005\022 \n\005items\030\002"
      " \003(\0132\021.ttmall.GoodsInfo\"o\n\014ListGoodsReq\022"
      "\r\n\005token\030\001 \001(\t\022\017\n\007type_id\030\002 \001(\t\022\014\n\004skip\030"
      "\003 \001(\005\022\r\n\005limit\030\004 \001(\005\022\020\n\010brand_id\030\005 \003(\t\022\020"
      "\n\010discount\030\006 \001(\010\"0\n\014ListGoodsRep\022 \n\005item"
      "s\030\001 \003(\0132\021.ttmall.GoodsInfo\"\034\n\013ListTypeRe"
      "q\022\r\n\005token\030\001 \001(\t\".\n\013ListTypeRep\022\037\n\005items"
      "\030\001 \003(\0132\020.ttmall.TypeInfo\"I\n\016SearchGoodsR"
      "eq\022\r\n\005token\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\014\n\004skip\030\003"
      " \001(\005\022\r\n\005limit\030\004 \001(\005\"2\n\016SearchGoodsRep\022 \n"
      "\005items\030\001 \003(\0132\021.ttmall.GoodsInfo\"/\n\020ListT"
      "ypeBrandReq\022\r\n\005token\030\001 \001(\t\022\014\n\004type\030\002 \001(\t"
      "\"4\n\020ListTypeBrandRep\022 \n\005items\030\001 \003(\0132\021.tt"
      "mall.BrandInfo\"2\n\017GetGoodsInfoReq\022\r\n\005tok"
      "en\030\001 \001(\t\022\020\n\010goods_id\030\002 \001(\t\"2\n\017GetGoodsIn"
      "foRep\022\037\n\004info\030\001 \001(\0132\021.ttmall.GoodsInfo2\222"
      "\003\n\014GoodsService\022B\n\014GetGoodsInfo\022\027.ttmall"
      ".GetGoodsInfoReq\032\027.ttmall.GetGoodsInfoRe"
      "p\"\000\022E\n\rListTypeBrand\022\030.ttmall.ListTypeBr"
      "andReq\032\030.ttmall.ListTypeBrandRep\"\000\022\?\n\013Se"
      "archGoods\022\026.ttmall.SearchGoodsReq\032\026.ttma"
      "ll.SearchGoodsRep\"\000\022B\n\014ListDiscount\022\027.tt"
      "mall.ListDiscountReq\032\027.ttmall.ListDiscou"
      "ntRep\"\000\0227\n\tListTypes\022\023.ttmall.ListTypeRe"
      "q\032\023.ttmall.ListTypeRep\"\000\0229\n\tListGoods\022\024."
      "ttmall.ListGoodsReq\032\024.ttmall.ListGoodsRe"
      "p\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1131);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "goods.proto", &protobuf_RegisterTypes);
  ::ttmall::protobuf_public_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_goods_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDiscountReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDiscountReq::ListDiscountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListDiscountReq)
}
ListDiscountReq::ListDiscountReq(const ListDiscountReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListDiscountReq)
}

void ListDiscountReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListDiscountReq::~ListDiscountReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListDiscountReq)
  SharedDtor();
}

void ListDiscountReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListDiscountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListDiscountReq::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDiscountReq& ListDiscountReq::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListDiscountReq* ListDiscountReq::New(::google::protobuf::Arena* arena) const {
  ListDiscountReq* n = new ListDiscountReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListDiscountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListDiscountReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListDiscountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListDiscountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListDiscountReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListDiscountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListDiscountReq)
  return false;
#undef DO_
}

void ListDiscountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListDiscountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListDiscountReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListDiscountReq)
}

::google::protobuf::uint8* ListDiscountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListDiscountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListDiscountReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListDiscountReq)
  return target;
}

size_t ListDiscountReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListDiscountReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListDiscountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListDiscountReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDiscountReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDiscountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListDiscountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListDiscountReq)
    MergeFrom(*source);
  }
}

void ListDiscountReq::MergeFrom(const ListDiscountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListDiscountReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListDiscountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListDiscountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDiscountReq::CopyFrom(const ListDiscountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListDiscountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDiscountReq::IsInitialized() const {
  return true;
}

void ListDiscountReq::Swap(ListDiscountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDiscountReq::InternalSwap(ListDiscountReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListDiscountReq::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListDiscountReq

// string token = 1;
void ListDiscountReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListDiscountReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListDiscountReq.token)
  return token_.GetNoArena();
}
void ListDiscountReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListDiscountReq.token)
}
#if LANG_CXX11
void ListDiscountReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListDiscountReq.token)
}
#endif
void ListDiscountReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListDiscountReq.token)
}
void ListDiscountReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListDiscountReq.token)
}
::std::string* ListDiscountReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListDiscountReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListDiscountReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListDiscountReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListDiscountReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListDiscountReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDiscountRep::kRemainTimeFieldNumber;
const int ListDiscountRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDiscountRep::ListDiscountRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListDiscountRep)
}
ListDiscountRep::ListDiscountRep(const ListDiscountRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remain_time_ = from.remain_time_;
  // @@protoc_insertion_point(copy_constructor:ttmall.ListDiscountRep)
}

void ListDiscountRep::SharedCtor() {
  remain_time_ = 0;
  _cached_size_ = 0;
}

ListDiscountRep::~ListDiscountRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListDiscountRep)
  SharedDtor();
}

void ListDiscountRep::SharedDtor() {
}

void ListDiscountRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListDiscountRep::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDiscountRep& ListDiscountRep::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListDiscountRep* ListDiscountRep::New(::google::protobuf::Arena* arena) const {
  ListDiscountRep* n = new ListDiscountRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListDiscountRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListDiscountRep)
  items_.Clear();
  remain_time_ = 0;
}

bool ListDiscountRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListDiscountRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 remain_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remain_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.GoodsInfo items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListDiscountRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListDiscountRep)
  return false;
#undef DO_
}

void ListDiscountRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListDiscountRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 remain_time = 1;
  if (this->remain_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->remain_time(), output);
  }

  // repeated .ttmall.GoodsInfo items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListDiscountRep)
}

::google::protobuf::uint8* ListDiscountRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListDiscountRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 remain_time = 1;
  if (this->remain_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->remain_time(), target);
  }

  // repeated .ttmall.GoodsInfo items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListDiscountRep)
  return target;
}

size_t ListDiscountRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListDiscountRep)
  size_t total_size = 0;

  // repeated .ttmall.GoodsInfo items = 2;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // int32 remain_time = 1;
  if (this->remain_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remain_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListDiscountRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListDiscountRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDiscountRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDiscountRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListDiscountRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListDiscountRep)
    MergeFrom(*source);
  }
}

void ListDiscountRep::MergeFrom(const ListDiscountRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListDiscountRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.remain_time() != 0) {
    set_remain_time(from.remain_time());
  }
}

void ListDiscountRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListDiscountRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDiscountRep::CopyFrom(const ListDiscountRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListDiscountRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDiscountRep::IsInitialized() const {
  return true;
}

void ListDiscountRep::Swap(ListDiscountRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDiscountRep::InternalSwap(ListDiscountRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(remain_time_, other->remain_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListDiscountRep::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListDiscountRep

// int32 remain_time = 1;
void ListDiscountRep::clear_remain_time() {
  remain_time_ = 0;
}
::google::protobuf::int32 ListDiscountRep::remain_time() const {
  // @@protoc_insertion_point(field_get:ttmall.ListDiscountRep.remain_time)
  return remain_time_;
}
void ListDiscountRep::set_remain_time(::google::protobuf::int32 value) {
  
  remain_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListDiscountRep.remain_time)
}

// repeated .ttmall.GoodsInfo items = 2;
int ListDiscountRep::items_size() const {
  return items_.size();
}
void ListDiscountRep::clear_items() {
  items_.Clear();
}
const ::ttmall::GoodsInfo& ListDiscountRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListDiscountRep.items)
  return items_.Get(index);
}
::ttmall::GoodsInfo* ListDiscountRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListDiscountRep.items)
  return items_.Mutable(index);
}
::ttmall::GoodsInfo* ListDiscountRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListDiscountRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
ListDiscountRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListDiscountRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
ListDiscountRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListDiscountRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGoodsReq::kTokenFieldNumber;
const int ListGoodsReq::kTypeIdFieldNumber;
const int ListGoodsReq::kSkipFieldNumber;
const int ListGoodsReq::kLimitFieldNumber;
const int ListGoodsReq::kBrandIdFieldNumber;
const int ListGoodsReq::kDiscountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGoodsReq::ListGoodsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListGoodsReq)
}
ListGoodsReq::ListGoodsReq(const ListGoodsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      brand_id_(from.brand_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  type_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_id().size() > 0) {
    type_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_id_);
  }
  ::memcpy(&skip_, &from.skip_,
    reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&skip_) + sizeof(discount_));
  // @@protoc_insertion_point(copy_constructor:ttmall.ListGoodsReq)
}

void ListGoodsReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&skip_) + sizeof(discount_));
  _cached_size_ = 0;
}

ListGoodsReq::~ListGoodsReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListGoodsReq)
  SharedDtor();
}

void ListGoodsReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListGoodsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGoodsReq::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListGoodsReq& ListGoodsReq::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListGoodsReq* ListGoodsReq::New(::google::protobuf::Arena* arena) const {
  ListGoodsReq* n = new ListGoodsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGoodsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListGoodsReq)
  brand_id_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&skip_) + sizeof(discount_));
}

bool ListGoodsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListGoodsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListGoodsReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_id().data(), this->type_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListGoodsReq.type_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string brand_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_brand_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brand_id(this->brand_id_size() - 1).data(),
            this->brand_id(this->brand_id_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListGoodsReq.brand_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool discount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListGoodsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListGoodsReq)
  return false;
#undef DO_
}

void ListGoodsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListGoodsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListGoodsReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string type_id = 2;
  if (this->type_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_id().data(), this->type_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListGoodsReq.type_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_id(), output);
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skip(), output);
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit(), output);
  }

  // repeated string brand_id = 5;
  for (int i = 0, n = this->brand_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brand_id(i).data(), this->brand_id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListGoodsReq.brand_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->brand_id(i), output);
  }

  // bool discount = 6;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->discount(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListGoodsReq)
}

::google::protobuf::uint8* ListGoodsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListGoodsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListGoodsReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string type_id = 2;
  if (this->type_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_id().data(), this->type_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListGoodsReq.type_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type_id(), target);
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skip(), target);
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit(), target);
  }

  // repeated string brand_id = 5;
  for (int i = 0, n = this->brand_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brand_id(i).data(), this->brand_id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListGoodsReq.brand_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->brand_id(i), target);
  }

  // bool discount = 6;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->discount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListGoodsReq)
  return target;
}

size_t ListGoodsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListGoodsReq)
  size_t total_size = 0;

  // repeated string brand_id = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->brand_id_size());
  for (int i = 0, n = this->brand_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->brand_id(i));
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string type_id = 2;
  if (this->type_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_id());
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skip());
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  // bool discount = 6;
  if (this->discount() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGoodsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListGoodsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListGoodsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGoodsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListGoodsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListGoodsReq)
    MergeFrom(*source);
  }
}

void ListGoodsReq::MergeFrom(const ListGoodsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListGoodsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  brand_id_.MergeFrom(from.brand_id_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.type_id().size() > 0) {

    type_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_id_);
  }
  if (from.skip() != 0) {
    set_skip(from.skip());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
}

void ListGoodsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListGoodsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGoodsReq::CopyFrom(const ListGoodsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListGoodsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListGoodsReq::IsInitialized() const {
  return true;
}

void ListGoodsReq::Swap(ListGoodsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGoodsReq::InternalSwap(ListGoodsReq* other) {
  brand_id_.InternalSwap(&other->brand_id_);
  token_.Swap(&other->token_);
  type_id_.Swap(&other->type_id_);
  std::swap(skip_, other->skip_);
  std::swap(limit_, other->limit_);
  std::swap(discount_, other->discount_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGoodsReq::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGoodsReq

// string token = 1;
void ListGoodsReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGoodsReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.token)
  return token_.GetNoArena();
}
void ListGoodsReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.token)
}
#if LANG_CXX11
void ListGoodsReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListGoodsReq.token)
}
#endif
void ListGoodsReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListGoodsReq.token)
}
void ListGoodsReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListGoodsReq.token)
}
::std::string* ListGoodsReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGoodsReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListGoodsReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGoodsReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListGoodsReq.token)
}

// string type_id = 2;
void ListGoodsReq::clear_type_id() {
  type_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGoodsReq::type_id() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.type_id)
  return type_id_.GetNoArena();
}
void ListGoodsReq::set_type_id(const ::std::string& value) {
  
  type_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.type_id)
}
#if LANG_CXX11
void ListGoodsReq::set_type_id(::std::string&& value) {
  
  type_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListGoodsReq.type_id)
}
#endif
void ListGoodsReq::set_type_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListGoodsReq.type_id)
}
void ListGoodsReq::set_type_id(const char* value, size_t size) {
  
  type_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListGoodsReq.type_id)
}
::std::string* ListGoodsReq::mutable_type_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsReq.type_id)
  return type_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGoodsReq::release_type_id() {
  // @@protoc_insertion_point(field_release:ttmall.ListGoodsReq.type_id)
  
  return type_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGoodsReq::set_allocated_type_id(::std::string* type_id) {
  if (type_id != NULL) {
    
  } else {
    
  }
  type_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListGoodsReq.type_id)
}

// int32 skip = 3;
void ListGoodsReq::clear_skip() {
  skip_ = 0;
}
::google::protobuf::int32 ListGoodsReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.skip)
  return skip_;
}
void ListGoodsReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.skip)
}

// int32 limit = 4;
void ListGoodsReq::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 ListGoodsReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.limit)
  return limit_;
}
void ListGoodsReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.limit)
}

// repeated string brand_id = 5;
int ListGoodsReq::brand_id_size() const {
  return brand_id_.size();
}
void ListGoodsReq::clear_brand_id() {
  brand_id_.Clear();
}
const ::std::string& ListGoodsReq::brand_id(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.brand_id)
  return brand_id_.Get(index);
}
::std::string* ListGoodsReq::mutable_brand_id(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsReq.brand_id)
  return brand_id_.Mutable(index);
}
void ListGoodsReq::set_brand_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.brand_id)
  brand_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ListGoodsReq::set_brand_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.brand_id)
  brand_id_.Mutable(index)->assign(std::move(value));
}
#endif
void ListGoodsReq::set_brand_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  brand_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.ListGoodsReq.brand_id)
}
void ListGoodsReq::set_brand_id(int index, const char* value, size_t size) {
  brand_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListGoodsReq.brand_id)
}
::std::string* ListGoodsReq::add_brand_id() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.ListGoodsReq.brand_id)
  return brand_id_.Add();
}
void ListGoodsReq::add_brand_id(const ::std::string& value) {
  brand_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.ListGoodsReq.brand_id)
}
#if LANG_CXX11
void ListGoodsReq::add_brand_id(::std::string&& value) {
  brand_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.ListGoodsReq.brand_id)
}
#endif
void ListGoodsReq::add_brand_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  brand_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.ListGoodsReq.brand_id)
}
void ListGoodsReq::add_brand_id(const char* value, size_t size) {
  brand_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.ListGoodsReq.brand_id)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListGoodsReq::brand_id() const {
  // @@protoc_insertion_point(field_list:ttmall.ListGoodsReq.brand_id)
  return brand_id_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListGoodsReq::mutable_brand_id() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListGoodsReq.brand_id)
  return &brand_id_;
}

// bool discount = 6;
void ListGoodsReq::clear_discount() {
  discount_ = false;
}
bool ListGoodsReq::discount() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.discount)
  return discount_;
}
void ListGoodsReq::set_discount(bool value) {
  
  discount_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.discount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGoodsRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGoodsRep::ListGoodsRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListGoodsRep)
}
ListGoodsRep::ListGoodsRep(const ListGoodsRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListGoodsRep)
}

void ListGoodsRep::SharedCtor() {
  _cached_size_ = 0;
}

ListGoodsRep::~ListGoodsRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListGoodsRep)
  SharedDtor();
}

void ListGoodsRep::SharedDtor() {
}

void ListGoodsRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGoodsRep::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListGoodsRep& ListGoodsRep::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListGoodsRep* ListGoodsRep::New(::google::protobuf::Arena* arena) const {
  ListGoodsRep* n = new ListGoodsRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGoodsRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListGoodsRep)
  items_.Clear();
}

bool ListGoodsRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListGoodsRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.GoodsInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListGoodsRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListGoodsRep)
  return false;
#undef DO_
}

void ListGoodsRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListGoodsRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.GoodsInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListGoodsRep)
}

::google::protobuf::uint8* ListGoodsRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListGoodsRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.GoodsInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListGoodsRep)
  return target;
}

size_t ListGoodsRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListGoodsRep)
  size_t total_size = 0;

  // repeated .ttmall.GoodsInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGoodsRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListGoodsRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListGoodsRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGoodsRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListGoodsRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListGoodsRep)
    MergeFrom(*source);
  }
}

void ListGoodsRep::MergeFrom(const ListGoodsRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListGoodsRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListGoodsRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListGoodsRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGoodsRep::CopyFrom(const ListGoodsRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListGoodsRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListGoodsRep::IsInitialized() const {
  return true;
}

void ListGoodsRep::Swap(ListGoodsRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGoodsRep::InternalSwap(ListGoodsRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGoodsRep::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGoodsRep

// repeated .ttmall.GoodsInfo items = 1;
int ListGoodsRep::items_size() const {
  return items_.size();
}
void ListGoodsRep::clear_items() {
  items_.Clear();
}
const ::ttmall::GoodsInfo& ListGoodsRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsRep.items)
  return items_.Get(index);
}
::ttmall::GoodsInfo* ListGoodsRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsRep.items)
  return items_.Mutable(index);
}
::ttmall::GoodsInfo* ListGoodsRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListGoodsRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
ListGoodsRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListGoodsRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
ListGoodsRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListGoodsRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTypeReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTypeReq::ListTypeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListTypeReq)
}
ListTypeReq::ListTypeReq(const ListTypeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListTypeReq)
}

void ListTypeReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListTypeReq::~ListTypeReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListTypeReq)
  SharedDtor();
}

void ListTypeReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTypeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTypeReq::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTypeReq& ListTypeReq::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListTypeReq* ListTypeReq::New(::google::protobuf::Arena* arena) const {
  ListTypeReq* n = new ListTypeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTypeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListTypeReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListTypeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListTypeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListTypeReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListTypeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListTypeReq)
  return false;
#undef DO_
}

void ListTypeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListTypeReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListTypeReq)
}

::google::protobuf::uint8* ListTypeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListTypeReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListTypeReq)
  return target;
}

size_t ListTypeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListTypeReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTypeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTypeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTypeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListTypeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListTypeReq)
    MergeFrom(*source);
  }
}

void ListTypeReq::MergeFrom(const ListTypeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListTypeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTypeReq::CopyFrom(const ListTypeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTypeReq::IsInitialized() const {
  return true;
}

void ListTypeReq::Swap(ListTypeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTypeReq::InternalSwap(ListTypeReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTypeReq::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTypeReq

// string token = 1;
void ListTypeReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTypeReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeReq.token)
  return token_.GetNoArena();
}
void ListTypeReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListTypeReq.token)
}
#if LANG_CXX11
void ListTypeReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListTypeReq.token)
}
#endif
void ListTypeReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListTypeReq.token)
}
void ListTypeReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListTypeReq.token)
}
::std::string* ListTypeReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTypeReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListTypeReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTypeReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListTypeReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTypeRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTypeRep::ListTypeRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListTypeRep)
}
ListTypeRep::ListTypeRep(const ListTypeRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListTypeRep)
}

void ListTypeRep::SharedCtor() {
  _cached_size_ = 0;
}

ListTypeRep::~ListTypeRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListTypeRep)
  SharedDtor();
}

void ListTypeRep::SharedDtor() {
}

void ListTypeRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTypeRep::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTypeRep& ListTypeRep::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListTypeRep* ListTypeRep::New(::google::protobuf::Arena* arena) const {
  ListTypeRep* n = new ListTypeRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTypeRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListTypeRep)
  items_.Clear();
}

bool ListTypeRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListTypeRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.TypeInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListTypeRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListTypeRep)
  return false;
#undef DO_
}

void ListTypeRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListTypeRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.TypeInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListTypeRep)
}

::google::protobuf::uint8* ListTypeRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListTypeRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.TypeInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListTypeRep)
  return target;
}

size_t ListTypeRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListTypeRep)
  size_t total_size = 0;

  // repeated .ttmall.TypeInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTypeRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListTypeRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTypeRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTypeRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListTypeRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListTypeRep)
    MergeFrom(*source);
  }
}

void ListTypeRep::MergeFrom(const ListTypeRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListTypeRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListTypeRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListTypeRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTypeRep::CopyFrom(const ListTypeRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListTypeRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTypeRep::IsInitialized() const {
  return true;
}

void ListTypeRep::Swap(ListTypeRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTypeRep::InternalSwap(ListTypeRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTypeRep::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTypeRep

// repeated .ttmall.TypeInfo items = 1;
int ListTypeRep::items_size() const {
  return items_.size();
}
void ListTypeRep::clear_items() {
  items_.Clear();
}
const ::ttmall::TypeInfo& ListTypeRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeRep.items)
  return items_.Get(index);
}
::ttmall::TypeInfo* ListTypeRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeRep.items)
  return items_.Mutable(index);
}
::ttmall::TypeInfo* ListTypeRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListTypeRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::TypeInfo >*
ListTypeRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListTypeRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::TypeInfo >&
ListTypeRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListTypeRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchGoodsReq::kTokenFieldNumber;
const int SearchGoodsReq::kKeyFieldNumber;
const int SearchGoodsReq::kSkipFieldNumber;
const int SearchGoodsReq::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchGoodsReq::SearchGoodsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SearchGoodsReq)
}
SearchGoodsReq::SearchGoodsReq(const SearchGoodsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&skip_, &from.skip_,
    reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:ttmall.SearchGoodsReq)
}

void SearchGoodsReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
  _cached_size_ = 0;
}

SearchGoodsReq::~SearchGoodsReq() {
  // @@protoc_insertion_point(destructor:ttmall.SearchGoodsReq)
  SharedDtor();
}

void SearchGoodsReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchGoodsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchGoodsReq::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchGoodsReq& SearchGoodsReq::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchGoodsReq* SearchGoodsReq::New(::google::protobuf::Arena* arena) const {
  SearchGoodsReq* n = new SearchGoodsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchGoodsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SearchGoodsReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
}

bool SearchGoodsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SearchGoodsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SearchGoodsReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SearchGoodsReq.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SearchGoodsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SearchGoodsReq)
  return false;
#undef DO_
}

void SearchGoodsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SearchGoodsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SearchGoodsReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SearchGoodsReq.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skip(), output);
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SearchGoodsReq)
}

::google::protobuf::uint8* SearchGoodsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SearchGoodsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SearchGoodsReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SearchGoodsReq.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skip(), target);
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SearchGoodsReq)
  return target;
}

size_t SearchGoodsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SearchGoodsReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skip());
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchGoodsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SearchGoodsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchGoodsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchGoodsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SearchGoodsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SearchGoodsReq)
    MergeFrom(*source);
  }
}

void SearchGoodsReq::MergeFrom(const SearchGoodsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SearchGoodsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.skip() != 0) {
    set_skip(from.skip());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void SearchGoodsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SearchGoodsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchGoodsReq::CopyFrom(const SearchGoodsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SearchGoodsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchGoodsReq::IsInitialized() const {
  return true;
}

void SearchGoodsReq::Swap(SearchGoodsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchGoodsReq::InternalSwap(SearchGoodsReq* other) {
  token_.Swap(&other->token_);
  key_.Swap(&other->key_);
  std::swap(skip_, other->skip_);
  std::swap(limit_, other->limit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchGoodsReq::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchGoodsReq

// string token = 1;
void SearchGoodsReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchGoodsReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsReq.token)
  return token_.GetNoArena();
}
void SearchGoodsReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SearchGoodsReq.token)
}
#if LANG_CXX11
void SearchGoodsReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SearchGoodsReq.token)
}
#endif
void SearchGoodsReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SearchGoodsReq.token)
}
void SearchGoodsReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SearchGoodsReq.token)
}
::std::string* SearchGoodsReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SearchGoodsReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchGoodsReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SearchGoodsReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchGoodsReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SearchGoodsReq.token)
}

// string key = 2;
void SearchGoodsReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchGoodsReq::key() const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsReq.key)
  return key_.GetNoArena();
}
void SearchGoodsReq::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SearchGoodsReq.key)
}
#if LANG_CXX11
void SearchGoodsReq::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SearchGoodsReq.key)
}
#endif
void SearchGoodsReq::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SearchGoodsReq.key)
}
void SearchGoodsReq::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SearchGoodsReq.key)
}
::std::string* SearchGoodsReq::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SearchGoodsReq.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchGoodsReq::release_key() {
  // @@protoc_insertion_point(field_release:ttmall.SearchGoodsReq.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchGoodsReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SearchGoodsReq.key)
}

// int32 skip = 3;
void SearchGoodsReq::clear_skip() {
  skip_ = 0;
}
::google::protobuf::int32 SearchGoodsReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsReq.skip)
  return skip_;
}
void SearchGoodsReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SearchGoodsReq.skip)
}

// int32 limit = 4;
void SearchGoodsReq::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 SearchGoodsReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsReq.limit)
  return limit_;
}
void SearchGoodsReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SearchGoodsReq.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchGoodsRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchGoodsRep::SearchGoodsRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SearchGoodsRep)
}
SearchGoodsRep::SearchGoodsRep(const SearchGoodsRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.SearchGoodsRep)
}

void SearchGoodsRep::SharedCtor() {
  _cached_size_ = 0;
}

SearchGoodsRep::~SearchGoodsRep() {
  // @@protoc_insertion_point(destructor:ttmall.SearchGoodsRep)
  SharedDtor();
}

void SearchGoodsRep::SharedDtor() {
}

void SearchGoodsRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchGoodsRep::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchGoodsRep& SearchGoodsRep::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchGoodsRep* SearchGoodsRep::New(::google::protobuf::Arena* arena) const {
  SearchGoodsRep* n = new SearchGoodsRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchGoodsRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SearchGoodsRep)
  items_.Clear();
}

bool SearchGoodsRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SearchGoodsRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.GoodsInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SearchGoodsRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SearchGoodsRep)
  return false;
#undef DO_
}

void SearchGoodsRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SearchGoodsRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.GoodsInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SearchGoodsRep)
}

::google::protobuf::uint8* SearchGoodsRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SearchGoodsRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.GoodsInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SearchGoodsRep)
  return target;
}

size_t SearchGoodsRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SearchGoodsRep)
  size_t total_size = 0;

  // repeated .ttmall.GoodsInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchGoodsRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SearchGoodsRep)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchGoodsRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchGoodsRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SearchGoodsRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SearchGoodsRep)
    MergeFrom(*source);
  }
}

void SearchGoodsRep::MergeFrom(const SearchGoodsRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SearchGoodsRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void SearchGoodsRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SearchGoodsRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchGoodsRep::CopyFrom(const SearchGoodsRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SearchGoodsRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchGoodsRep::IsInitialized() const {
  return true;
}

void SearchGoodsRep::Swap(SearchGoodsRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchGoodsRep::InternalSwap(SearchGoodsRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchGoodsRep::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchGoodsRep

// repeated .ttmall.GoodsInfo items = 1;
int SearchGoodsRep::items_size() const {
  return items_.size();
}
void SearchGoodsRep::clear_items() {
  items_.Clear();
}
const ::ttmall::GoodsInfo& SearchGoodsRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsRep.items)
  return items_.Get(index);
}
::ttmall::GoodsInfo* SearchGoodsRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.SearchGoodsRep.items)
  return items_.Mutable(index);
}
::ttmall::GoodsInfo* SearchGoodsRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.SearchGoodsRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
SearchGoodsRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.SearchGoodsRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
SearchGoodsRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.SearchGoodsRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTypeBrandReq::kTokenFieldNumber;
const int ListTypeBrandReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTypeBrandReq::ListTypeBrandReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListTypeBrandReq)
}
ListTypeBrandReq::ListTypeBrandReq(const ListTypeBrandReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListTypeBrandReq)
}

void ListTypeBrandReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListTypeBrandReq::~ListTypeBrandReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListTypeBrandReq)
  SharedDtor();
}

void ListTypeBrandReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTypeBrandReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTypeBrandReq::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTypeBrandReq& ListTypeBrandReq::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListTypeBrandReq* ListTypeBrandReq::New(::google::protobuf::Arena* arena) const {
  ListTypeBrandReq* n = new ListTypeBrandReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTypeBrandReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListTypeBrandReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListTypeBrandReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListTypeBrandReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListTypeBrandReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListTypeBrandReq.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListTypeBrandReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListTypeBrandReq)
  return false;
#undef DO_
}

void ListTypeBrandReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListTypeBrandReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListTypeBrandReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListTypeBrandReq.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListTypeBrandReq)
}

::google::protobuf::uint8* ListTypeBrandReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListTypeBrandReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListTypeBrandReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListTypeBrandReq.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListTypeBrandReq)
  return target;
}

size_t ListTypeBrandReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListTypeBrandReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTypeBrandReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListTypeBrandReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTypeBrandReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTypeBrandReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListTypeBrandReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListTypeBrandReq)
    MergeFrom(*source);
  }
}

void ListTypeBrandReq::MergeFrom(const ListTypeBrandReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListTypeBrandReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void ListTypeBrandReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListTypeBrandReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTypeBrandReq::CopyFrom(const ListTypeBrandReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListTypeBrandReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTypeBrandReq::IsInitialized() const {
  return true;
}

void ListTypeBrandReq::Swap(ListTypeBrandReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTypeBrandReq::InternalSwap(ListTypeBrandReq* other) {
  token_.Swap(&other->token_);
  type_.Swap(&other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTypeBrandReq::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTypeBrandReq

// string token = 1;
void ListTypeBrandReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTypeBrandReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeBrandReq.token)
  return token_.GetNoArena();
}
void ListTypeBrandReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListTypeBrandReq.token)
}
#if LANG_CXX11
void ListTypeBrandReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListTypeBrandReq.token)
}
#endif
void ListTypeBrandReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListTypeBrandReq.token)
}
void ListTypeBrandReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListTypeBrandReq.token)
}
::std::string* ListTypeBrandReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeBrandReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTypeBrandReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListTypeBrandReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTypeBrandReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListTypeBrandReq.token)
}

// string type = 2;
void ListTypeBrandReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListTypeBrandReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeBrandReq.type)
  return type_.GetNoArena();
}
void ListTypeBrandReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListTypeBrandReq.type)
}
#if LANG_CXX11
void ListTypeBrandReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListTypeBrandReq.type)
}
#endif
void ListTypeBrandReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListTypeBrandReq.type)
}
void ListTypeBrandReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListTypeBrandReq.type)
}
::std::string* ListTypeBrandReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeBrandReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListTypeBrandReq::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.ListTypeBrandReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListTypeBrandReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListTypeBrandReq.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTypeBrandRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTypeBrandRep::ListTypeBrandRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListTypeBrandRep)
}
ListTypeBrandRep::ListTypeBrandRep(const ListTypeBrandRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListTypeBrandRep)
}

void ListTypeBrandRep::SharedCtor() {
  _cached_size_ = 0;
}

ListTypeBrandRep::~ListTypeBrandRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListTypeBrandRep)
  SharedDtor();
}

void ListTypeBrandRep::SharedDtor() {
}

void ListTypeBrandRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTypeBrandRep::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTypeBrandRep& ListTypeBrandRep::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListTypeBrandRep* ListTypeBrandRep::New(::google::protobuf::Arena* arena) const {
  ListTypeBrandRep* n = new ListTypeBrandRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListTypeBrandRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListTypeBrandRep)
  items_.Clear();
}

bool ListTypeBrandRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListTypeBrandRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.BrandInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListTypeBrandRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListTypeBrandRep)
  return false;
#undef DO_
}

void ListTypeBrandRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListTypeBrandRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.BrandInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListTypeBrandRep)
}

::google::protobuf::uint8* ListTypeBrandRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListTypeBrandRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.BrandInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListTypeBrandRep)
  return target;
}

size_t ListTypeBrandRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListTypeBrandRep)
  size_t total_size = 0;

  // repeated .ttmall.BrandInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTypeBrandRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListTypeBrandRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTypeBrandRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTypeBrandRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListTypeBrandRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListTypeBrandRep)
    MergeFrom(*source);
  }
}

void ListTypeBrandRep::MergeFrom(const ListTypeBrandRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListTypeBrandRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListTypeBrandRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListTypeBrandRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTypeBrandRep::CopyFrom(const ListTypeBrandRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListTypeBrandRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTypeBrandRep::IsInitialized() const {
  return true;
}

void ListTypeBrandRep::Swap(ListTypeBrandRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTypeBrandRep::InternalSwap(ListTypeBrandRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListTypeBrandRep::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListTypeBrandRep

// repeated .ttmall.BrandInfo items = 1;
int ListTypeBrandRep::items_size() const {
  return items_.size();
}
void ListTypeBrandRep::clear_items() {
  items_.Clear();
}
const ::ttmall::BrandInfo& ListTypeBrandRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeBrandRep.items)
  return items_.Get(index);
}
::ttmall::BrandInfo* ListTypeBrandRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeBrandRep.items)
  return items_.Mutable(index);
}
::ttmall::BrandInfo* ListTypeBrandRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListTypeBrandRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::BrandInfo >*
ListTypeBrandRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListTypeBrandRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::BrandInfo >&
ListTypeBrandRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListTypeBrandRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGoodsInfoReq::kTokenFieldNumber;
const int GetGoodsInfoReq::kGoodsIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGoodsInfoReq::GetGoodsInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetGoodsInfoReq)
}
GetGoodsInfoReq::GetGoodsInfoReq(const GetGoodsInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  goods_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.goods_id().size() > 0) {
    goods_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goods_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetGoodsInfoReq)
}

void GetGoodsInfoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetGoodsInfoReq::~GetGoodsInfoReq() {
  // @@protoc_insertion_point(destructor:ttmall.GetGoodsInfoReq)
  SharedDtor();
}

void GetGoodsInfoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetGoodsInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGoodsInfoReq::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGoodsInfoReq& GetGoodsInfoReq::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetGoodsInfoReq* GetGoodsInfoReq::New(::google::protobuf::Arena* arena) const {
  GetGoodsInfoReq* n = new GetGoodsInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGoodsInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetGoodsInfoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetGoodsInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetGoodsInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetGoodsInfoReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string goods_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goods_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->goods_id().data(), this->goods_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetGoodsInfoReq.goods_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetGoodsInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetGoodsInfoReq)
  return false;
#undef DO_
}

void GetGoodsInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetGoodsInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetGoodsInfoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetGoodsInfoReq.goods_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->goods_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetGoodsInfoReq)
}

::google::protobuf::uint8* GetGoodsInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetGoodsInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetGoodsInfoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetGoodsInfoReq.goods_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->goods_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetGoodsInfoReq)
  return target;
}

size_t GetGoodsInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetGoodsInfoReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->goods_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGoodsInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetGoodsInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGoodsInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGoodsInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetGoodsInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetGoodsInfoReq)
    MergeFrom(*source);
  }
}

void GetGoodsInfoReq::MergeFrom(const GetGoodsInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetGoodsInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.goods_id().size() > 0) {

    goods_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goods_id_);
  }
}

void GetGoodsInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetGoodsInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGoodsInfoReq::CopyFrom(const GetGoodsInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetGoodsInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGoodsInfoReq::IsInitialized() const {
  return true;
}

void GetGoodsInfoReq::Swap(GetGoodsInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGoodsInfoReq::InternalSwap(GetGoodsInfoReq* other) {
  token_.Swap(&other->token_);
  goods_id_.Swap(&other->goods_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGoodsInfoReq::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGoodsInfoReq

// string token = 1;
void GetGoodsInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetGoodsInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetGoodsInfoReq.token)
  return token_.GetNoArena();
}
void GetGoodsInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetGoodsInfoReq.token)
}
#if LANG_CXX11
void GetGoodsInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetGoodsInfoReq.token)
}
#endif
void GetGoodsInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetGoodsInfoReq.token)
}
void GetGoodsInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetGoodsInfoReq.token)
}
::std::string* GetGoodsInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetGoodsInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetGoodsInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetGoodsInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetGoodsInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetGoodsInfoReq.token)
}

// string goods_id = 2;
void GetGoodsInfoReq::clear_goods_id() {
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetGoodsInfoReq::goods_id() const {
  // @@protoc_insertion_point(field_get:ttmall.GetGoodsInfoReq.goods_id)
  return goods_id_.GetNoArena();
}
void GetGoodsInfoReq::set_goods_id(const ::std::string& value) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetGoodsInfoReq.goods_id)
}
#if LANG_CXX11
void GetGoodsInfoReq::set_goods_id(::std::string&& value) {
  
  goods_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetGoodsInfoReq.goods_id)
}
#endif
void GetGoodsInfoReq::set_goods_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetGoodsInfoReq.goods_id)
}
void GetGoodsInfoReq::set_goods_id(const char* value, size_t size) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetGoodsInfoReq.goods_id)
}
::std::string* GetGoodsInfoReq::mutable_goods_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetGoodsInfoReq.goods_id)
  return goods_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetGoodsInfoReq::release_goods_id() {
  // @@protoc_insertion_point(field_release:ttmall.GetGoodsInfoReq.goods_id)
  
  return goods_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetGoodsInfoReq::set_allocated_goods_id(::std::string* goods_id) {
  if (goods_id != NULL) {
    
  } else {
    
  }
  goods_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goods_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetGoodsInfoReq.goods_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGoodsInfoRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGoodsInfoRep::GetGoodsInfoRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_goods_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetGoodsInfoRep)
}
GetGoodsInfoRep::GetGoodsInfoRep(const GetGoodsInfoRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::GoodsInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetGoodsInfoRep)
}

void GetGoodsInfoRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

GetGoodsInfoRep::~GetGoodsInfoRep() {
  // @@protoc_insertion_point(destructor:ttmall.GetGoodsInfoRep)
  SharedDtor();
}

void GetGoodsInfoRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void GetGoodsInfoRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGoodsInfoRep::descriptor() {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGoodsInfoRep& GetGoodsInfoRep::default_instance() {
  protobuf_goods_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetGoodsInfoRep* GetGoodsInfoRep::New(::google::protobuf::Arena* arena) const {
  GetGoodsInfoRep* n = new GetGoodsInfoRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGoodsInfoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetGoodsInfoRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool GetGoodsInfoRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetGoodsInfoRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.GoodsInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetGoodsInfoRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetGoodsInfoRep)
  return false;
#undef DO_
}

void GetGoodsInfoRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetGoodsInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.GoodsInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetGoodsInfoRep)
}

::google::protobuf::uint8* GetGoodsInfoRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetGoodsInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.GoodsInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetGoodsInfoRep)
  return target;
}

size_t GetGoodsInfoRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetGoodsInfoRep)
  size_t total_size = 0;

  // .ttmall.GoodsInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGoodsInfoRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetGoodsInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGoodsInfoRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGoodsInfoRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetGoodsInfoRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetGoodsInfoRep)
    MergeFrom(*source);
  }
}

void GetGoodsInfoRep::MergeFrom(const GetGoodsInfoRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetGoodsInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::GoodsInfo::MergeFrom(from.info());
  }
}

void GetGoodsInfoRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetGoodsInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGoodsInfoRep::CopyFrom(const GetGoodsInfoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetGoodsInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGoodsInfoRep::IsInitialized() const {
  return true;
}

void GetGoodsInfoRep::Swap(GetGoodsInfoRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGoodsInfoRep::InternalSwap(GetGoodsInfoRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGoodsInfoRep::GetMetadata() const {
  protobuf_goods_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_goods_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGoodsInfoRep

// .ttmall.GoodsInfo info = 1;
bool GetGoodsInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void GetGoodsInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::GoodsInfo& GetGoodsInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.GetGoodsInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::GoodsInfo::internal_default_instance();
}
::ttmall::GoodsInfo* GetGoodsInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::GoodsInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.GetGoodsInfoRep.info)
  return info_;
}
::ttmall::GoodsInfo* GetGoodsInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.GetGoodsInfoRep.info)
  
  ::ttmall::GoodsInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void GetGoodsInfoRep::set_allocated_info(::ttmall::GoodsInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetGoodsInfoRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ttmall

// @@protoc_insertion_point(global_scope)
