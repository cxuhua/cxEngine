// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goods.proto

#ifndef PROTOBUF_goods_2eproto__INCLUDED
#define PROTOBUF_goods_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "public.pb.h"
// @@protoc_insertion_point(includes)
namespace ttmall {
class AddressInfo;
class AddressInfoDefaultTypeInternal;
extern AddressInfoDefaultTypeInternal _AddressInfo_default_instance_;
class AttrGroup;
class AttrGroupDefaultTypeInternal;
extern AttrGroupDefaultTypeInternal _AttrGroup_default_instance_;
class AttrInfo;
class AttrInfoDefaultTypeInternal;
extern AttrInfoDefaultTypeInternal _AttrInfo_default_instance_;
class BrandInfo;
class BrandInfoDefaultTypeInternal;
extern BrandInfoDefaultTypeInternal _BrandInfo_default_instance_;
class CarInfo;
class CarInfoDefaultTypeInternal;
extern CarInfoDefaultTypeInternal _CarInfo_default_instance_;
class CheckUpdateRep;
class CheckUpdateRepDefaultTypeInternal;
extern CheckUpdateRepDefaultTypeInternal _CheckUpdateRep_default_instance_;
class CheckUpdateReq;
class CheckUpdateReqDefaultTypeInternal;
extern CheckUpdateReqDefaultTypeInternal _CheckUpdateReq_default_instance_;
class CoordInfo;
class CoordInfoDefaultTypeInternal;
extern CoordInfoDefaultTypeInternal _CoordInfo_default_instance_;
class CouponInfo;
class CouponInfoDefaultTypeInternal;
extern CouponInfoDefaultTypeInternal _CouponInfo_default_instance_;
class DeleteMessageRep;
class DeleteMessageRepDefaultTypeInternal;
extern DeleteMessageRepDefaultTypeInternal _DeleteMessageRep_default_instance_;
class DeleteMessageReq;
class DeleteMessageReqDefaultTypeInternal;
extern DeleteMessageReqDefaultTypeInternal _DeleteMessageReq_default_instance_;
class ExtInfo;
class ExtInfoDefaultTypeInternal;
extern ExtInfoDefaultTypeInternal _ExtInfo_default_instance_;
class GetGoodsInfoRep;
class GetGoodsInfoRepDefaultTypeInternal;
extern GetGoodsInfoRepDefaultTypeInternal _GetGoodsInfoRep_default_instance_;
class GetGoodsInfoReq;
class GetGoodsInfoReqDefaultTypeInternal;
extern GetGoodsInfoReqDefaultTypeInternal _GetGoodsInfoReq_default_instance_;
class GetNewMessageRep;
class GetNewMessageRepDefaultTypeInternal;
extern GetNewMessageRepDefaultTypeInternal _GetNewMessageRep_default_instance_;
class GetNewMessageReq;
class GetNewMessageReqDefaultTypeInternal;
extern GetNewMessageReqDefaultTypeInternal _GetNewMessageReq_default_instance_;
class GoodsInfo;
class GoodsInfoDefaultTypeInternal;
extern GoodsInfoDefaultTypeInternal _GoodsInfo_default_instance_;
class GoodsInfo_AttrsEntry;
class GoodsInfo_AttrsEntryDefaultTypeInternal;
extern GoodsInfo_AttrsEntryDefaultTypeInternal _GoodsInfo_AttrsEntry_default_instance_;
class GoodsInfo_MapsEntry;
class GoodsInfo_MapsEntryDefaultTypeInternal;
extern GoodsInfo_MapsEntryDefaultTypeInternal _GoodsInfo_MapsEntry_default_instance_;
class GoodsInfo_PricesEntry;
class GoodsInfo_PricesEntryDefaultTypeInternal;
extern GoodsInfo_PricesEntryDefaultTypeInternal _GoodsInfo_PricesEntry_default_instance_;
class ImageInfo;
class ImageInfoDefaultTypeInternal;
extern ImageInfoDefaultTypeInternal _ImageInfo_default_instance_;
class IndexAd;
class IndexAdDefaultTypeInternal;
extern IndexAdDefaultTypeInternal _IndexAd_default_instance_;
class IndexAdGroup;
class IndexAdGroupDefaultTypeInternal;
extern IndexAdGroupDefaultTypeInternal _IndexAdGroup_default_instance_;
class IndexAdInfoRep;
class IndexAdInfoRepDefaultTypeInternal;
extern IndexAdInfoRepDefaultTypeInternal _IndexAdInfoRep_default_instance_;
class IndexAdInfoReq;
class IndexAdInfoReqDefaultTypeInternal;
extern IndexAdInfoReqDefaultTypeInternal _IndexAdInfoReq_default_instance_;
class IndexRep;
class IndexRepDefaultTypeInternal;
extern IndexRepDefaultTypeInternal _IndexRep_default_instance_;
class IndexRep_GroupsEntry;
class IndexRep_GroupsEntryDefaultTypeInternal;
extern IndexRep_GroupsEntryDefaultTypeInternal _IndexRep_GroupsEntry_default_instance_;
class IndexReq;
class IndexReqDefaultTypeInternal;
extern IndexReqDefaultTypeInternal _IndexReq_default_instance_;
class IndexType;
class IndexTypeDefaultTypeInternal;
extern IndexTypeDefaultTypeInternal _IndexType_default_instance_;
class ListCarRep;
class ListCarRepDefaultTypeInternal;
extern ListCarRepDefaultTypeInternal _ListCarRep_default_instance_;
class ListCarReq;
class ListCarReqDefaultTypeInternal;
extern ListCarReqDefaultTypeInternal _ListCarReq_default_instance_;
class ListDiscountRep;
class ListDiscountRepDefaultTypeInternal;
extern ListDiscountRepDefaultTypeInternal _ListDiscountRep_default_instance_;
class ListDiscountReq;
class ListDiscountReqDefaultTypeInternal;
extern ListDiscountReqDefaultTypeInternal _ListDiscountReq_default_instance_;
class ListGoodsRep;
class ListGoodsRepDefaultTypeInternal;
extern ListGoodsRepDefaultTypeInternal _ListGoodsRep_default_instance_;
class ListGoodsReq;
class ListGoodsReqDefaultTypeInternal;
extern ListGoodsReqDefaultTypeInternal _ListGoodsReq_default_instance_;
class ListMessageRep;
class ListMessageRepDefaultTypeInternal;
extern ListMessageRepDefaultTypeInternal _ListMessageRep_default_instance_;
class ListMessageReq;
class ListMessageReqDefaultTypeInternal;
extern ListMessageReqDefaultTypeInternal _ListMessageReq_default_instance_;
class ListNoticeRep;
class ListNoticeRepDefaultTypeInternal;
extern ListNoticeRepDefaultTypeInternal _ListNoticeRep_default_instance_;
class ListNoticeReq;
class ListNoticeReqDefaultTypeInternal;
extern ListNoticeReqDefaultTypeInternal _ListNoticeReq_default_instance_;
class ListRegionsRep;
class ListRegionsRepDefaultTypeInternal;
extern ListRegionsRepDefaultTypeInternal _ListRegionsRep_default_instance_;
class ListRegionsReq;
class ListRegionsReqDefaultTypeInternal;
extern ListRegionsReqDefaultTypeInternal _ListRegionsReq_default_instance_;
class ListTypeBrandRep;
class ListTypeBrandRepDefaultTypeInternal;
extern ListTypeBrandRepDefaultTypeInternal _ListTypeBrandRep_default_instance_;
class ListTypeBrandReq;
class ListTypeBrandReqDefaultTypeInternal;
extern ListTypeBrandReqDefaultTypeInternal _ListTypeBrandReq_default_instance_;
class ListTypeRep;
class ListTypeRepDefaultTypeInternal;
extern ListTypeRepDefaultTypeInternal _ListTypeRep_default_instance_;
class ListTypeReq;
class ListTypeReqDefaultTypeInternal;
extern ListTypeReqDefaultTypeInternal _ListTypeReq_default_instance_;
class ListUserTypeRep;
class ListUserTypeRepDefaultTypeInternal;
extern ListUserTypeRepDefaultTypeInternal _ListUserTypeRep_default_instance_;
class ListUserTypeReq;
class ListUserTypeReqDefaultTypeInternal;
extern ListUserTypeReqDefaultTypeInternal _ListUserTypeReq_default_instance_;
class MapInfo;
class MapInfoDefaultTypeInternal;
extern MapInfoDefaultTypeInternal _MapInfo_default_instance_;
class MessageInfo;
class MessageInfoDefaultTypeInternal;
extern MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;
class NoticeInfo;
class NoticeInfoDefaultTypeInternal;
extern NoticeInfoDefaultTypeInternal _NoticeInfo_default_instance_;
class PriceInfo;
class PriceInfoDefaultTypeInternal;
extern PriceInfoDefaultTypeInternal _PriceInfo_default_instance_;
class PriceRange;
class PriceRangeDefaultTypeInternal;
extern PriceRangeDefaultTypeInternal _PriceRange_default_instance_;
class PublicInfoRep;
class PublicInfoRepDefaultTypeInternal;
extern PublicInfoRepDefaultTypeInternal _PublicInfoRep_default_instance_;
class PublicInfoReq;
class PublicInfoReqDefaultTypeInternal;
extern PublicInfoReqDefaultTypeInternal _PublicInfoReq_default_instance_;
class RegionInfo;
class RegionInfoDefaultTypeInternal;
extern RegionInfoDefaultTypeInternal _RegionInfo_default_instance_;
class SearchGoodsRep;
class SearchGoodsRepDefaultTypeInternal;
extern SearchGoodsRepDefaultTypeInternal _SearchGoodsRep_default_instance_;
class SearchGoodsReq;
class SearchGoodsReqDefaultTypeInternal;
extern SearchGoodsReqDefaultTypeInternal _SearchGoodsReq_default_instance_;
class SendAuthRep;
class SendAuthRepDefaultTypeInternal;
extern SendAuthRepDefaultTypeInternal _SendAuthRep_default_instance_;
class SendAuthReq;
class SendAuthReqDefaultTypeInternal;
extern SendAuthReqDefaultTypeInternal _SendAuthReq_default_instance_;
class SetDeviceIdRep;
class SetDeviceIdRepDefaultTypeInternal;
extern SetDeviceIdRepDefaultTypeInternal _SetDeviceIdRep_default_instance_;
class SetDeviceIdReq;
class SetDeviceIdReqDefaultTypeInternal;
extern SetDeviceIdReqDefaultTypeInternal _SetDeviceIdReq_default_instance_;
class SetInfo;
class SetInfoDefaultTypeInternal;
extern SetInfoDefaultTypeInternal _SetInfo_default_instance_;
class SetMessageReadRep;
class SetMessageReadRepDefaultTypeInternal;
extern SetMessageReadRepDefaultTypeInternal _SetMessageReadRep_default_instance_;
class SetMessageReadReq;
class SetMessageReadReqDefaultTypeInternal;
extern SetMessageReadReqDefaultTypeInternal _SetMessageReadReq_default_instance_;
class TypeInfo;
class TypeInfoDefaultTypeInternal;
extern TypeInfoDefaultTypeInternal _TypeInfo_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserType;
class UserTypeDefaultTypeInternal;
extern UserTypeDefaultTypeInternal _UserType_default_instance_;
class WareInfo;
class WareInfoDefaultTypeInternal;
extern WareInfoDefaultTypeInternal _WareInfo_default_instance_;
}  // namespace ttmall

namespace ttmall {

namespace protobuf_goods_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_goods_2eproto

// ===================================================================

class ListDiscountReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListDiscountReq) */ {
 public:
  ListDiscountReq();
  virtual ~ListDiscountReq();

  ListDiscountReq(const ListDiscountReq& from);

  inline ListDiscountReq& operator=(const ListDiscountReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDiscountReq& default_instance();

  static inline const ListDiscountReq* internal_default_instance() {
    return reinterpret_cast<const ListDiscountReq*>(
               &_ListDiscountReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ListDiscountReq* other);

  // implements Message ----------------------------------------------

  inline ListDiscountReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListDiscountReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListDiscountReq& from);
  void MergeFrom(const ListDiscountReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListDiscountReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ttmall.ListDiscountReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDiscountRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListDiscountRep) */ {
 public:
  ListDiscountRep();
  virtual ~ListDiscountRep();

  ListDiscountRep(const ListDiscountRep& from);

  inline ListDiscountRep& operator=(const ListDiscountRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDiscountRep& default_instance();

  static inline const ListDiscountRep* internal_default_instance() {
    return reinterpret_cast<const ListDiscountRep*>(
               &_ListDiscountRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ListDiscountRep* other);

  // implements Message ----------------------------------------------

  inline ListDiscountRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListDiscountRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListDiscountRep& from);
  void MergeFrom(const ListDiscountRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListDiscountRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.GoodsInfo items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::ttmall::GoodsInfo& items(int index) const;
  ::ttmall::GoodsInfo* mutable_items(int index);
  ::ttmall::GoodsInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
      items() const;

  // int32 remain_time = 1;
  void clear_remain_time();
  static const int kRemainTimeFieldNumber = 1;
  ::google::protobuf::int32 remain_time() const;
  void set_remain_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.ListDiscountRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo > items_;
  ::google::protobuf::int32 remain_time_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListGoodsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListGoodsReq) */ {
 public:
  ListGoodsReq();
  virtual ~ListGoodsReq();

  ListGoodsReq(const ListGoodsReq& from);

  inline ListGoodsReq& operator=(const ListGoodsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGoodsReq& default_instance();

  static inline const ListGoodsReq* internal_default_instance() {
    return reinterpret_cast<const ListGoodsReq*>(
               &_ListGoodsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ListGoodsReq* other);

  // implements Message ----------------------------------------------

  inline ListGoodsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListGoodsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListGoodsReq& from);
  void MergeFrom(const ListGoodsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListGoodsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string brand_id = 5;
  int brand_id_size() const;
  void clear_brand_id();
  static const int kBrandIdFieldNumber = 5;
  const ::std::string& brand_id(int index) const;
  ::std::string* mutable_brand_id(int index);
  void set_brand_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_brand_id(int index, ::std::string&& value);
  #endif
  void set_brand_id(int index, const char* value);
  void set_brand_id(int index, const char* value, size_t size);
  ::std::string* add_brand_id();
  void add_brand_id(const ::std::string& value);
  #if LANG_CXX11
  void add_brand_id(::std::string&& value);
  #endif
  void add_brand_id(const char* value);
  void add_brand_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& brand_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_brand_id();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string type_id = 2;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 2;
  const ::std::string& type_id() const;
  void set_type_id(const ::std::string& value);
  #if LANG_CXX11
  void set_type_id(::std::string&& value);
  #endif
  void set_type_id(const char* value);
  void set_type_id(const char* value, size_t size);
  ::std::string* mutable_type_id();
  ::std::string* release_type_id();
  void set_allocated_type_id(::std::string* type_id);

  // int32 skip = 3;
  void clear_skip();
  static const int kSkipFieldNumber = 3;
  ::google::protobuf::int32 skip() const;
  void set_skip(::google::protobuf::int32 value);

  // int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // bool discount = 6;
  void clear_discount();
  static const int kDiscountFieldNumber = 6;
  bool discount() const;
  void set_discount(bool value);

  // @@protoc_insertion_point(class_scope:ttmall.ListGoodsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> brand_id_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr type_id_;
  ::google::protobuf::int32 skip_;
  ::google::protobuf::int32 limit_;
  bool discount_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListGoodsRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListGoodsRep) */ {
 public:
  ListGoodsRep();
  virtual ~ListGoodsRep();

  ListGoodsRep(const ListGoodsRep& from);

  inline ListGoodsRep& operator=(const ListGoodsRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGoodsRep& default_instance();

  static inline const ListGoodsRep* internal_default_instance() {
    return reinterpret_cast<const ListGoodsRep*>(
               &_ListGoodsRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ListGoodsRep* other);

  // implements Message ----------------------------------------------

  inline ListGoodsRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListGoodsRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListGoodsRep& from);
  void MergeFrom(const ListGoodsRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListGoodsRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.GoodsInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::GoodsInfo& items(int index) const;
  ::ttmall::GoodsInfo* mutable_items(int index);
  ::ttmall::GoodsInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListGoodsRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListTypeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListTypeReq) */ {
 public:
  ListTypeReq();
  virtual ~ListTypeReq();

  ListTypeReq(const ListTypeReq& from);

  inline ListTypeReq& operator=(const ListTypeReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTypeReq& default_instance();

  static inline const ListTypeReq* internal_default_instance() {
    return reinterpret_cast<const ListTypeReq*>(
               &_ListTypeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListTypeReq* other);

  // implements Message ----------------------------------------------

  inline ListTypeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListTypeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListTypeReq& from);
  void MergeFrom(const ListTypeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListTypeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ttmall.ListTypeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListTypeRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListTypeRep) */ {
 public:
  ListTypeRep();
  virtual ~ListTypeRep();

  ListTypeRep(const ListTypeRep& from);

  inline ListTypeRep& operator=(const ListTypeRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTypeRep& default_instance();

  static inline const ListTypeRep* internal_default_instance() {
    return reinterpret_cast<const ListTypeRep*>(
               &_ListTypeRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ListTypeRep* other);

  // implements Message ----------------------------------------------

  inline ListTypeRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListTypeRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListTypeRep& from);
  void MergeFrom(const ListTypeRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListTypeRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.TypeInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::TypeInfo& items(int index) const;
  ::ttmall::TypeInfo* mutable_items(int index);
  ::ttmall::TypeInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::TypeInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::TypeInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListTypeRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::TypeInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchGoodsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.SearchGoodsReq) */ {
 public:
  SearchGoodsReq();
  virtual ~SearchGoodsReq();

  SearchGoodsReq(const SearchGoodsReq& from);

  inline SearchGoodsReq& operator=(const SearchGoodsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchGoodsReq& default_instance();

  static inline const SearchGoodsReq* internal_default_instance() {
    return reinterpret_cast<const SearchGoodsReq*>(
               &_SearchGoodsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SearchGoodsReq* other);

  // implements Message ----------------------------------------------

  inline SearchGoodsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchGoodsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchGoodsReq& from);
  void MergeFrom(const SearchGoodsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchGoodsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // int32 skip = 3;
  void clear_skip();
  static const int kSkipFieldNumber = 3;
  ::google::protobuf::int32 skip() const;
  void set_skip(::google::protobuf::int32 value);

  // int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.SearchGoodsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 skip_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchGoodsRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.SearchGoodsRep) */ {
 public:
  SearchGoodsRep();
  virtual ~SearchGoodsRep();

  SearchGoodsRep(const SearchGoodsRep& from);

  inline SearchGoodsRep& operator=(const SearchGoodsRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchGoodsRep& default_instance();

  static inline const SearchGoodsRep* internal_default_instance() {
    return reinterpret_cast<const SearchGoodsRep*>(
               &_SearchGoodsRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SearchGoodsRep* other);

  // implements Message ----------------------------------------------

  inline SearchGoodsRep* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchGoodsRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchGoodsRep& from);
  void MergeFrom(const SearchGoodsRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchGoodsRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.GoodsInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::GoodsInfo& items(int index) const;
  ::ttmall::GoodsInfo* mutable_items(int index);
  ::ttmall::GoodsInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.SearchGoodsRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListTypeBrandReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListTypeBrandReq) */ {
 public:
  ListTypeBrandReq();
  virtual ~ListTypeBrandReq();

  ListTypeBrandReq(const ListTypeBrandReq& from);

  inline ListTypeBrandReq& operator=(const ListTypeBrandReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTypeBrandReq& default_instance();

  static inline const ListTypeBrandReq* internal_default_instance() {
    return reinterpret_cast<const ListTypeBrandReq*>(
               &_ListTypeBrandReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ListTypeBrandReq* other);

  // implements Message ----------------------------------------------

  inline ListTypeBrandReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListTypeBrandReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListTypeBrandReq& from);
  void MergeFrom(const ListTypeBrandReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListTypeBrandReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:ttmall.ListTypeBrandReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListTypeBrandRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListTypeBrandRep) */ {
 public:
  ListTypeBrandRep();
  virtual ~ListTypeBrandRep();

  ListTypeBrandRep(const ListTypeBrandRep& from);

  inline ListTypeBrandRep& operator=(const ListTypeBrandRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTypeBrandRep& default_instance();

  static inline const ListTypeBrandRep* internal_default_instance() {
    return reinterpret_cast<const ListTypeBrandRep*>(
               &_ListTypeBrandRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ListTypeBrandRep* other);

  // implements Message ----------------------------------------------

  inline ListTypeBrandRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListTypeBrandRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListTypeBrandRep& from);
  void MergeFrom(const ListTypeBrandRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListTypeBrandRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.BrandInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::BrandInfo& items(int index) const;
  ::ttmall::BrandInfo* mutable_items(int index);
  ::ttmall::BrandInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::BrandInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::BrandInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListTypeBrandRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::BrandInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetGoodsInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetGoodsInfoReq) */ {
 public:
  GetGoodsInfoReq();
  virtual ~GetGoodsInfoReq();

  GetGoodsInfoReq(const GetGoodsInfoReq& from);

  inline GetGoodsInfoReq& operator=(const GetGoodsInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGoodsInfoReq& default_instance();

  static inline const GetGoodsInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetGoodsInfoReq*>(
               &_GetGoodsInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetGoodsInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetGoodsInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGoodsInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGoodsInfoReq& from);
  void MergeFrom(const GetGoodsInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGoodsInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string goods_id = 2;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  const ::std::string& goods_id() const;
  void set_goods_id(const ::std::string& value);
  #if LANG_CXX11
  void set_goods_id(::std::string&& value);
  #endif
  void set_goods_id(const char* value);
  void set_goods_id(const char* value, size_t size);
  ::std::string* mutable_goods_id();
  ::std::string* release_goods_id();
  void set_allocated_goods_id(::std::string* goods_id);

  // @@protoc_insertion_point(class_scope:ttmall.GetGoodsInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr goods_id_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetGoodsInfoRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetGoodsInfoRep) */ {
 public:
  GetGoodsInfoRep();
  virtual ~GetGoodsInfoRep();

  GetGoodsInfoRep(const GetGoodsInfoRep& from);

  inline GetGoodsInfoRep& operator=(const GetGoodsInfoRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGoodsInfoRep& default_instance();

  static inline const GetGoodsInfoRep* internal_default_instance() {
    return reinterpret_cast<const GetGoodsInfoRep*>(
               &_GetGoodsInfoRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetGoodsInfoRep* other);

  // implements Message ----------------------------------------------

  inline GetGoodsInfoRep* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGoodsInfoRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGoodsInfoRep& from);
  void MergeFrom(const GetGoodsInfoRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGoodsInfoRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.GoodsInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::GoodsInfo& info() const;
  ::ttmall::GoodsInfo* mutable_info();
  ::ttmall::GoodsInfo* release_info();
  void set_allocated_info(::ttmall::GoodsInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.GetGoodsInfoRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::GoodsInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_goods_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ListDiscountReq

// string token = 1;
inline void ListDiscountReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListDiscountReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListDiscountReq.token)
  return token_.GetNoArena();
}
inline void ListDiscountReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListDiscountReq.token)
}
#if LANG_CXX11
inline void ListDiscountReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListDiscountReq.token)
}
#endif
inline void ListDiscountReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListDiscountReq.token)
}
inline void ListDiscountReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListDiscountReq.token)
}
inline ::std::string* ListDiscountReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListDiscountReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListDiscountReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListDiscountReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListDiscountReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListDiscountReq.token)
}

// -------------------------------------------------------------------

// ListDiscountRep

// int32 remain_time = 1;
inline void ListDiscountRep::clear_remain_time() {
  remain_time_ = 0;
}
inline ::google::protobuf::int32 ListDiscountRep::remain_time() const {
  // @@protoc_insertion_point(field_get:ttmall.ListDiscountRep.remain_time)
  return remain_time_;
}
inline void ListDiscountRep::set_remain_time(::google::protobuf::int32 value) {
  
  remain_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListDiscountRep.remain_time)
}

// repeated .ttmall.GoodsInfo items = 2;
inline int ListDiscountRep::items_size() const {
  return items_.size();
}
inline void ListDiscountRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::GoodsInfo& ListDiscountRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListDiscountRep.items)
  return items_.Get(index);
}
inline ::ttmall::GoodsInfo* ListDiscountRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListDiscountRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::GoodsInfo* ListDiscountRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListDiscountRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
ListDiscountRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListDiscountRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
ListDiscountRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListDiscountRep.items)
  return items_;
}

// -------------------------------------------------------------------

// ListGoodsReq

// string token = 1;
inline void ListGoodsReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGoodsReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.token)
  return token_.GetNoArena();
}
inline void ListGoodsReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.token)
}
#if LANG_CXX11
inline void ListGoodsReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListGoodsReq.token)
}
#endif
inline void ListGoodsReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListGoodsReq.token)
}
inline void ListGoodsReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListGoodsReq.token)
}
inline ::std::string* ListGoodsReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGoodsReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListGoodsReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGoodsReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListGoodsReq.token)
}

// string type_id = 2;
inline void ListGoodsReq::clear_type_id() {
  type_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGoodsReq::type_id() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.type_id)
  return type_id_.GetNoArena();
}
inline void ListGoodsReq::set_type_id(const ::std::string& value) {
  
  type_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.type_id)
}
#if LANG_CXX11
inline void ListGoodsReq::set_type_id(::std::string&& value) {
  
  type_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListGoodsReq.type_id)
}
#endif
inline void ListGoodsReq::set_type_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListGoodsReq.type_id)
}
inline void ListGoodsReq::set_type_id(const char* value, size_t size) {
  
  type_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListGoodsReq.type_id)
}
inline ::std::string* ListGoodsReq::mutable_type_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsReq.type_id)
  return type_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGoodsReq::release_type_id() {
  // @@protoc_insertion_point(field_release:ttmall.ListGoodsReq.type_id)
  
  return type_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGoodsReq::set_allocated_type_id(::std::string* type_id) {
  if (type_id != NULL) {
    
  } else {
    
  }
  type_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListGoodsReq.type_id)
}

// int32 skip = 3;
inline void ListGoodsReq::clear_skip() {
  skip_ = 0;
}
inline ::google::protobuf::int32 ListGoodsReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.skip)
  return skip_;
}
inline void ListGoodsReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.skip)
}

// int32 limit = 4;
inline void ListGoodsReq::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 ListGoodsReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.limit)
  return limit_;
}
inline void ListGoodsReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.limit)
}

// repeated string brand_id = 5;
inline int ListGoodsReq::brand_id_size() const {
  return brand_id_.size();
}
inline void ListGoodsReq::clear_brand_id() {
  brand_id_.Clear();
}
inline const ::std::string& ListGoodsReq::brand_id(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.brand_id)
  return brand_id_.Get(index);
}
inline ::std::string* ListGoodsReq::mutable_brand_id(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsReq.brand_id)
  return brand_id_.Mutable(index);
}
inline void ListGoodsReq::set_brand_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.brand_id)
  brand_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListGoodsReq::set_brand_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.brand_id)
  brand_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListGoodsReq::set_brand_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  brand_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.ListGoodsReq.brand_id)
}
inline void ListGoodsReq::set_brand_id(int index, const char* value, size_t size) {
  brand_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListGoodsReq.brand_id)
}
inline ::std::string* ListGoodsReq::add_brand_id() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.ListGoodsReq.brand_id)
  return brand_id_.Add();
}
inline void ListGoodsReq::add_brand_id(const ::std::string& value) {
  brand_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.ListGoodsReq.brand_id)
}
#if LANG_CXX11
inline void ListGoodsReq::add_brand_id(::std::string&& value) {
  brand_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.ListGoodsReq.brand_id)
}
#endif
inline void ListGoodsReq::add_brand_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  brand_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.ListGoodsReq.brand_id)
}
inline void ListGoodsReq::add_brand_id(const char* value, size_t size) {
  brand_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.ListGoodsReq.brand_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListGoodsReq::brand_id() const {
  // @@protoc_insertion_point(field_list:ttmall.ListGoodsReq.brand_id)
  return brand_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListGoodsReq::mutable_brand_id() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListGoodsReq.brand_id)
  return &brand_id_;
}

// bool discount = 6;
inline void ListGoodsReq::clear_discount() {
  discount_ = false;
}
inline bool ListGoodsReq::discount() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsReq.discount)
  return discount_;
}
inline void ListGoodsReq::set_discount(bool value) {
  
  discount_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsReq.discount)
}

// -------------------------------------------------------------------

// ListGoodsRep

// repeated .ttmall.GoodsInfo items = 1;
inline int ListGoodsRep::items_size() const {
  return items_.size();
}
inline void ListGoodsRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::GoodsInfo& ListGoodsRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsRep.items)
  return items_.Get(index);
}
inline ::ttmall::GoodsInfo* ListGoodsRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::GoodsInfo* ListGoodsRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListGoodsRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
ListGoodsRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListGoodsRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
ListGoodsRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListGoodsRep.items)
  return items_;
}

// -------------------------------------------------------------------

// ListTypeReq

// string token = 1;
inline void ListTypeReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTypeReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeReq.token)
  return token_.GetNoArena();
}
inline void ListTypeReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListTypeReq.token)
}
#if LANG_CXX11
inline void ListTypeReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListTypeReq.token)
}
#endif
inline void ListTypeReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListTypeReq.token)
}
inline void ListTypeReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListTypeReq.token)
}
inline ::std::string* ListTypeReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTypeReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListTypeReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTypeReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListTypeReq.token)
}

// -------------------------------------------------------------------

// ListTypeRep

// repeated .ttmall.TypeInfo items = 1;
inline int ListTypeRep::items_size() const {
  return items_.size();
}
inline void ListTypeRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::TypeInfo& ListTypeRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeRep.items)
  return items_.Get(index);
}
inline ::ttmall::TypeInfo* ListTypeRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::TypeInfo* ListTypeRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListTypeRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::TypeInfo >*
ListTypeRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListTypeRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::TypeInfo >&
ListTypeRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListTypeRep.items)
  return items_;
}

// -------------------------------------------------------------------

// SearchGoodsReq

// string token = 1;
inline void SearchGoodsReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchGoodsReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsReq.token)
  return token_.GetNoArena();
}
inline void SearchGoodsReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SearchGoodsReq.token)
}
#if LANG_CXX11
inline void SearchGoodsReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SearchGoodsReq.token)
}
#endif
inline void SearchGoodsReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SearchGoodsReq.token)
}
inline void SearchGoodsReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SearchGoodsReq.token)
}
inline ::std::string* SearchGoodsReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SearchGoodsReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchGoodsReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SearchGoodsReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchGoodsReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SearchGoodsReq.token)
}

// string key = 2;
inline void SearchGoodsReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchGoodsReq::key() const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsReq.key)
  return key_.GetNoArena();
}
inline void SearchGoodsReq::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SearchGoodsReq.key)
}
#if LANG_CXX11
inline void SearchGoodsReq::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SearchGoodsReq.key)
}
#endif
inline void SearchGoodsReq::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SearchGoodsReq.key)
}
inline void SearchGoodsReq::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SearchGoodsReq.key)
}
inline ::std::string* SearchGoodsReq::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SearchGoodsReq.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchGoodsReq::release_key() {
  // @@protoc_insertion_point(field_release:ttmall.SearchGoodsReq.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchGoodsReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SearchGoodsReq.key)
}

// int32 skip = 3;
inline void SearchGoodsReq::clear_skip() {
  skip_ = 0;
}
inline ::google::protobuf::int32 SearchGoodsReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsReq.skip)
  return skip_;
}
inline void SearchGoodsReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SearchGoodsReq.skip)
}

// int32 limit = 4;
inline void SearchGoodsReq::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 SearchGoodsReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsReq.limit)
  return limit_;
}
inline void SearchGoodsReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SearchGoodsReq.limit)
}

// -------------------------------------------------------------------

// SearchGoodsRep

// repeated .ttmall.GoodsInfo items = 1;
inline int SearchGoodsRep::items_size() const {
  return items_.size();
}
inline void SearchGoodsRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::GoodsInfo& SearchGoodsRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.SearchGoodsRep.items)
  return items_.Get(index);
}
inline ::ttmall::GoodsInfo* SearchGoodsRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.SearchGoodsRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::GoodsInfo* SearchGoodsRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.SearchGoodsRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
SearchGoodsRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.SearchGoodsRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
SearchGoodsRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.SearchGoodsRep.items)
  return items_;
}

// -------------------------------------------------------------------

// ListTypeBrandReq

// string token = 1;
inline void ListTypeBrandReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTypeBrandReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeBrandReq.token)
  return token_.GetNoArena();
}
inline void ListTypeBrandReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListTypeBrandReq.token)
}
#if LANG_CXX11
inline void ListTypeBrandReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListTypeBrandReq.token)
}
#endif
inline void ListTypeBrandReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListTypeBrandReq.token)
}
inline void ListTypeBrandReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListTypeBrandReq.token)
}
inline ::std::string* ListTypeBrandReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeBrandReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTypeBrandReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListTypeBrandReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTypeBrandReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListTypeBrandReq.token)
}

// string type = 2;
inline void ListTypeBrandReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListTypeBrandReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeBrandReq.type)
  return type_.GetNoArena();
}
inline void ListTypeBrandReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListTypeBrandReq.type)
}
#if LANG_CXX11
inline void ListTypeBrandReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListTypeBrandReq.type)
}
#endif
inline void ListTypeBrandReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListTypeBrandReq.type)
}
inline void ListTypeBrandReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListTypeBrandReq.type)
}
inline ::std::string* ListTypeBrandReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeBrandReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListTypeBrandReq::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.ListTypeBrandReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListTypeBrandReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListTypeBrandReq.type)
}

// -------------------------------------------------------------------

// ListTypeBrandRep

// repeated .ttmall.BrandInfo items = 1;
inline int ListTypeBrandRep::items_size() const {
  return items_.size();
}
inline void ListTypeBrandRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::BrandInfo& ListTypeBrandRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListTypeBrandRep.items)
  return items_.Get(index);
}
inline ::ttmall::BrandInfo* ListTypeBrandRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListTypeBrandRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::BrandInfo* ListTypeBrandRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListTypeBrandRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::BrandInfo >*
ListTypeBrandRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListTypeBrandRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::BrandInfo >&
ListTypeBrandRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListTypeBrandRep.items)
  return items_;
}

// -------------------------------------------------------------------

// GetGoodsInfoReq

// string token = 1;
inline void GetGoodsInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGoodsInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetGoodsInfoReq.token)
  return token_.GetNoArena();
}
inline void GetGoodsInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetGoodsInfoReq.token)
}
#if LANG_CXX11
inline void GetGoodsInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetGoodsInfoReq.token)
}
#endif
inline void GetGoodsInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetGoodsInfoReq.token)
}
inline void GetGoodsInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetGoodsInfoReq.token)
}
inline ::std::string* GetGoodsInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetGoodsInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGoodsInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetGoodsInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGoodsInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetGoodsInfoReq.token)
}

// string goods_id = 2;
inline void GetGoodsInfoReq::clear_goods_id() {
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGoodsInfoReq::goods_id() const {
  // @@protoc_insertion_point(field_get:ttmall.GetGoodsInfoReq.goods_id)
  return goods_id_.GetNoArena();
}
inline void GetGoodsInfoReq::set_goods_id(const ::std::string& value) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetGoodsInfoReq.goods_id)
}
#if LANG_CXX11
inline void GetGoodsInfoReq::set_goods_id(::std::string&& value) {
  
  goods_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetGoodsInfoReq.goods_id)
}
#endif
inline void GetGoodsInfoReq::set_goods_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetGoodsInfoReq.goods_id)
}
inline void GetGoodsInfoReq::set_goods_id(const char* value, size_t size) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetGoodsInfoReq.goods_id)
}
inline ::std::string* GetGoodsInfoReq::mutable_goods_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetGoodsInfoReq.goods_id)
  return goods_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGoodsInfoReq::release_goods_id() {
  // @@protoc_insertion_point(field_release:ttmall.GetGoodsInfoReq.goods_id)
  
  return goods_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGoodsInfoReq::set_allocated_goods_id(::std::string* goods_id) {
  if (goods_id != NULL) {
    
  } else {
    
  }
  goods_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goods_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetGoodsInfoReq.goods_id)
}

// -------------------------------------------------------------------

// GetGoodsInfoRep

// .ttmall.GoodsInfo info = 1;
inline bool GetGoodsInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void GetGoodsInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::GoodsInfo& GetGoodsInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.GetGoodsInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::GoodsInfo::internal_default_instance();
}
inline ::ttmall::GoodsInfo* GetGoodsInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::GoodsInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.GetGoodsInfoRep.info)
  return info_;
}
inline ::ttmall::GoodsInfo* GetGoodsInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.GetGoodsInfoRep.info)
  
  ::ttmall::GoodsInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GetGoodsInfoRep::set_allocated_info(::ttmall::GoodsInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetGoodsInfoRep.info)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ttmall

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_goods_2eproto__INCLUDED
