// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "order.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ttmall {
class OrderItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OrderItem> {
} _OrderItem_default_instance_;
class OrderInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OrderInfo> {
} _OrderInfo_default_instance_;
class SubmitOrderReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubmitOrderReq> {
} _SubmitOrderReq_default_instance_;
class SubmitOrderRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubmitOrderRep> {
} _SubmitOrderRep_default_instance_;
class ConfirmOrderReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfirmOrderReq> {
} _ConfirmOrderReq_default_instance_;
class DeliverTimeInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeliverTimeInfo> {
} _DeliverTimeInfo_default_instance_;
class ConfirmOrderRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfirmOrderRep> {
} _ConfirmOrderRep_default_instance_;
class PayOrderReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PayOrderReq> {
} _PayOrderReq_default_instance_;
class PayOrderRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PayOrderRep> {
} _PayOrderRep_default_instance_;

namespace protobuf_order_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, key_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, key_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderItem, dis_fee_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, total_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, total_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, pay_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, pay_select_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, pay_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, gen_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, refund_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, balance_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, trans_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, dis_free_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, coupon_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, pay_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, refund_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, deliver_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, mark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, coupon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderInfo, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderReq, cart_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderReq, coupon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderReq, address_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderReq, deliver_time_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderReq, pay_select_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderReq, mark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitOrderRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderReq, cart_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderReq, coupon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderReq, address_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeliverTimeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeliverTimeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeliverTimeInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeliverTimeInfo, desc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, total_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, total_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, coupon_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, dis_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, trans_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, pay_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, coupons_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmOrderRep, times_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayOrderReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayOrderReq, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayOrderReq, pay_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayOrderRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayOrderRep, wxpay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PayOrderRep, alipay_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(OrderItem)},
  { 10, -1, sizeof(OrderInfo)},
  { 35, -1, sizeof(SubmitOrderReq)},
  { 47, -1, sizeof(SubmitOrderRep)},
  { 53, -1, sizeof(ConfirmOrderReq)},
  { 62, -1, sizeof(DeliverTimeInfo)},
  { 70, -1, sizeof(ConfirmOrderRep)},
  { 85, -1, sizeof(PayOrderReq)},
  { 93, -1, sizeof(PayOrderRep)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrderItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrderInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubmitOrderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubmitOrderRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfirmOrderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeliverTimeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfirmOrderRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PayOrderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PayOrderRep_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "order.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _OrderItem_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _OrderInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SubmitOrderReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SubmitOrderRep_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ConfirmOrderReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _DeliverTimeInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ConfirmOrderRep_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _PayOrderReq_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _PayOrderRep_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ttmall::protobuf_public_2eproto::InitDefaults();
  _OrderItem_default_instance_.DefaultConstruct();
  _OrderInfo_default_instance_.DefaultConstruct();
  _SubmitOrderReq_default_instance_.DefaultConstruct();
  _SubmitOrderRep_default_instance_.DefaultConstruct();
  _ConfirmOrderReq_default_instance_.DefaultConstruct();
  _DeliverTimeInfo_default_instance_.DefaultConstruct();
  _ConfirmOrderRep_default_instance_.DefaultConstruct();
  _PayOrderReq_default_instance_.DefaultConstruct();
  _PayOrderRep_default_instance_.DefaultConstruct();
  _OrderItem_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::GoodsInfo*>(
      ::ttmall::GoodsInfo::internal_default_instance());
  _OrderInfo_default_instance_.get_mutable()->deliver_time_ = const_cast< ::ttmall::DeliverTimeInfo*>(
      ::ttmall::DeliverTimeInfo::internal_default_instance());
  _OrderInfo_default_instance_.get_mutable()->coupon_ = const_cast< ::ttmall::CouponInfo*>(
      ::ttmall::CouponInfo::internal_default_instance());
  _OrderInfo_default_instance_.get_mutable()->address_ = const_cast< ::ttmall::AddressInfo*>(
      ::ttmall::AddressInfo::internal_default_instance());
  _SubmitOrderRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::OrderInfo*>(
      ::ttmall::OrderInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013order.proto\022\006ttmall\032\014public.proto\"q\n\tO"
      "rderItem\022\037\n\004info\030\001 \001(\0132\021.ttmall.GoodsInf"
      "o\022\016\n\006key_id\030\002 \001(\t\022\021\n\tkey_count\030\003 \001(\005\022\017\n\007"
      "key_fee\030\004 \001(\005\022\017\n\007dis_fee\030\005 \001(\005\"\377\003\n\tOrder"
      "Info\022\n\n\002id\030\001 \001(\t\022!\n\005state\030\002 \001(\0162\022.ttmall"
      ".OrderState\022 \n\005items\030\003 \003(\0132\021.ttmall.Orde"
      "rItem\022\021\n\ttotal_fee\030\004 \001(\005\022\021\n\ttotal_num\030\005 "
      "\001(\005\022!\n\010pay_type\030\006 \001(\0162\017.ttmall.PayType\022%"
      "\n\npay_select\030\007 \001(\0162\021.ttmall.PaySelect\022\020\n"
      "\010pay_time\030\010 \001(\003\022\020\n\010gen_time\030\t \001(\003\022\023\n\013ref"
      "und_time\030\n \001(\003\022\023\n\013balance_fee\030\013 \001(\005\022\021\n\tt"
      "rans_fee\030\014 \001(\005\022\020\n\010dis_free\030\r \001(\005\022\022\n\ncoup"
      "on_fee\030\016 \001(\005\022\017\n\007pay_fee\030\017 \001(\005\022\022\n\nrefund_"
      "fee\030\020 \001(\005\022-\n\014deliver_time\030\021 \001(\0132\027.ttmall"
      ".DeliverTimeInfo\022\014\n\004mark\030\022 \001(\t\022\"\n\006Coupon"
      "\030\023 \001(\0132\022.ttmall.CouponInfo\022$\n\007Address\030\024 "
      "\001(\0132\023.ttmall.AddressInfo\"\246\001\n\016SubmitOrder"
      "Req\022\r\n\005token\030\001 \001(\t\022\020\n\010cart_ids\030\002 \003(\t\022\021\n\t"
      "coupon_id\030\003 \001(\t\022\022\n\naddress_id\030\004 \001(\t\022\027\n\017d"
      "eliver_time_id\030\005 \001(\005\022%\n\npay_select\030\007 \001(\016"
      "2\021.ttmall.PaySelect\022\014\n\004mark\030\010 \001(\t\"1\n\016Sub"
      "mitOrderRep\022\037\n\004info\030\001 \001(\0132\021.ttmall.Order"
      "Info\"Y\n\017ConfirmOrderReq\022\r\n\005token\030\001 \001(\t\022\020"
      "\n\010cart_ids\030\002 \003(\t\022\021\n\tcoupon_id\030\003 \001(\t\022\022\n\na"
      "ddress_id\030\004 \001(\t\"9\n\017DeliverTimeInfo\022\n\n\002id"
      "\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\"\225\002\n\017C"
      "onfirmOrderRep\022 \n\005items\030\001 \003(\0132\021.ttmall.O"
      "rderItem\022\021\n\ttotal_fee\030\002 \001(\005\022\021\n\ttotal_num"
      "\030\003 \001(\005\022\022\n\ncoupon_fee\030\004 \001(\005\022\017\n\007dis_fee\030\005 "
      "\001(\005\022\021\n\ttrans_fee\030\006 \001(\005\022\017\n\007pay_fee\030\007 \001(\005\022"
      "$\n\007address\030\010 \003(\0132\023.ttmall.AddressInfo\022#\n"
      "\007coupons\030\t \003(\0132\022.ttmall.CouponInfo\022&\n\005ti"
      "mes\030\n \003(\0132\027.ttmall.DeliverTimeInfo\"Q\n\013Pa"
      "yOrderReq\022\r\n\005token\030\001 \001(\t\022\020\n\010order_id\030\002 \001"
      "(\t\022!\n\010pay_type\030\003 \003(\0162\017.ttmall.PayType\",\n"
      "\013PayOrderRep\022\r\n\005wxpay\030\001 \001(\t\022\016\n\006alipay\030\002 "
      "\001(\t*C\n\tPaySelect\022\017\n\013SELECT_NONE\020\000\022\021\n\rSEL"
      "ECT_ONLINE\020\001\022\022\n\016SELECT_OFFLINE\020\002*i\n\007PayT"
      "ype\022\n\n\006UNKNOW\020\000\022\n\n\006WEIXIN\020\001\022\n\n\006ALIPAY\020\002\022"
      "\r\n\tUNION_PAY\020\003\022\013\n\007BALANCE\020\004\022\r\n\tADMIN_PAY"
      "\020\005\022\017\n\013OFFLINE_PAY\020\006*\214\001\n\nOrderState\022\r\n\tAL"
      "L_STATE\020\000\022\014\n\010WAIT_PAY\020\001\022\n\n\006PAY_OK\020\002\022\021\n\rW"
      "AIT_DELIVERY\020\003\022\014\n\010TRANSING\020\004\022\014\n\010FINISHED"
      "\020\005\022\013\n\007LOADING\020\006\022\r\n\tREFUNDING\020\007\022\n\n\006CLOSED"
      "\020\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1770);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "order.proto", &protobuf_RegisterTypes);
  ::ttmall::protobuf_public_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_order_2eproto

const ::google::protobuf::EnumDescriptor* PaySelect_descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_enum_descriptors[0];
}
bool PaySelect_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PayType_descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_enum_descriptors[1];
}
bool PayType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OrderState_descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_enum_descriptors[2];
}
bool OrderState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderItem::kInfoFieldNumber;
const int OrderItem::kKeyIdFieldNumber;
const int OrderItem::kKeyCountFieldNumber;
const int OrderItem::kKeyFeeFieldNumber;
const int OrderItem::kDisFeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderItem::OrderItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.OrderItem)
}
OrderItem::OrderItem(const OrderItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_info()) {
    info_ = new ::ttmall::GoodsInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&key_count_, &from.key_count_,
    reinterpret_cast<char*>(&dis_fee_) -
    reinterpret_cast<char*>(&key_count_) + sizeof(dis_fee_));
  // @@protoc_insertion_point(copy_constructor:ttmall.OrderItem)
}

void OrderItem::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, reinterpret_cast<char*>(&dis_fee_) -
    reinterpret_cast<char*>(&info_) + sizeof(dis_fee_));
  _cached_size_ = 0;
}

OrderItem::~OrderItem() {
  // @@protoc_insertion_point(destructor:ttmall.OrderItem)
  SharedDtor();
}

void OrderItem::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void OrderItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderItem::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderItem& OrderItem::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrderItem* OrderItem::New(::google::protobuf::Arena* arena) const {
  OrderItem* n = new OrderItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.OrderItem)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&key_count_, 0, reinterpret_cast<char*>(&dis_fee_) -
    reinterpret_cast<char*>(&key_count_) + sizeof(dis_fee_));
}

bool OrderItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.OrderItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.GoodsInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), this->key_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.OrderItem.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key_fee = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dis_fee = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dis_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.OrderItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.OrderItem)
  return false;
#undef DO_
}

void OrderItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.OrderItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.GoodsInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // string key_id = 2;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OrderItem.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key_id(), output);
  }

  // int32 key_count = 3;
  if (this->key_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->key_count(), output);
  }

  // int32 key_fee = 4;
  if (this->key_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->key_fee(), output);
  }

  // int32 dis_fee = 5;
  if (this->dis_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dis_fee(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.OrderItem)
}

::google::protobuf::uint8* OrderItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.OrderItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.GoodsInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // string key_id = 2;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OrderItem.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key_id(), target);
  }

  // int32 key_count = 3;
  if (this->key_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->key_count(), target);
  }

  // int32 key_fee = 4;
  if (this->key_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->key_fee(), target);
  }

  // int32 dis_fee = 5;
  if (this->dis_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dis_fee(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.OrderItem)
  return target;
}

size_t OrderItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.OrderItem)
  size_t total_size = 0;

  // string key_id = 2;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  // .ttmall.GoodsInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 key_count = 3;
  if (this->key_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key_count());
  }

  // int32 key_fee = 4;
  if (this->key_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key_fee());
  }

  // int32 dis_fee = 5;
  if (this->dis_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dis_fee());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.OrderItem)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.OrderItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.OrderItem)
    MergeFrom(*source);
  }
}

void OrderItem::MergeFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.OrderItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_info()) {
    mutable_info()->::ttmall::GoodsInfo::MergeFrom(from.info());
  }
  if (from.key_count() != 0) {
    set_key_count(from.key_count());
  }
  if (from.key_fee() != 0) {
    set_key_fee(from.key_fee());
  }
  if (from.dis_fee() != 0) {
    set_dis_fee(from.dis_fee());
  }
}

void OrderItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderItem::CopyFrom(const OrderItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.OrderItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderItem::IsInitialized() const {
  return true;
}

void OrderItem::Swap(OrderItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderItem::InternalSwap(OrderItem* other) {
  key_id_.Swap(&other->key_id_);
  std::swap(info_, other->info_);
  std::swap(key_count_, other->key_count_);
  std::swap(key_fee_, other->key_fee_);
  std::swap(dis_fee_, other->dis_fee_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderItem::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderItem

// .ttmall.GoodsInfo info = 1;
bool OrderItem::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void OrderItem::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::GoodsInfo& OrderItem::info() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.info)
  return info_ != NULL ? *info_
                         : *::ttmall::GoodsInfo::internal_default_instance();
}
::ttmall::GoodsInfo* OrderItem::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::GoodsInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderItem.info)
  return info_;
}
::ttmall::GoodsInfo* OrderItem::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.OrderItem.info)
  
  ::ttmall::GoodsInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void OrderItem::set_allocated_info(::ttmall::GoodsInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderItem.info)
}

// string key_id = 2;
void OrderItem::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderItem::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.key_id)
  return key_id_.GetNoArena();
}
void OrderItem::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OrderItem.key_id)
}
#if LANG_CXX11
void OrderItem::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OrderItem.key_id)
}
#endif
void OrderItem::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OrderItem.key_id)
}
void OrderItem::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OrderItem.key_id)
}
::std::string* OrderItem::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OrderItem.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderItem::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.OrderItem.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderItem::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderItem.key_id)
}

// int32 key_count = 3;
void OrderItem::clear_key_count() {
  key_count_ = 0;
}
::google::protobuf::int32 OrderItem::key_count() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.key_count)
  return key_count_;
}
void OrderItem::set_key_count(::google::protobuf::int32 value) {
  
  key_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderItem.key_count)
}

// int32 key_fee = 4;
void OrderItem::clear_key_fee() {
  key_fee_ = 0;
}
::google::protobuf::int32 OrderItem::key_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.key_fee)
  return key_fee_;
}
void OrderItem::set_key_fee(::google::protobuf::int32 value) {
  
  key_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderItem.key_fee)
}

// int32 dis_fee = 5;
void OrderItem::clear_dis_fee() {
  dis_fee_ = 0;
}
::google::protobuf::int32 OrderItem::dis_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.dis_fee)
  return dis_fee_;
}
void OrderItem::set_dis_fee(::google::protobuf::int32 value) {
  
  dis_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderItem.dis_fee)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderInfo::kIdFieldNumber;
const int OrderInfo::kStateFieldNumber;
const int OrderInfo::kItemsFieldNumber;
const int OrderInfo::kTotalFeeFieldNumber;
const int OrderInfo::kTotalNumFieldNumber;
const int OrderInfo::kPayTypeFieldNumber;
const int OrderInfo::kPaySelectFieldNumber;
const int OrderInfo::kPayTimeFieldNumber;
const int OrderInfo::kGenTimeFieldNumber;
const int OrderInfo::kRefundTimeFieldNumber;
const int OrderInfo::kBalanceFeeFieldNumber;
const int OrderInfo::kTransFeeFieldNumber;
const int OrderInfo::kDisFreeFieldNumber;
const int OrderInfo::kCouponFeeFieldNumber;
const int OrderInfo::kPayFeeFieldNumber;
const int OrderInfo::kRefundFeeFieldNumber;
const int OrderInfo::kDeliverTimeFieldNumber;
const int OrderInfo::kMarkFieldNumber;
const int OrderInfo::kCouponFieldNumber;
const int OrderInfo::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderInfo::OrderInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.OrderInfo)
}
OrderInfo::OrderInfo(const OrderInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mark().size() > 0) {
    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.has_deliver_time()) {
    deliver_time_ = new ::ttmall::DeliverTimeInfo(*from.deliver_time_);
  } else {
    deliver_time_ = NULL;
  }
  if (from.has_coupon()) {
    coupon_ = new ::ttmall::CouponInfo(*from.coupon_);
  } else {
    coupon_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::ttmall::AddressInfo(*from.address_);
  } else {
    address_ = NULL;
  }
  ::memcpy(&state_, &from.state_,
    reinterpret_cast<char*>(&refund_fee_) -
    reinterpret_cast<char*>(&state_) + sizeof(refund_fee_));
  // @@protoc_insertion_point(copy_constructor:ttmall.OrderInfo)
}

void OrderInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deliver_time_, 0, reinterpret_cast<char*>(&refund_fee_) -
    reinterpret_cast<char*>(&deliver_time_) + sizeof(refund_fee_));
  _cached_size_ = 0;
}

OrderInfo::~OrderInfo() {
  // @@protoc_insertion_point(destructor:ttmall.OrderInfo)
  SharedDtor();
}

void OrderInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete deliver_time_;
  }
  if (this != internal_default_instance()) {
    delete coupon_;
  }
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void OrderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderInfo::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderInfo& OrderInfo::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrderInfo* OrderInfo::New(::google::protobuf::Arena* arena) const {
  OrderInfo* n = new OrderInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.OrderInfo)
  items_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && deliver_time_ != NULL) {
    delete deliver_time_;
  }
  deliver_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && coupon_ != NULL) {
    delete coupon_;
  }
  coupon_ = NULL;
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  ::memset(&state_, 0, reinterpret_cast<char*>(&refund_fee_) -
    reinterpret_cast<char*>(&state_) + sizeof(refund_fee_));
}

bool OrderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.OrderInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.OrderInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.OrderState state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::ttmall::OrderState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.OrderItem items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_fee = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.PayType pay_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pay_type(static_cast< ::ttmall::PayType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.PaySelect pay_select = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pay_select(static_cast< ::ttmall::PaySelect >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 pay_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pay_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 gen_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gen_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 refund_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refund_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 balance_fee = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &balance_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 trans_fee = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trans_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dis_free = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dis_free_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 coupon_fee = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coupon_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pay_fee = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pay_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 refund_fee = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refund_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.DeliverTimeInfo deliver_time = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deliver_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mark = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mark().data(), this->mark().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.OrderInfo.mark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.CouponInfo Coupon = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coupon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.AddressInfo Address = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.OrderInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.OrderInfo)
  return false;
#undef DO_
}

void OrderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.OrderInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OrderInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .ttmall.OrderState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // repeated .ttmall.OrderItem items = 3;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  // int32 total_fee = 4;
  if (this->total_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_fee(), output);
  }

  // int32 total_num = 5;
  if (this->total_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_num(), output);
  }

  // .ttmall.PayType pay_type = 6;
  if (this->pay_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->pay_type(), output);
  }

  // .ttmall.PaySelect pay_select = 7;
  if (this->pay_select() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->pay_select(), output);
  }

  // int64 pay_time = 8;
  if (this->pay_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->pay_time(), output);
  }

  // int64 gen_time = 9;
  if (this->gen_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->gen_time(), output);
  }

  // int64 refund_time = 10;
  if (this->refund_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->refund_time(), output);
  }

  // int32 balance_fee = 11;
  if (this->balance_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->balance_fee(), output);
  }

  // int32 trans_fee = 12;
  if (this->trans_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->trans_fee(), output);
  }

  // int32 dis_free = 13;
  if (this->dis_free() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->dis_free(), output);
  }

  // int32 coupon_fee = 14;
  if (this->coupon_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->coupon_fee(), output);
  }

  // int32 pay_fee = 15;
  if (this->pay_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->pay_fee(), output);
  }

  // int32 refund_fee = 16;
  if (this->refund_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->refund_fee(), output);
  }

  // .ttmall.DeliverTimeInfo deliver_time = 17;
  if (this->has_deliver_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->deliver_time_, output);
  }

  // string mark = 18;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OrderInfo.mark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->mark(), output);
  }

  // .ttmall.CouponInfo Coupon = 19;
  if (this->has_coupon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->coupon_, output);
  }

  // .ttmall.AddressInfo Address = 20;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->address_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.OrderInfo)
}

::google::protobuf::uint8* OrderInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.OrderInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OrderInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .ttmall.OrderState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // repeated .ttmall.OrderItem items = 3;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->items(i), deterministic, target);
  }

  // int32 total_fee = 4;
  if (this->total_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_fee(), target);
  }

  // int32 total_num = 5;
  if (this->total_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_num(), target);
  }

  // .ttmall.PayType pay_type = 6;
  if (this->pay_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->pay_type(), target);
  }

  // .ttmall.PaySelect pay_select = 7;
  if (this->pay_select() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->pay_select(), target);
  }

  // int64 pay_time = 8;
  if (this->pay_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->pay_time(), target);
  }

  // int64 gen_time = 9;
  if (this->gen_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->gen_time(), target);
  }

  // int64 refund_time = 10;
  if (this->refund_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->refund_time(), target);
  }

  // int32 balance_fee = 11;
  if (this->balance_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->balance_fee(), target);
  }

  // int32 trans_fee = 12;
  if (this->trans_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->trans_fee(), target);
  }

  // int32 dis_free = 13;
  if (this->dis_free() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->dis_free(), target);
  }

  // int32 coupon_fee = 14;
  if (this->coupon_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->coupon_fee(), target);
  }

  // int32 pay_fee = 15;
  if (this->pay_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->pay_fee(), target);
  }

  // int32 refund_fee = 16;
  if (this->refund_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->refund_fee(), target);
  }

  // .ttmall.DeliverTimeInfo deliver_time = 17;
  if (this->has_deliver_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->deliver_time_, deterministic, target);
  }

  // string mark = 18;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OrderInfo.mark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->mark(), target);
  }

  // .ttmall.CouponInfo Coupon = 19;
  if (this->has_coupon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->coupon_, deterministic, target);
  }

  // .ttmall.AddressInfo Address = 20;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->address_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.OrderInfo)
  return target;
}

size_t OrderInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.OrderInfo)
  size_t total_size = 0;

  // repeated .ttmall.OrderItem items = 3;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string mark = 18;
  if (this->mark().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mark());
  }

  // .ttmall.DeliverTimeInfo deliver_time = 17;
  if (this->has_deliver_time()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deliver_time_);
  }

  // .ttmall.CouponInfo Coupon = 19;
  if (this->has_coupon()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->coupon_);
  }

  // .ttmall.AddressInfo Address = 20;
  if (this->has_address()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  // .ttmall.OrderState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // int32 total_fee = 4;
  if (this->total_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_fee());
  }

  // int32 total_num = 5;
  if (this->total_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_num());
  }

  // .ttmall.PayType pay_type = 6;
  if (this->pay_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pay_type());
  }

  // int64 pay_time = 8;
  if (this->pay_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pay_time());
  }

  // int64 gen_time = 9;
  if (this->gen_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->gen_time());
  }

  // .ttmall.PaySelect pay_select = 7;
  if (this->pay_select() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pay_select());
  }

  // int32 balance_fee = 11;
  if (this->balance_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->balance_fee());
  }

  // int64 refund_time = 10;
  if (this->refund_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->refund_time());
  }

  // int32 trans_fee = 12;
  if (this->trans_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trans_fee());
  }

  // int32 dis_free = 13;
  if (this->dis_free() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dis_free());
  }

  // int32 coupon_fee = 14;
  if (this->coupon_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->coupon_fee());
  }

  // int32 pay_fee = 15;
  if (this->pay_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pay_fee());
  }

  // int32 refund_fee = 16;
  if (this->refund_fee() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refund_fee());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.OrderInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.OrderInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.OrderInfo)
    MergeFrom(*source);
  }
}

void OrderInfo::MergeFrom(const OrderInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.OrderInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.mark().size() > 0) {

    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.has_deliver_time()) {
    mutable_deliver_time()->::ttmall::DeliverTimeInfo::MergeFrom(from.deliver_time());
  }
  if (from.has_coupon()) {
    mutable_coupon()->::ttmall::CouponInfo::MergeFrom(from.coupon());
  }
  if (from.has_address()) {
    mutable_address()->::ttmall::AddressInfo::MergeFrom(from.address());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.total_fee() != 0) {
    set_total_fee(from.total_fee());
  }
  if (from.total_num() != 0) {
    set_total_num(from.total_num());
  }
  if (from.pay_type() != 0) {
    set_pay_type(from.pay_type());
  }
  if (from.pay_time() != 0) {
    set_pay_time(from.pay_time());
  }
  if (from.gen_time() != 0) {
    set_gen_time(from.gen_time());
  }
  if (from.pay_select() != 0) {
    set_pay_select(from.pay_select());
  }
  if (from.balance_fee() != 0) {
    set_balance_fee(from.balance_fee());
  }
  if (from.refund_time() != 0) {
    set_refund_time(from.refund_time());
  }
  if (from.trans_fee() != 0) {
    set_trans_fee(from.trans_fee());
  }
  if (from.dis_free() != 0) {
    set_dis_free(from.dis_free());
  }
  if (from.coupon_fee() != 0) {
    set_coupon_fee(from.coupon_fee());
  }
  if (from.pay_fee() != 0) {
    set_pay_fee(from.pay_fee());
  }
  if (from.refund_fee() != 0) {
    set_refund_fee(from.refund_fee());
  }
}

void OrderInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.OrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderInfo::CopyFrom(const OrderInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.OrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderInfo::IsInitialized() const {
  return true;
}

void OrderInfo::Swap(OrderInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderInfo::InternalSwap(OrderInfo* other) {
  items_.InternalSwap(&other->items_);
  id_.Swap(&other->id_);
  mark_.Swap(&other->mark_);
  std::swap(deliver_time_, other->deliver_time_);
  std::swap(coupon_, other->coupon_);
  std::swap(address_, other->address_);
  std::swap(state_, other->state_);
  std::swap(total_fee_, other->total_fee_);
  std::swap(total_num_, other->total_num_);
  std::swap(pay_type_, other->pay_type_);
  std::swap(pay_time_, other->pay_time_);
  std::swap(gen_time_, other->gen_time_);
  std::swap(pay_select_, other->pay_select_);
  std::swap(balance_fee_, other->balance_fee_);
  std::swap(refund_time_, other->refund_time_);
  std::swap(trans_fee_, other->trans_fee_);
  std::swap(dis_free_, other->dis_free_);
  std::swap(coupon_fee_, other->coupon_fee_);
  std::swap(pay_fee_, other->pay_fee_);
  std::swap(refund_fee_, other->refund_fee_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderInfo::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderInfo

// string id = 1;
void OrderInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.id)
  return id_.GetNoArena();
}
void OrderInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.id)
}
#if LANG_CXX11
void OrderInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OrderInfo.id)
}
#endif
void OrderInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OrderInfo.id)
}
void OrderInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OrderInfo.id)
}
::std::string* OrderInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.id)
}

// .ttmall.OrderState state = 2;
void OrderInfo::clear_state() {
  state_ = 0;
}
::ttmall::OrderState OrderInfo::state() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.state)
  return static_cast< ::ttmall::OrderState >(state_);
}
void OrderInfo::set_state(::ttmall::OrderState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.state)
}

// repeated .ttmall.OrderItem items = 3;
int OrderInfo::items_size() const {
  return items_.size();
}
void OrderInfo::clear_items() {
  items_.Clear();
}
const ::ttmall::OrderItem& OrderInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.items)
  return items_.Get(index);
}
::ttmall::OrderItem* OrderInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.items)
  return items_.Mutable(index);
}
::ttmall::OrderItem* OrderInfo::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.OrderInfo.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
OrderInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.OrderInfo.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
OrderInfo::items() const {
  // @@protoc_insertion_point(field_list:ttmall.OrderInfo.items)
  return items_;
}

// int32 total_fee = 4;
void OrderInfo::clear_total_fee() {
  total_fee_ = 0;
}
::google::protobuf::int32 OrderInfo::total_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.total_fee)
  return total_fee_;
}
void OrderInfo::set_total_fee(::google::protobuf::int32 value) {
  
  total_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.total_fee)
}

// int32 total_num = 5;
void OrderInfo::clear_total_num() {
  total_num_ = 0;
}
::google::protobuf::int32 OrderInfo::total_num() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.total_num)
  return total_num_;
}
void OrderInfo::set_total_num(::google::protobuf::int32 value) {
  
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.total_num)
}

// .ttmall.PayType pay_type = 6;
void OrderInfo::clear_pay_type() {
  pay_type_ = 0;
}
::ttmall::PayType OrderInfo::pay_type() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.pay_type)
  return static_cast< ::ttmall::PayType >(pay_type_);
}
void OrderInfo::set_pay_type(::ttmall::PayType value) {
  
  pay_type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.pay_type)
}

// .ttmall.PaySelect pay_select = 7;
void OrderInfo::clear_pay_select() {
  pay_select_ = 0;
}
::ttmall::PaySelect OrderInfo::pay_select() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.pay_select)
  return static_cast< ::ttmall::PaySelect >(pay_select_);
}
void OrderInfo::set_pay_select(::ttmall::PaySelect value) {
  
  pay_select_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.pay_select)
}

// int64 pay_time = 8;
void OrderInfo::clear_pay_time() {
  pay_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderInfo::pay_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.pay_time)
  return pay_time_;
}
void OrderInfo::set_pay_time(::google::protobuf::int64 value) {
  
  pay_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.pay_time)
}

// int64 gen_time = 9;
void OrderInfo::clear_gen_time() {
  gen_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderInfo::gen_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.gen_time)
  return gen_time_;
}
void OrderInfo::set_gen_time(::google::protobuf::int64 value) {
  
  gen_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.gen_time)
}

// int64 refund_time = 10;
void OrderInfo::clear_refund_time() {
  refund_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderInfo::refund_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.refund_time)
  return refund_time_;
}
void OrderInfo::set_refund_time(::google::protobuf::int64 value) {
  
  refund_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.refund_time)
}

// int32 balance_fee = 11;
void OrderInfo::clear_balance_fee() {
  balance_fee_ = 0;
}
::google::protobuf::int32 OrderInfo::balance_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.balance_fee)
  return balance_fee_;
}
void OrderInfo::set_balance_fee(::google::protobuf::int32 value) {
  
  balance_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.balance_fee)
}

// int32 trans_fee = 12;
void OrderInfo::clear_trans_fee() {
  trans_fee_ = 0;
}
::google::protobuf::int32 OrderInfo::trans_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.trans_fee)
  return trans_fee_;
}
void OrderInfo::set_trans_fee(::google::protobuf::int32 value) {
  
  trans_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.trans_fee)
}

// int32 dis_free = 13;
void OrderInfo::clear_dis_free() {
  dis_free_ = 0;
}
::google::protobuf::int32 OrderInfo::dis_free() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.dis_free)
  return dis_free_;
}
void OrderInfo::set_dis_free(::google::protobuf::int32 value) {
  
  dis_free_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.dis_free)
}

// int32 coupon_fee = 14;
void OrderInfo::clear_coupon_fee() {
  coupon_fee_ = 0;
}
::google::protobuf::int32 OrderInfo::coupon_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.coupon_fee)
  return coupon_fee_;
}
void OrderInfo::set_coupon_fee(::google::protobuf::int32 value) {
  
  coupon_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.coupon_fee)
}

// int32 pay_fee = 15;
void OrderInfo::clear_pay_fee() {
  pay_fee_ = 0;
}
::google::protobuf::int32 OrderInfo::pay_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.pay_fee)
  return pay_fee_;
}
void OrderInfo::set_pay_fee(::google::protobuf::int32 value) {
  
  pay_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.pay_fee)
}

// int32 refund_fee = 16;
void OrderInfo::clear_refund_fee() {
  refund_fee_ = 0;
}
::google::protobuf::int32 OrderInfo::refund_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.refund_fee)
  return refund_fee_;
}
void OrderInfo::set_refund_fee(::google::protobuf::int32 value) {
  
  refund_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.refund_fee)
}

// .ttmall.DeliverTimeInfo deliver_time = 17;
bool OrderInfo::has_deliver_time() const {
  return this != internal_default_instance() && deliver_time_ != NULL;
}
void OrderInfo::clear_deliver_time() {
  if (GetArenaNoVirtual() == NULL && deliver_time_ != NULL) delete deliver_time_;
  deliver_time_ = NULL;
}
const ::ttmall::DeliverTimeInfo& OrderInfo::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.deliver_time)
  return deliver_time_ != NULL ? *deliver_time_
                         : *::ttmall::DeliverTimeInfo::internal_default_instance();
}
::ttmall::DeliverTimeInfo* OrderInfo::mutable_deliver_time() {
  
  if (deliver_time_ == NULL) {
    deliver_time_ = new ::ttmall::DeliverTimeInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.deliver_time)
  return deliver_time_;
}
::ttmall::DeliverTimeInfo* OrderInfo::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.deliver_time)
  
  ::ttmall::DeliverTimeInfo* temp = deliver_time_;
  deliver_time_ = NULL;
  return temp;
}
void OrderInfo::set_allocated_deliver_time(::ttmall::DeliverTimeInfo* deliver_time) {
  delete deliver_time_;
  deliver_time_ = deliver_time;
  if (deliver_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.deliver_time)
}

// string mark = 18;
void OrderInfo::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderInfo::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.mark)
  return mark_.GetNoArena();
}
void OrderInfo::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.mark)
}
#if LANG_CXX11
void OrderInfo::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OrderInfo.mark)
}
#endif
void OrderInfo::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OrderInfo.mark)
}
void OrderInfo::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OrderInfo.mark)
}
::std::string* OrderInfo::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderInfo::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderInfo::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.mark)
}

// .ttmall.CouponInfo Coupon = 19;
bool OrderInfo::has_coupon() const {
  return this != internal_default_instance() && coupon_ != NULL;
}
void OrderInfo::clear_coupon() {
  if (GetArenaNoVirtual() == NULL && coupon_ != NULL) delete coupon_;
  coupon_ = NULL;
}
const ::ttmall::CouponInfo& OrderInfo::coupon() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.Coupon)
  return coupon_ != NULL ? *coupon_
                         : *::ttmall::CouponInfo::internal_default_instance();
}
::ttmall::CouponInfo* OrderInfo::mutable_coupon() {
  
  if (coupon_ == NULL) {
    coupon_ = new ::ttmall::CouponInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.Coupon)
  return coupon_;
}
::ttmall::CouponInfo* OrderInfo::release_coupon() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.Coupon)
  
  ::ttmall::CouponInfo* temp = coupon_;
  coupon_ = NULL;
  return temp;
}
void OrderInfo::set_allocated_coupon(::ttmall::CouponInfo* coupon) {
  delete coupon_;
  coupon_ = coupon;
  if (coupon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.Coupon)
}

// .ttmall.AddressInfo Address = 20;
bool OrderInfo::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void OrderInfo::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::ttmall::AddressInfo& OrderInfo::address() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.Address)
  return address_ != NULL ? *address_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
::ttmall::AddressInfo* OrderInfo::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.Address)
  return address_;
}
::ttmall::AddressInfo* OrderInfo::release_address() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.Address)
  
  ::ttmall::AddressInfo* temp = address_;
  address_ = NULL;
  return temp;
}
void OrderInfo::set_allocated_address(::ttmall::AddressInfo* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.Address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitOrderReq::kTokenFieldNumber;
const int SubmitOrderReq::kCartIdsFieldNumber;
const int SubmitOrderReq::kCouponIdFieldNumber;
const int SubmitOrderReq::kAddressIdFieldNumber;
const int SubmitOrderReq::kDeliverTimeIdFieldNumber;
const int SubmitOrderReq::kPaySelectFieldNumber;
const int SubmitOrderReq::kMarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitOrderReq::SubmitOrderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SubmitOrderReq)
}
SubmitOrderReq::SubmitOrderReq(const SubmitOrderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cart_ids_(from.cart_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  coupon_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coupon_id().size() > 0) {
    coupon_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coupon_id_);
  }
  address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address_id().size() > 0) {
    address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_id_);
  }
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mark().size() > 0) {
    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  ::memcpy(&deliver_time_id_, &from.deliver_time_id_,
    reinterpret_cast<char*>(&pay_select_) -
    reinterpret_cast<char*>(&deliver_time_id_) + sizeof(pay_select_));
  // @@protoc_insertion_point(copy_constructor:ttmall.SubmitOrderReq)
}

void SubmitOrderReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coupon_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deliver_time_id_, 0, reinterpret_cast<char*>(&pay_select_) -
    reinterpret_cast<char*>(&deliver_time_id_) + sizeof(pay_select_));
  _cached_size_ = 0;
}

SubmitOrderReq::~SubmitOrderReq() {
  // @@protoc_insertion_point(destructor:ttmall.SubmitOrderReq)
  SharedDtor();
}

void SubmitOrderReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coupon_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubmitOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitOrderReq::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitOrderReq& SubmitOrderReq::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubmitOrderReq* SubmitOrderReq::New(::google::protobuf::Arena* arena) const {
  SubmitOrderReq* n = new SubmitOrderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SubmitOrderReq)
  cart_ids_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coupon_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deliver_time_id_, 0, reinterpret_cast<char*>(&pay_select_) -
    reinterpret_cast<char*>(&deliver_time_id_) + sizeof(pay_select_));
}

bool SubmitOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SubmitOrderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SubmitOrderReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cart_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cart_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cart_ids(this->cart_ids_size() - 1).data(),
            this->cart_ids(this->cart_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SubmitOrderReq.cart_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coupon_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coupon_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coupon_id().data(), this->coupon_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SubmitOrderReq.coupon_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address_id().data(), this->address_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SubmitOrderReq.address_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deliver_time_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deliver_time_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.PaySelect pay_select = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pay_select(static_cast< ::ttmall::PaySelect >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mark = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mark().data(), this->mark().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SubmitOrderReq.mark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SubmitOrderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SubmitOrderReq)
  return false;
#undef DO_
}

void SubmitOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SubmitOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // repeated string cart_ids = 2;
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cart_ids(i).data(), this->cart_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.cart_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cart_ids(i), output);
  }

  // string coupon_id = 3;
  if (this->coupon_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coupon_id().data(), this->coupon_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.coupon_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->coupon_id(), output);
  }

  // string address_id = 4;
  if (this->address_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address_id().data(), this->address_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.address_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address_id(), output);
  }

  // int32 deliver_time_id = 5;
  if (this->deliver_time_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->deliver_time_id(), output);
  }

  // .ttmall.PaySelect pay_select = 7;
  if (this->pay_select() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->pay_select(), output);
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.mark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mark(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SubmitOrderReq)
}

::google::protobuf::uint8* SubmitOrderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SubmitOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // repeated string cart_ids = 2;
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cart_ids(i).data(), this->cart_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.cart_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cart_ids(i), target);
  }

  // string coupon_id = 3;
  if (this->coupon_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coupon_id().data(), this->coupon_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.coupon_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->coupon_id(), target);
  }

  // string address_id = 4;
  if (this->address_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address_id().data(), this->address_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.address_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address_id(), target);
  }

  // int32 deliver_time_id = 5;
  if (this->deliver_time_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->deliver_time_id(), target);
  }

  // .ttmall.PaySelect pay_select = 7;
  if (this->pay_select() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->pay_select(), target);
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SubmitOrderReq.mark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mark(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SubmitOrderReq)
  return target;
}

size_t SubmitOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SubmitOrderReq)
  size_t total_size = 0;

  // repeated string cart_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cart_ids_size());
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cart_ids(i));
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string coupon_id = 3;
  if (this->coupon_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coupon_id());
  }

  // string address_id = 4;
  if (this->address_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address_id());
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mark());
  }

  // int32 deliver_time_id = 5;
  if (this->deliver_time_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deliver_time_id());
  }

  // .ttmall.PaySelect pay_select = 7;
  if (this->pay_select() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pay_select());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SubmitOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitOrderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitOrderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SubmitOrderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SubmitOrderReq)
    MergeFrom(*source);
  }
}

void SubmitOrderReq::MergeFrom(const SubmitOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SubmitOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cart_ids_.MergeFrom(from.cart_ids_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.coupon_id().size() > 0) {

    coupon_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coupon_id_);
  }
  if (from.address_id().size() > 0) {

    address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_id_);
  }
  if (from.mark().size() > 0) {

    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.deliver_time_id() != 0) {
    set_deliver_time_id(from.deliver_time_id());
  }
  if (from.pay_select() != 0) {
    set_pay_select(from.pay_select());
  }
}

void SubmitOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SubmitOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitOrderReq::CopyFrom(const SubmitOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SubmitOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitOrderReq::IsInitialized() const {
  return true;
}

void SubmitOrderReq::Swap(SubmitOrderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitOrderReq::InternalSwap(SubmitOrderReq* other) {
  cart_ids_.InternalSwap(&other->cart_ids_);
  token_.Swap(&other->token_);
  coupon_id_.Swap(&other->coupon_id_);
  address_id_.Swap(&other->address_id_);
  mark_.Swap(&other->mark_);
  std::swap(deliver_time_id_, other->deliver_time_id_);
  std::swap(pay_select_, other->pay_select_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitOrderReq::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubmitOrderReq

// string token = 1;
void SubmitOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubmitOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.token)
  return token_.GetNoArena();
}
void SubmitOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.token)
}
#if LANG_CXX11
void SubmitOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SubmitOrderReq.token)
}
#endif
void SubmitOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.token)
}
void SubmitOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.token)
}
::std::string* SubmitOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderReq.token)
}

// repeated string cart_ids = 2;
int SubmitOrderReq::cart_ids_size() const {
  return cart_ids_.size();
}
void SubmitOrderReq::clear_cart_ids() {
  cart_ids_.Clear();
}
const ::std::string& SubmitOrderReq::cart_ids(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.cart_ids)
  return cart_ids_.Get(index);
}
::std::string* SubmitOrderReq::mutable_cart_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.cart_ids)
  return cart_ids_.Mutable(index);
}
void SubmitOrderReq::set_cart_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.cart_ids)
  cart_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SubmitOrderReq::set_cart_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.cart_ids)
  cart_ids_.Mutable(index)->assign(std::move(value));
}
#endif
void SubmitOrderReq::set_cart_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.cart_ids)
}
void SubmitOrderReq::set_cart_ids(int index, const char* value, size_t size) {
  cart_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.cart_ids)
}
::std::string* SubmitOrderReq::add_cart_ids() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.SubmitOrderReq.cart_ids)
  return cart_ids_.Add();
}
void SubmitOrderReq::add_cart_ids(const ::std::string& value) {
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.SubmitOrderReq.cart_ids)
}
#if LANG_CXX11
void SubmitOrderReq::add_cart_ids(::std::string&& value) {
  cart_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.SubmitOrderReq.cart_ids)
}
#endif
void SubmitOrderReq::add_cart_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.SubmitOrderReq.cart_ids)
}
void SubmitOrderReq::add_cart_ids(const char* value, size_t size) {
  cart_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.SubmitOrderReq.cart_ids)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SubmitOrderReq::cart_ids() const {
  // @@protoc_insertion_point(field_list:ttmall.SubmitOrderReq.cart_ids)
  return cart_ids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SubmitOrderReq::mutable_cart_ids() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.SubmitOrderReq.cart_ids)
  return &cart_ids_;
}

// string coupon_id = 3;
void SubmitOrderReq::clear_coupon_id() {
  coupon_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubmitOrderReq::coupon_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.coupon_id)
  return coupon_id_.GetNoArena();
}
void SubmitOrderReq::set_coupon_id(const ::std::string& value) {
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.coupon_id)
}
#if LANG_CXX11
void SubmitOrderReq::set_coupon_id(::std::string&& value) {
  
  coupon_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SubmitOrderReq.coupon_id)
}
#endif
void SubmitOrderReq::set_coupon_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.coupon_id)
}
void SubmitOrderReq::set_coupon_id(const char* value, size_t size) {
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.coupon_id)
}
::std::string* SubmitOrderReq::mutable_coupon_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.coupon_id)
  return coupon_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitOrderReq::release_coupon_id() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderReq.coupon_id)
  
  return coupon_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitOrderReq::set_allocated_coupon_id(::std::string* coupon_id) {
  if (coupon_id != NULL) {
    
  } else {
    
  }
  coupon_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coupon_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderReq.coupon_id)
}

// string address_id = 4;
void SubmitOrderReq::clear_address_id() {
  address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubmitOrderReq::address_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.address_id)
  return address_id_.GetNoArena();
}
void SubmitOrderReq::set_address_id(const ::std::string& value) {
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.address_id)
}
#if LANG_CXX11
void SubmitOrderReq::set_address_id(::std::string&& value) {
  
  address_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SubmitOrderReq.address_id)
}
#endif
void SubmitOrderReq::set_address_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.address_id)
}
void SubmitOrderReq::set_address_id(const char* value, size_t size) {
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.address_id)
}
::std::string* SubmitOrderReq::mutable_address_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.address_id)
  return address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitOrderReq::release_address_id() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderReq.address_id)
  
  return address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitOrderReq::set_allocated_address_id(::std::string* address_id) {
  if (address_id != NULL) {
    
  } else {
    
  }
  address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderReq.address_id)
}

// int32 deliver_time_id = 5;
void SubmitOrderReq::clear_deliver_time_id() {
  deliver_time_id_ = 0;
}
::google::protobuf::int32 SubmitOrderReq::deliver_time_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.deliver_time_id)
  return deliver_time_id_;
}
void SubmitOrderReq::set_deliver_time_id(::google::protobuf::int32 value) {
  
  deliver_time_id_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.deliver_time_id)
}

// .ttmall.PaySelect pay_select = 7;
void SubmitOrderReq::clear_pay_select() {
  pay_select_ = 0;
}
::ttmall::PaySelect SubmitOrderReq::pay_select() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.pay_select)
  return static_cast< ::ttmall::PaySelect >(pay_select_);
}
void SubmitOrderReq::set_pay_select(::ttmall::PaySelect value) {
  
  pay_select_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.pay_select)
}

// string mark = 8;
void SubmitOrderReq::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubmitOrderReq::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.mark)
  return mark_.GetNoArena();
}
void SubmitOrderReq::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.mark)
}
#if LANG_CXX11
void SubmitOrderReq::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SubmitOrderReq.mark)
}
#endif
void SubmitOrderReq::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.mark)
}
void SubmitOrderReq::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.mark)
}
::std::string* SubmitOrderReq::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitOrderReq::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderReq.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitOrderReq::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderReq.mark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitOrderRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitOrderRep::SubmitOrderRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SubmitOrderRep)
}
SubmitOrderRep::SubmitOrderRep(const SubmitOrderRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::OrderInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SubmitOrderRep)
}

void SubmitOrderRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

SubmitOrderRep::~SubmitOrderRep() {
  // @@protoc_insertion_point(destructor:ttmall.SubmitOrderRep)
  SharedDtor();
}

void SubmitOrderRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void SubmitOrderRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitOrderRep::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitOrderRep& SubmitOrderRep::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubmitOrderRep* SubmitOrderRep::New(::google::protobuf::Arena* arena) const {
  SubmitOrderRep* n = new SubmitOrderRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitOrderRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SubmitOrderRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool SubmitOrderRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SubmitOrderRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.OrderInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SubmitOrderRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SubmitOrderRep)
  return false;
#undef DO_
}

void SubmitOrderRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SubmitOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SubmitOrderRep)
}

::google::protobuf::uint8* SubmitOrderRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SubmitOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SubmitOrderRep)
  return target;
}

size_t SubmitOrderRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SubmitOrderRep)
  size_t total_size = 0;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitOrderRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SubmitOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitOrderRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitOrderRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SubmitOrderRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SubmitOrderRep)
    MergeFrom(*source);
  }
}

void SubmitOrderRep::MergeFrom(const SubmitOrderRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SubmitOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::OrderInfo::MergeFrom(from.info());
  }
}

void SubmitOrderRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SubmitOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitOrderRep::CopyFrom(const SubmitOrderRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SubmitOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitOrderRep::IsInitialized() const {
  return true;
}

void SubmitOrderRep::Swap(SubmitOrderRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitOrderRep::InternalSwap(SubmitOrderRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitOrderRep::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubmitOrderRep

// .ttmall.OrderInfo info = 1;
bool SubmitOrderRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void SubmitOrderRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::OrderInfo& SubmitOrderRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
::ttmall::OrderInfo* SubmitOrderRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderRep.info)
  return info_;
}
::ttmall::OrderInfo* SubmitOrderRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void SubmitOrderRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfirmOrderReq::kTokenFieldNumber;
const int ConfirmOrderReq::kCartIdsFieldNumber;
const int ConfirmOrderReq::kCouponIdFieldNumber;
const int ConfirmOrderReq::kAddressIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfirmOrderReq::ConfirmOrderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ConfirmOrderReq)
}
ConfirmOrderReq::ConfirmOrderReq(const ConfirmOrderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cart_ids_(from.cart_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  coupon_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coupon_id().size() > 0) {
    coupon_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coupon_id_);
  }
  address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address_id().size() > 0) {
    address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ConfirmOrderReq)
}

void ConfirmOrderReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coupon_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfirmOrderReq::~ConfirmOrderReq() {
  // @@protoc_insertion_point(destructor:ttmall.ConfirmOrderReq)
  SharedDtor();
}

void ConfirmOrderReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coupon_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfirmOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmOrderReq::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfirmOrderReq& ConfirmOrderReq::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfirmOrderReq* ConfirmOrderReq::New(::google::protobuf::Arena* arena) const {
  ConfirmOrderReq* n = new ConfirmOrderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfirmOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ConfirmOrderReq)
  cart_ids_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coupon_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfirmOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ConfirmOrderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ConfirmOrderReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cart_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cart_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cart_ids(this->cart_ids_size() - 1).data(),
            this->cart_ids(this->cart_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ConfirmOrderReq.cart_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coupon_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coupon_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coupon_id().data(), this->coupon_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ConfirmOrderReq.coupon_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address_id().data(), this->address_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ConfirmOrderReq.address_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ConfirmOrderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ConfirmOrderReq)
  return false;
#undef DO_
}

void ConfirmOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ConfirmOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ConfirmOrderReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // repeated string cart_ids = 2;
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cart_ids(i).data(), this->cart_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ConfirmOrderReq.cart_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cart_ids(i), output);
  }

  // string coupon_id = 3;
  if (this->coupon_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coupon_id().data(), this->coupon_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ConfirmOrderReq.coupon_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->coupon_id(), output);
  }

  // string address_id = 4;
  if (this->address_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address_id().data(), this->address_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ConfirmOrderReq.address_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ConfirmOrderReq)
}

::google::protobuf::uint8* ConfirmOrderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ConfirmOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ConfirmOrderReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // repeated string cart_ids = 2;
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cart_ids(i).data(), this->cart_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ConfirmOrderReq.cart_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cart_ids(i), target);
  }

  // string coupon_id = 3;
  if (this->coupon_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coupon_id().data(), this->coupon_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ConfirmOrderReq.coupon_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->coupon_id(), target);
  }

  // string address_id = 4;
  if (this->address_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address_id().data(), this->address_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ConfirmOrderReq.address_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ConfirmOrderReq)
  return target;
}

size_t ConfirmOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ConfirmOrderReq)
  size_t total_size = 0;

  // repeated string cart_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cart_ids_size());
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cart_ids(i));
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string coupon_id = 3;
  if (this->coupon_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coupon_id());
  }

  // string address_id = 4;
  if (this->address_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ConfirmOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfirmOrderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfirmOrderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ConfirmOrderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ConfirmOrderReq)
    MergeFrom(*source);
  }
}

void ConfirmOrderReq::MergeFrom(const ConfirmOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ConfirmOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cart_ids_.MergeFrom(from.cart_ids_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.coupon_id().size() > 0) {

    coupon_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coupon_id_);
  }
  if (from.address_id().size() > 0) {

    address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_id_);
  }
}

void ConfirmOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ConfirmOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmOrderReq::CopyFrom(const ConfirmOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ConfirmOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmOrderReq::IsInitialized() const {
  return true;
}

void ConfirmOrderReq::Swap(ConfirmOrderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfirmOrderReq::InternalSwap(ConfirmOrderReq* other) {
  cart_ids_.InternalSwap(&other->cart_ids_);
  token_.Swap(&other->token_);
  coupon_id_.Swap(&other->coupon_id_);
  address_id_.Swap(&other->address_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfirmOrderReq::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfirmOrderReq

// string token = 1;
void ConfirmOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfirmOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderReq.token)
  return token_.GetNoArena();
}
void ConfirmOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.token)
}
#if LANG_CXX11
void ConfirmOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ConfirmOrderReq.token)
}
#endif
void ConfirmOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ConfirmOrderReq.token)
}
void ConfirmOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ConfirmOrderReq.token)
}
::std::string* ConfirmOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfirmOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ConfirmOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfirmOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ConfirmOrderReq.token)
}

// repeated string cart_ids = 2;
int ConfirmOrderReq::cart_ids_size() const {
  return cart_ids_.size();
}
void ConfirmOrderReq::clear_cart_ids() {
  cart_ids_.Clear();
}
const ::std::string& ConfirmOrderReq::cart_ids(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderReq.cart_ids)
  return cart_ids_.Get(index);
}
::std::string* ConfirmOrderReq::mutable_cart_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderReq.cart_ids)
  return cart_ids_.Mutable(index);
}
void ConfirmOrderReq::set_cart_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.cart_ids)
  cart_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ConfirmOrderReq::set_cart_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.cart_ids)
  cart_ids_.Mutable(index)->assign(std::move(value));
}
#endif
void ConfirmOrderReq::set_cart_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.ConfirmOrderReq.cart_ids)
}
void ConfirmOrderReq::set_cart_ids(int index, const char* value, size_t size) {
  cart_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.ConfirmOrderReq.cart_ids)
}
::std::string* ConfirmOrderReq::add_cart_ids() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.ConfirmOrderReq.cart_ids)
  return cart_ids_.Add();
}
void ConfirmOrderReq::add_cart_ids(const ::std::string& value) {
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderReq.cart_ids)
}
#if LANG_CXX11
void ConfirmOrderReq::add_cart_ids(::std::string&& value) {
  cart_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderReq.cart_ids)
}
#endif
void ConfirmOrderReq::add_cart_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.ConfirmOrderReq.cart_ids)
}
void ConfirmOrderReq::add_cart_ids(const char* value, size_t size) {
  cart_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.ConfirmOrderReq.cart_ids)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfirmOrderReq::cart_ids() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderReq.cart_ids)
  return cart_ids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ConfirmOrderReq::mutable_cart_ids() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderReq.cart_ids)
  return &cart_ids_;
}

// string coupon_id = 3;
void ConfirmOrderReq::clear_coupon_id() {
  coupon_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfirmOrderReq::coupon_id() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderReq.coupon_id)
  return coupon_id_.GetNoArena();
}
void ConfirmOrderReq::set_coupon_id(const ::std::string& value) {
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.coupon_id)
}
#if LANG_CXX11
void ConfirmOrderReq::set_coupon_id(::std::string&& value) {
  
  coupon_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ConfirmOrderReq.coupon_id)
}
#endif
void ConfirmOrderReq::set_coupon_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ConfirmOrderReq.coupon_id)
}
void ConfirmOrderReq::set_coupon_id(const char* value, size_t size) {
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ConfirmOrderReq.coupon_id)
}
::std::string* ConfirmOrderReq::mutable_coupon_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderReq.coupon_id)
  return coupon_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfirmOrderReq::release_coupon_id() {
  // @@protoc_insertion_point(field_release:ttmall.ConfirmOrderReq.coupon_id)
  
  return coupon_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfirmOrderReq::set_allocated_coupon_id(::std::string* coupon_id) {
  if (coupon_id != NULL) {
    
  } else {
    
  }
  coupon_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coupon_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ConfirmOrderReq.coupon_id)
}

// string address_id = 4;
void ConfirmOrderReq::clear_address_id() {
  address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfirmOrderReq::address_id() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderReq.address_id)
  return address_id_.GetNoArena();
}
void ConfirmOrderReq::set_address_id(const ::std::string& value) {
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.address_id)
}
#if LANG_CXX11
void ConfirmOrderReq::set_address_id(::std::string&& value) {
  
  address_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ConfirmOrderReq.address_id)
}
#endif
void ConfirmOrderReq::set_address_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ConfirmOrderReq.address_id)
}
void ConfirmOrderReq::set_address_id(const char* value, size_t size) {
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ConfirmOrderReq.address_id)
}
::std::string* ConfirmOrderReq::mutable_address_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderReq.address_id)
  return address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfirmOrderReq::release_address_id() {
  // @@protoc_insertion_point(field_release:ttmall.ConfirmOrderReq.address_id)
  
  return address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfirmOrderReq::set_allocated_address_id(::std::string* address_id) {
  if (address_id != NULL) {
    
  } else {
    
  }
  address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ConfirmOrderReq.address_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeliverTimeInfo::kIdFieldNumber;
const int DeliverTimeInfo::kNameFieldNumber;
const int DeliverTimeInfo::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeliverTimeInfo::DeliverTimeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DeliverTimeInfo)
}
DeliverTimeInfo::DeliverTimeInfo(const DeliverTimeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ttmall.DeliverTimeInfo)
}

void DeliverTimeInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

DeliverTimeInfo::~DeliverTimeInfo() {
  // @@protoc_insertion_point(destructor:ttmall.DeliverTimeInfo)
  SharedDtor();
}

void DeliverTimeInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeliverTimeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeliverTimeInfo::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeliverTimeInfo& DeliverTimeInfo::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeliverTimeInfo* DeliverTimeInfo::New(::google::protobuf::Arena* arena) const {
  DeliverTimeInfo* n = new DeliverTimeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeliverTimeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DeliverTimeInfo)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

bool DeliverTimeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DeliverTimeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeliverTimeInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeliverTimeInfo.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DeliverTimeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DeliverTimeInfo)
  return false;
#undef DO_
}

void DeliverTimeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DeliverTimeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeliverTimeInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeliverTimeInfo.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->desc(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DeliverTimeInfo)
}

::google::protobuf::uint8* DeliverTimeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DeliverTimeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeliverTimeInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeliverTimeInfo.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->desc(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DeliverTimeInfo)
  return target;
}

size_t DeliverTimeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DeliverTimeInfo)
  size_t total_size = 0;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeliverTimeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DeliverTimeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeliverTimeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeliverTimeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DeliverTimeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DeliverTimeInfo)
    MergeFrom(*source);
  }
}

void DeliverTimeInfo::MergeFrom(const DeliverTimeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DeliverTimeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DeliverTimeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DeliverTimeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeliverTimeInfo::CopyFrom(const DeliverTimeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DeliverTimeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeliverTimeInfo::IsInitialized() const {
  return true;
}

void DeliverTimeInfo::Swap(DeliverTimeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeliverTimeInfo::InternalSwap(DeliverTimeInfo* other) {
  name_.Swap(&other->name_);
  desc_.Swap(&other->desc_);
  std::swap(id_, other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeliverTimeInfo::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeliverTimeInfo

// int32 id = 1;
void DeliverTimeInfo::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 DeliverTimeInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeliverTimeInfo.id)
  return id_;
}
void DeliverTimeInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ttmall.DeliverTimeInfo.id)
}

// string name = 2;
void DeliverTimeInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeliverTimeInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.DeliverTimeInfo.name)
  return name_.GetNoArena();
}
void DeliverTimeInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeliverTimeInfo.name)
}
#if LANG_CXX11
void DeliverTimeInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeliverTimeInfo.name)
}
#endif
void DeliverTimeInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeliverTimeInfo.name)
}
void DeliverTimeInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeliverTimeInfo.name)
}
::std::string* DeliverTimeInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeliverTimeInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeliverTimeInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.DeliverTimeInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeliverTimeInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeliverTimeInfo.name)
}

// string desc = 3;
void DeliverTimeInfo::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeliverTimeInfo::desc() const {
  // @@protoc_insertion_point(field_get:ttmall.DeliverTimeInfo.desc)
  return desc_.GetNoArena();
}
void DeliverTimeInfo::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeliverTimeInfo.desc)
}
#if LANG_CXX11
void DeliverTimeInfo::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeliverTimeInfo.desc)
}
#endif
void DeliverTimeInfo::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeliverTimeInfo.desc)
}
void DeliverTimeInfo::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeliverTimeInfo.desc)
}
::std::string* DeliverTimeInfo::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeliverTimeInfo.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeliverTimeInfo::release_desc() {
  // @@protoc_insertion_point(field_release:ttmall.DeliverTimeInfo.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeliverTimeInfo::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeliverTimeInfo.desc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfirmOrderRep::kItemsFieldNumber;
const int ConfirmOrderRep::kTotalFeeFieldNumber;
const int ConfirmOrderRep::kTotalNumFieldNumber;
const int ConfirmOrderRep::kCouponFeeFieldNumber;
const int ConfirmOrderRep::kDisFeeFieldNumber;
const int ConfirmOrderRep::kTransFeeFieldNumber;
const int ConfirmOrderRep::kPayFeeFieldNumber;
const int ConfirmOrderRep::kAddressFieldNumber;
const int ConfirmOrderRep::kCouponsFieldNumber;
const int ConfirmOrderRep::kTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfirmOrderRep::ConfirmOrderRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ConfirmOrderRep)
}
ConfirmOrderRep::ConfirmOrderRep(const ConfirmOrderRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      address_(from.address_),
      coupons_(from.coupons_),
      times_(from.times_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_fee_, &from.total_fee_,
    reinterpret_cast<char*>(&pay_fee_) -
    reinterpret_cast<char*>(&total_fee_) + sizeof(pay_fee_));
  // @@protoc_insertion_point(copy_constructor:ttmall.ConfirmOrderRep)
}

void ConfirmOrderRep::SharedCtor() {
  ::memset(&total_fee_, 0, reinterpret_cast<char*>(&pay_fee_) -
    reinterpret_cast<char*>(&total_fee_) + sizeof(pay_fee_));
  _cached_size_ = 0;
}

ConfirmOrderRep::~ConfirmOrderRep() {
  // @@protoc_insertion_point(destructor:ttmall.ConfirmOrderRep)
  SharedDtor();
}

void ConfirmOrderRep::SharedDtor() {
}

void ConfirmOrderRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmOrderRep::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfirmOrderRep& ConfirmOrderRep::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfirmOrderRep* ConfirmOrderRep::New(::google::protobuf::Arena* arena) const {
  ConfirmOrderRep* n = new ConfirmOrderRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfirmOrderRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ConfirmOrderRep)
  items_.Clear();
  address_.Clear();
  coupons_.Clear();
  times_.Clear();
  ::memset(&total_fee_, 0, reinterpret_cast<char*>(&pay_fee_) -
    reinterpret_cast<char*>(&total_fee_) + sizeof(pay_fee_));
}

bool ConfirmOrderRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ConfirmOrderRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.OrderItem items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_fee = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 coupon_fee = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coupon_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dis_fee = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dis_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 trans_fee = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trans_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pay_fee = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pay_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.AddressInfo address = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.CouponInfo coupons = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_coupons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.DeliverTimeInfo times = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_times()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ConfirmOrderRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ConfirmOrderRep)
  return false;
#undef DO_
}

void ConfirmOrderRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ConfirmOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.OrderItem items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // int32 total_fee = 2;
  if (this->total_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_fee(), output);
  }

  // int32 total_num = 3;
  if (this->total_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_num(), output);
  }

  // int32 coupon_fee = 4;
  if (this->coupon_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->coupon_fee(), output);
  }

  // int32 dis_fee = 5;
  if (this->dis_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dis_fee(), output);
  }

  // int32 trans_fee = 6;
  if (this->trans_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->trans_fee(), output);
  }

  // int32 pay_fee = 7;
  if (this->pay_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->pay_fee(), output);
  }

  // repeated .ttmall.AddressInfo address = 8;
  for (unsigned int i = 0, n = this->address_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->address(i), output);
  }

  // repeated .ttmall.CouponInfo coupons = 9;
  for (unsigned int i = 0, n = this->coupons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->coupons(i), output);
  }

  // repeated .ttmall.DeliverTimeInfo times = 10;
  for (unsigned int i = 0, n = this->times_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->times(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ConfirmOrderRep)
}

::google::protobuf::uint8* ConfirmOrderRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ConfirmOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.OrderItem items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // int32 total_fee = 2;
  if (this->total_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_fee(), target);
  }

  // int32 total_num = 3;
  if (this->total_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_num(), target);
  }

  // int32 coupon_fee = 4;
  if (this->coupon_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->coupon_fee(), target);
  }

  // int32 dis_fee = 5;
  if (this->dis_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dis_fee(), target);
  }

  // int32 trans_fee = 6;
  if (this->trans_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->trans_fee(), target);
  }

  // int32 pay_fee = 7;
  if (this->pay_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->pay_fee(), target);
  }

  // repeated .ttmall.AddressInfo address = 8;
  for (unsigned int i = 0, n = this->address_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->address(i), deterministic, target);
  }

  // repeated .ttmall.CouponInfo coupons = 9;
  for (unsigned int i = 0, n = this->coupons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->coupons(i), deterministic, target);
  }

  // repeated .ttmall.DeliverTimeInfo times = 10;
  for (unsigned int i = 0, n = this->times_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->times(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ConfirmOrderRep)
  return target;
}

size_t ConfirmOrderRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ConfirmOrderRep)
  size_t total_size = 0;

  // repeated .ttmall.OrderItem items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // repeated .ttmall.AddressInfo address = 8;
  {
    unsigned int count = this->address_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->address(i));
    }
  }

  // repeated .ttmall.CouponInfo coupons = 9;
  {
    unsigned int count = this->coupons_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coupons(i));
    }
  }

  // repeated .ttmall.DeliverTimeInfo times = 10;
  {
    unsigned int count = this->times_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->times(i));
    }
  }

  // int32 total_fee = 2;
  if (this->total_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_fee());
  }

  // int32 total_num = 3;
  if (this->total_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_num());
  }

  // int32 coupon_fee = 4;
  if (this->coupon_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->coupon_fee());
  }

  // int32 dis_fee = 5;
  if (this->dis_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dis_fee());
  }

  // int32 trans_fee = 6;
  if (this->trans_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trans_fee());
  }

  // int32 pay_fee = 7;
  if (this->pay_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pay_fee());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmOrderRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ConfirmOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfirmOrderRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfirmOrderRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ConfirmOrderRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ConfirmOrderRep)
    MergeFrom(*source);
  }
}

void ConfirmOrderRep::MergeFrom(const ConfirmOrderRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ConfirmOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  address_.MergeFrom(from.address_);
  coupons_.MergeFrom(from.coupons_);
  times_.MergeFrom(from.times_);
  if (from.total_fee() != 0) {
    set_total_fee(from.total_fee());
  }
  if (from.total_num() != 0) {
    set_total_num(from.total_num());
  }
  if (from.coupon_fee() != 0) {
    set_coupon_fee(from.coupon_fee());
  }
  if (from.dis_fee() != 0) {
    set_dis_fee(from.dis_fee());
  }
  if (from.trans_fee() != 0) {
    set_trans_fee(from.trans_fee());
  }
  if (from.pay_fee() != 0) {
    set_pay_fee(from.pay_fee());
  }
}

void ConfirmOrderRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ConfirmOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmOrderRep::CopyFrom(const ConfirmOrderRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ConfirmOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmOrderRep::IsInitialized() const {
  return true;
}

void ConfirmOrderRep::Swap(ConfirmOrderRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfirmOrderRep::InternalSwap(ConfirmOrderRep* other) {
  items_.InternalSwap(&other->items_);
  address_.InternalSwap(&other->address_);
  coupons_.InternalSwap(&other->coupons_);
  times_.InternalSwap(&other->times_);
  std::swap(total_fee_, other->total_fee_);
  std::swap(total_num_, other->total_num_);
  std::swap(coupon_fee_, other->coupon_fee_);
  std::swap(dis_fee_, other->dis_fee_);
  std::swap(trans_fee_, other->trans_fee_);
  std::swap(pay_fee_, other->pay_fee_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfirmOrderRep::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfirmOrderRep

// repeated .ttmall.OrderItem items = 1;
int ConfirmOrderRep::items_size() const {
  return items_.size();
}
void ConfirmOrderRep::clear_items() {
  items_.Clear();
}
const ::ttmall::OrderItem& ConfirmOrderRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.items)
  return items_.Get(index);
}
::ttmall::OrderItem* ConfirmOrderRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderRep.items)
  return items_.Mutable(index);
}
::ttmall::OrderItem* ConfirmOrderRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
ConfirmOrderRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
ConfirmOrderRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderRep.items)
  return items_;
}

// int32 total_fee = 2;
void ConfirmOrderRep::clear_total_fee() {
  total_fee_ = 0;
}
::google::protobuf::int32 ConfirmOrderRep::total_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.total_fee)
  return total_fee_;
}
void ConfirmOrderRep::set_total_fee(::google::protobuf::int32 value) {
  
  total_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.total_fee)
}

// int32 total_num = 3;
void ConfirmOrderRep::clear_total_num() {
  total_num_ = 0;
}
::google::protobuf::int32 ConfirmOrderRep::total_num() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.total_num)
  return total_num_;
}
void ConfirmOrderRep::set_total_num(::google::protobuf::int32 value) {
  
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.total_num)
}

// int32 coupon_fee = 4;
void ConfirmOrderRep::clear_coupon_fee() {
  coupon_fee_ = 0;
}
::google::protobuf::int32 ConfirmOrderRep::coupon_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.coupon_fee)
  return coupon_fee_;
}
void ConfirmOrderRep::set_coupon_fee(::google::protobuf::int32 value) {
  
  coupon_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.coupon_fee)
}

// int32 dis_fee = 5;
void ConfirmOrderRep::clear_dis_fee() {
  dis_fee_ = 0;
}
::google::protobuf::int32 ConfirmOrderRep::dis_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.dis_fee)
  return dis_fee_;
}
void ConfirmOrderRep::set_dis_fee(::google::protobuf::int32 value) {
  
  dis_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.dis_fee)
}

// int32 trans_fee = 6;
void ConfirmOrderRep::clear_trans_fee() {
  trans_fee_ = 0;
}
::google::protobuf::int32 ConfirmOrderRep::trans_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.trans_fee)
  return trans_fee_;
}
void ConfirmOrderRep::set_trans_fee(::google::protobuf::int32 value) {
  
  trans_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.trans_fee)
}

// int32 pay_fee = 7;
void ConfirmOrderRep::clear_pay_fee() {
  pay_fee_ = 0;
}
::google::protobuf::int32 ConfirmOrderRep::pay_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.pay_fee)
  return pay_fee_;
}
void ConfirmOrderRep::set_pay_fee(::google::protobuf::int32 value) {
  
  pay_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.pay_fee)
}

// repeated .ttmall.AddressInfo address = 8;
int ConfirmOrderRep::address_size() const {
  return address_.size();
}
void ConfirmOrderRep::clear_address() {
  address_.Clear();
}
const ::ttmall::AddressInfo& ConfirmOrderRep::address(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.address)
  return address_.Get(index);
}
::ttmall::AddressInfo* ConfirmOrderRep::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderRep.address)
  return address_.Mutable(index);
}
::ttmall::AddressInfo* ConfirmOrderRep::add_address() {
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderRep.address)
  return address_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
ConfirmOrderRep::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderRep.address)
  return &address_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
ConfirmOrderRep::address() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderRep.address)
  return address_;
}

// repeated .ttmall.CouponInfo coupons = 9;
int ConfirmOrderRep::coupons_size() const {
  return coupons_.size();
}
void ConfirmOrderRep::clear_coupons() {
  coupons_.Clear();
}
const ::ttmall::CouponInfo& ConfirmOrderRep::coupons(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.coupons)
  return coupons_.Get(index);
}
::ttmall::CouponInfo* ConfirmOrderRep::mutable_coupons(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderRep.coupons)
  return coupons_.Mutable(index);
}
::ttmall::CouponInfo* ConfirmOrderRep::add_coupons() {
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderRep.coupons)
  return coupons_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >*
ConfirmOrderRep::mutable_coupons() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderRep.coupons)
  return &coupons_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >&
ConfirmOrderRep::coupons() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderRep.coupons)
  return coupons_;
}

// repeated .ttmall.DeliverTimeInfo times = 10;
int ConfirmOrderRep::times_size() const {
  return times_.size();
}
void ConfirmOrderRep::clear_times() {
  times_.Clear();
}
const ::ttmall::DeliverTimeInfo& ConfirmOrderRep::times(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.times)
  return times_.Get(index);
}
::ttmall::DeliverTimeInfo* ConfirmOrderRep::mutable_times(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderRep.times)
  return times_.Mutable(index);
}
::ttmall::DeliverTimeInfo* ConfirmOrderRep::add_times() {
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderRep.times)
  return times_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::DeliverTimeInfo >*
ConfirmOrderRep::mutable_times() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderRep.times)
  return &times_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::DeliverTimeInfo >&
ConfirmOrderRep::times() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderRep.times)
  return times_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PayOrderReq::kTokenFieldNumber;
const int PayOrderReq::kOrderIdFieldNumber;
const int PayOrderReq::kPayTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PayOrderReq::PayOrderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.PayOrderReq)
}
PayOrderReq::PayOrderReq(const PayOrderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pay_type_(from.pay_type_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_id().size() > 0) {
    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.PayOrderReq)
}

void PayOrderReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PayOrderReq::~PayOrderReq() {
  // @@protoc_insertion_point(destructor:ttmall.PayOrderReq)
  SharedDtor();
}

void PayOrderReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PayOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PayOrderReq::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PayOrderReq& PayOrderReq::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

PayOrderReq* PayOrderReq::New(::google::protobuf::Arena* arena) const {
  PayOrderReq* n = new PayOrderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PayOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.PayOrderReq)
  pay_type_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PayOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.PayOrderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PayOrderReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_id().data(), this->order_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PayOrderReq.order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.PayType pay_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_pay_type(static_cast< ::ttmall::PayType >(value));
          }
          input->PopLimit(limit);
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_pay_type(static_cast< ::ttmall::PayType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.PayOrderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.PayOrderReq)
  return false;
#undef DO_
}

void PayOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.PayOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PayOrderReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PayOrderReq.order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->order_id(), output);
  }

  // repeated .ttmall.PayType pay_type = 3;
  if (this->pay_type_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_pay_type_cached_byte_size_);
  }
  for (int i = 0, n = this->pay_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->pay_type(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.PayOrderReq)
}

::google::protobuf::uint8* PayOrderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.PayOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PayOrderReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PayOrderReq.order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->order_id(), target);
  }

  // repeated .ttmall.PayType pay_type = 3;
  if (this->pay_type_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _pay_type_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->pay_type_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.PayOrderReq)
  return target;
}

size_t PayOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.PayOrderReq)
  size_t total_size = 0;

  // repeated .ttmall.PayType pay_type = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->pay_type_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->pay_type(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pay_type_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PayOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.PayOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PayOrderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PayOrderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.PayOrderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.PayOrderReq)
    MergeFrom(*source);
  }
}

void PayOrderReq::MergeFrom(const PayOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.PayOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pay_type_.MergeFrom(from.pay_type_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.order_id().size() > 0) {

    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
}

void PayOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.PayOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayOrderReq::CopyFrom(const PayOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.PayOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayOrderReq::IsInitialized() const {
  return true;
}

void PayOrderReq::Swap(PayOrderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PayOrderReq::InternalSwap(PayOrderReq* other) {
  pay_type_.InternalSwap(&other->pay_type_);
  token_.Swap(&other->token_);
  order_id_.Swap(&other->order_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PayOrderReq::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PayOrderReq

// string token = 1;
void PayOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PayOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderReq.token)
  return token_.GetNoArena();
}
void PayOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderReq.token)
}
#if LANG_CXX11
void PayOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PayOrderReq.token)
}
#endif
void PayOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PayOrderReq.token)
}
void PayOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PayOrderReq.token)
}
::std::string* PayOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PayOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PayOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.PayOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PayOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PayOrderReq.token)
}

// string order_id = 2;
void PayOrderReq::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PayOrderReq::order_id() const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderReq.order_id)
  return order_id_.GetNoArena();
}
void PayOrderReq::set_order_id(const ::std::string& value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderReq.order_id)
}
#if LANG_CXX11
void PayOrderReq::set_order_id(::std::string&& value) {
  
  order_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PayOrderReq.order_id)
}
#endif
void PayOrderReq::set_order_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PayOrderReq.order_id)
}
void PayOrderReq::set_order_id(const char* value, size_t size) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PayOrderReq.order_id)
}
::std::string* PayOrderReq::mutable_order_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PayOrderReq.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PayOrderReq::release_order_id() {
  // @@protoc_insertion_point(field_release:ttmall.PayOrderReq.order_id)
  
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PayOrderReq::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    
  } else {
    
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PayOrderReq.order_id)
}

// repeated .ttmall.PayType pay_type = 3;
int PayOrderReq::pay_type_size() const {
  return pay_type_.size();
}
void PayOrderReq::clear_pay_type() {
  pay_type_.Clear();
}
::ttmall::PayType PayOrderReq::pay_type(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderReq.pay_type)
  return static_cast< ::ttmall::PayType >(pay_type_.Get(index));
}
void PayOrderReq::set_pay_type(int index, ::ttmall::PayType value) {
  pay_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderReq.pay_type)
}
void PayOrderReq::add_pay_type(::ttmall::PayType value) {
  pay_type_.Add(value);
  // @@protoc_insertion_point(field_add:ttmall.PayOrderReq.pay_type)
}
const ::google::protobuf::RepeatedField<int>&
PayOrderReq::pay_type() const {
  // @@protoc_insertion_point(field_list:ttmall.PayOrderReq.pay_type)
  return pay_type_;
}
::google::protobuf::RepeatedField<int>*
PayOrderReq::mutable_pay_type() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.PayOrderReq.pay_type)
  return &pay_type_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PayOrderRep::kWxpayFieldNumber;
const int PayOrderRep::kAlipayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PayOrderRep::PayOrderRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.PayOrderRep)
}
PayOrderRep::PayOrderRep(const PayOrderRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wxpay_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wxpay().size() > 0) {
    wxpay_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wxpay_);
  }
  alipay_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alipay().size() > 0) {
    alipay_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.PayOrderRep)
}

void PayOrderRep::SharedCtor() {
  wxpay_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PayOrderRep::~PayOrderRep() {
  // @@protoc_insertion_point(destructor:ttmall.PayOrderRep)
  SharedDtor();
}

void PayOrderRep::SharedDtor() {
  wxpay_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PayOrderRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PayOrderRep::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PayOrderRep& PayOrderRep::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

PayOrderRep* PayOrderRep::New(::google::protobuf::Arena* arena) const {
  PayOrderRep* n = new PayOrderRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PayOrderRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.PayOrderRep)
  wxpay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PayOrderRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.PayOrderRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string wxpay = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wxpay()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wxpay().data(), this->wxpay().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PayOrderRep.wxpay"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alipay = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alipay().data(), this->alipay().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PayOrderRep.alipay"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.PayOrderRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.PayOrderRep)
  return false;
#undef DO_
}

void PayOrderRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.PayOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string wxpay = 1;
  if (this->wxpay().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wxpay().data(), this->wxpay().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PayOrderRep.wxpay");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->wxpay(), output);
  }

  // string alipay = 2;
  if (this->alipay().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alipay().data(), this->alipay().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PayOrderRep.alipay");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alipay(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.PayOrderRep)
}

::google::protobuf::uint8* PayOrderRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.PayOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string wxpay = 1;
  if (this->wxpay().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wxpay().data(), this->wxpay().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PayOrderRep.wxpay");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->wxpay(), target);
  }

  // string alipay = 2;
  if (this->alipay().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alipay().data(), this->alipay().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PayOrderRep.alipay");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alipay(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.PayOrderRep)
  return target;
}

size_t PayOrderRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.PayOrderRep)
  size_t total_size = 0;

  // string wxpay = 1;
  if (this->wxpay().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wxpay());
  }

  // string alipay = 2;
  if (this->alipay().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alipay());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PayOrderRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.PayOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  const PayOrderRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PayOrderRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.PayOrderRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.PayOrderRep)
    MergeFrom(*source);
  }
}

void PayOrderRep::MergeFrom(const PayOrderRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.PayOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wxpay().size() > 0) {

    wxpay_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wxpay_);
  }
  if (from.alipay().size() > 0) {

    alipay_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_);
  }
}

void PayOrderRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.PayOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayOrderRep::CopyFrom(const PayOrderRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.PayOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayOrderRep::IsInitialized() const {
  return true;
}

void PayOrderRep::Swap(PayOrderRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PayOrderRep::InternalSwap(PayOrderRep* other) {
  wxpay_.Swap(&other->wxpay_);
  alipay_.Swap(&other->alipay_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PayOrderRep::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PayOrderRep

// string wxpay = 1;
void PayOrderRep::clear_wxpay() {
  wxpay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PayOrderRep::wxpay() const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderRep.wxpay)
  return wxpay_.GetNoArena();
}
void PayOrderRep::set_wxpay(const ::std::string& value) {
  
  wxpay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderRep.wxpay)
}
#if LANG_CXX11
void PayOrderRep::set_wxpay(::std::string&& value) {
  
  wxpay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PayOrderRep.wxpay)
}
#endif
void PayOrderRep::set_wxpay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  wxpay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PayOrderRep.wxpay)
}
void PayOrderRep::set_wxpay(const char* value, size_t size) {
  
  wxpay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PayOrderRep.wxpay)
}
::std::string* PayOrderRep::mutable_wxpay() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PayOrderRep.wxpay)
  return wxpay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PayOrderRep::release_wxpay() {
  // @@protoc_insertion_point(field_release:ttmall.PayOrderRep.wxpay)
  
  return wxpay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PayOrderRep::set_allocated_wxpay(::std::string* wxpay) {
  if (wxpay != NULL) {
    
  } else {
    
  }
  wxpay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxpay);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PayOrderRep.wxpay)
}

// string alipay = 2;
void PayOrderRep::clear_alipay() {
  alipay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PayOrderRep::alipay() const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderRep.alipay)
  return alipay_.GetNoArena();
}
void PayOrderRep::set_alipay(const ::std::string& value) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderRep.alipay)
}
#if LANG_CXX11
void PayOrderRep::set_alipay(::std::string&& value) {
  
  alipay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PayOrderRep.alipay)
}
#endif
void PayOrderRep::set_alipay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PayOrderRep.alipay)
}
void PayOrderRep::set_alipay(const char* value, size_t size) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PayOrderRep.alipay)
}
::std::string* PayOrderRep::mutable_alipay() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PayOrderRep.alipay)
  return alipay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PayOrderRep::release_alipay() {
  // @@protoc_insertion_point(field_release:ttmall.PayOrderRep.alipay)
  
  return alipay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PayOrderRep::set_allocated_alipay(::std::string* alipay) {
  if (alipay != NULL) {
    
  } else {
    
  }
  alipay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PayOrderRep.alipay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ttmall

// @@protoc_insertion_point(global_scope)
