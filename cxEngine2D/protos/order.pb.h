// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#ifndef PROTOBUF_order_2eproto__INCLUDED
#define PROTOBUF_order_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "public.pb.h"
// @@protoc_insertion_point(includes)
namespace ttmall {
class AddressInfo;
class AddressInfoDefaultTypeInternal;
extern AddressInfoDefaultTypeInternal _AddressInfo_default_instance_;
class AttrGroup;
class AttrGroupDefaultTypeInternal;
extern AttrGroupDefaultTypeInternal _AttrGroup_default_instance_;
class AttrInfo;
class AttrInfoDefaultTypeInternal;
extern AttrInfoDefaultTypeInternal _AttrInfo_default_instance_;
class BrandInfo;
class BrandInfoDefaultTypeInternal;
extern BrandInfoDefaultTypeInternal _BrandInfo_default_instance_;
class CarInfo;
class CarInfoDefaultTypeInternal;
extern CarInfoDefaultTypeInternal _CarInfo_default_instance_;
class CheckUpdateRep;
class CheckUpdateRepDefaultTypeInternal;
extern CheckUpdateRepDefaultTypeInternal _CheckUpdateRep_default_instance_;
class CheckUpdateReq;
class CheckUpdateReqDefaultTypeInternal;
extern CheckUpdateReqDefaultTypeInternal _CheckUpdateReq_default_instance_;
class ConfirmOrderRep;
class ConfirmOrderRepDefaultTypeInternal;
extern ConfirmOrderRepDefaultTypeInternal _ConfirmOrderRep_default_instance_;
class ConfirmOrderReq;
class ConfirmOrderReqDefaultTypeInternal;
extern ConfirmOrderReqDefaultTypeInternal _ConfirmOrderReq_default_instance_;
class CoordInfo;
class CoordInfoDefaultTypeInternal;
extern CoordInfoDefaultTypeInternal _CoordInfo_default_instance_;
class CouponInfo;
class CouponInfoDefaultTypeInternal;
extern CouponInfoDefaultTypeInternal _CouponInfo_default_instance_;
class DeleteMessageRep;
class DeleteMessageRepDefaultTypeInternal;
extern DeleteMessageRepDefaultTypeInternal _DeleteMessageRep_default_instance_;
class DeleteMessageReq;
class DeleteMessageReqDefaultTypeInternal;
extern DeleteMessageReqDefaultTypeInternal _DeleteMessageReq_default_instance_;
class DeliverTimeInfo;
class DeliverTimeInfoDefaultTypeInternal;
extern DeliverTimeInfoDefaultTypeInternal _DeliverTimeInfo_default_instance_;
class ExtInfo;
class ExtInfoDefaultTypeInternal;
extern ExtInfoDefaultTypeInternal _ExtInfo_default_instance_;
class GetNewMessageRep;
class GetNewMessageRepDefaultTypeInternal;
extern GetNewMessageRepDefaultTypeInternal _GetNewMessageRep_default_instance_;
class GetNewMessageReq;
class GetNewMessageReqDefaultTypeInternal;
extern GetNewMessageReqDefaultTypeInternal _GetNewMessageReq_default_instance_;
class GoodsInfo;
class GoodsInfoDefaultTypeInternal;
extern GoodsInfoDefaultTypeInternal _GoodsInfo_default_instance_;
class GoodsInfo_AttrsEntry;
class GoodsInfo_AttrsEntryDefaultTypeInternal;
extern GoodsInfo_AttrsEntryDefaultTypeInternal _GoodsInfo_AttrsEntry_default_instance_;
class GoodsInfo_MapsEntry;
class GoodsInfo_MapsEntryDefaultTypeInternal;
extern GoodsInfo_MapsEntryDefaultTypeInternal _GoodsInfo_MapsEntry_default_instance_;
class GoodsInfo_PricesEntry;
class GoodsInfo_PricesEntryDefaultTypeInternal;
extern GoodsInfo_PricesEntryDefaultTypeInternal _GoodsInfo_PricesEntry_default_instance_;
class ImageInfo;
class ImageInfoDefaultTypeInternal;
extern ImageInfoDefaultTypeInternal _ImageInfo_default_instance_;
class IndexAd;
class IndexAdDefaultTypeInternal;
extern IndexAdDefaultTypeInternal _IndexAd_default_instance_;
class IndexAdGroup;
class IndexAdGroupDefaultTypeInternal;
extern IndexAdGroupDefaultTypeInternal _IndexAdGroup_default_instance_;
class IndexAdInfoRep;
class IndexAdInfoRepDefaultTypeInternal;
extern IndexAdInfoRepDefaultTypeInternal _IndexAdInfoRep_default_instance_;
class IndexAdInfoReq;
class IndexAdInfoReqDefaultTypeInternal;
extern IndexAdInfoReqDefaultTypeInternal _IndexAdInfoReq_default_instance_;
class IndexRep;
class IndexRepDefaultTypeInternal;
extern IndexRepDefaultTypeInternal _IndexRep_default_instance_;
class IndexRep_GroupsEntry;
class IndexRep_GroupsEntryDefaultTypeInternal;
extern IndexRep_GroupsEntryDefaultTypeInternal _IndexRep_GroupsEntry_default_instance_;
class IndexReq;
class IndexReqDefaultTypeInternal;
extern IndexReqDefaultTypeInternal _IndexReq_default_instance_;
class IndexType;
class IndexTypeDefaultTypeInternal;
extern IndexTypeDefaultTypeInternal _IndexType_default_instance_;
class ListCarRep;
class ListCarRepDefaultTypeInternal;
extern ListCarRepDefaultTypeInternal _ListCarRep_default_instance_;
class ListCarReq;
class ListCarReqDefaultTypeInternal;
extern ListCarReqDefaultTypeInternal _ListCarReq_default_instance_;
class ListMessageRep;
class ListMessageRepDefaultTypeInternal;
extern ListMessageRepDefaultTypeInternal _ListMessageRep_default_instance_;
class ListMessageReq;
class ListMessageReqDefaultTypeInternal;
extern ListMessageReqDefaultTypeInternal _ListMessageReq_default_instance_;
class ListNoticeRep;
class ListNoticeRepDefaultTypeInternal;
extern ListNoticeRepDefaultTypeInternal _ListNoticeRep_default_instance_;
class ListNoticeReq;
class ListNoticeReqDefaultTypeInternal;
extern ListNoticeReqDefaultTypeInternal _ListNoticeReq_default_instance_;
class ListRegionsRep;
class ListRegionsRepDefaultTypeInternal;
extern ListRegionsRepDefaultTypeInternal _ListRegionsRep_default_instance_;
class ListRegionsReq;
class ListRegionsReqDefaultTypeInternal;
extern ListRegionsReqDefaultTypeInternal _ListRegionsReq_default_instance_;
class ListUserTypeRep;
class ListUserTypeRepDefaultTypeInternal;
extern ListUserTypeRepDefaultTypeInternal _ListUserTypeRep_default_instance_;
class ListUserTypeReq;
class ListUserTypeReqDefaultTypeInternal;
extern ListUserTypeReqDefaultTypeInternal _ListUserTypeReq_default_instance_;
class MapInfo;
class MapInfoDefaultTypeInternal;
extern MapInfoDefaultTypeInternal _MapInfo_default_instance_;
class MessageInfo;
class MessageInfoDefaultTypeInternal;
extern MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;
class NoticeInfo;
class NoticeInfoDefaultTypeInternal;
extern NoticeInfoDefaultTypeInternal _NoticeInfo_default_instance_;
class OrderInfo;
class OrderInfoDefaultTypeInternal;
extern OrderInfoDefaultTypeInternal _OrderInfo_default_instance_;
class OrderItem;
class OrderItemDefaultTypeInternal;
extern OrderItemDefaultTypeInternal _OrderItem_default_instance_;
class PayOrderRep;
class PayOrderRepDefaultTypeInternal;
extern PayOrderRepDefaultTypeInternal _PayOrderRep_default_instance_;
class PayOrderReq;
class PayOrderReqDefaultTypeInternal;
extern PayOrderReqDefaultTypeInternal _PayOrderReq_default_instance_;
class PriceInfo;
class PriceInfoDefaultTypeInternal;
extern PriceInfoDefaultTypeInternal _PriceInfo_default_instance_;
class PriceRange;
class PriceRangeDefaultTypeInternal;
extern PriceRangeDefaultTypeInternal _PriceRange_default_instance_;
class PublicInfoRep;
class PublicInfoRepDefaultTypeInternal;
extern PublicInfoRepDefaultTypeInternal _PublicInfoRep_default_instance_;
class PublicInfoReq;
class PublicInfoReqDefaultTypeInternal;
extern PublicInfoReqDefaultTypeInternal _PublicInfoReq_default_instance_;
class RegionInfo;
class RegionInfoDefaultTypeInternal;
extern RegionInfoDefaultTypeInternal _RegionInfo_default_instance_;
class SendAuthRep;
class SendAuthRepDefaultTypeInternal;
extern SendAuthRepDefaultTypeInternal _SendAuthRep_default_instance_;
class SendAuthReq;
class SendAuthReqDefaultTypeInternal;
extern SendAuthReqDefaultTypeInternal _SendAuthReq_default_instance_;
class SetDeviceIdRep;
class SetDeviceIdRepDefaultTypeInternal;
extern SetDeviceIdRepDefaultTypeInternal _SetDeviceIdRep_default_instance_;
class SetDeviceIdReq;
class SetDeviceIdReqDefaultTypeInternal;
extern SetDeviceIdReqDefaultTypeInternal _SetDeviceIdReq_default_instance_;
class SetInfo;
class SetInfoDefaultTypeInternal;
extern SetInfoDefaultTypeInternal _SetInfo_default_instance_;
class SetMessageReadRep;
class SetMessageReadRepDefaultTypeInternal;
extern SetMessageReadRepDefaultTypeInternal _SetMessageReadRep_default_instance_;
class SetMessageReadReq;
class SetMessageReadReqDefaultTypeInternal;
extern SetMessageReadReqDefaultTypeInternal _SetMessageReadReq_default_instance_;
class SubmitOrderRep;
class SubmitOrderRepDefaultTypeInternal;
extern SubmitOrderRepDefaultTypeInternal _SubmitOrderRep_default_instance_;
class SubmitOrderReq;
class SubmitOrderReqDefaultTypeInternal;
extern SubmitOrderReqDefaultTypeInternal _SubmitOrderReq_default_instance_;
class TypeInfo;
class TypeInfoDefaultTypeInternal;
extern TypeInfoDefaultTypeInternal _TypeInfo_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserType;
class UserTypeDefaultTypeInternal;
extern UserTypeDefaultTypeInternal _UserType_default_instance_;
class WareInfo;
class WareInfoDefaultTypeInternal;
extern WareInfoDefaultTypeInternal _WareInfo_default_instance_;
}  // namespace ttmall

namespace ttmall {

namespace protobuf_order_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_order_2eproto

enum PaySelect {
  SELECT_NONE = 0,
  SELECT_ONLINE = 1,
  SELECT_OFFLINE = 2,
  PaySelect_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PaySelect_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PaySelect_IsValid(int value);
const PaySelect PaySelect_MIN = SELECT_NONE;
const PaySelect PaySelect_MAX = SELECT_OFFLINE;
const int PaySelect_ARRAYSIZE = PaySelect_MAX + 1;

const ::google::protobuf::EnumDescriptor* PaySelect_descriptor();
inline const ::std::string& PaySelect_Name(PaySelect value) {
  return ::google::protobuf::internal::NameOfEnum(
    PaySelect_descriptor(), value);
}
inline bool PaySelect_Parse(
    const ::std::string& name, PaySelect* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PaySelect>(
    PaySelect_descriptor(), name, value);
}
enum PayType {
  UNKNOW = 0,
  WEIXIN = 1,
  ALIPAY = 2,
  UNION_PAY = 3,
  BALANCE = 4,
  ADMIN_PAY = 5,
  OFFLINE_PAY = 6,
  PayType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PayType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PayType_IsValid(int value);
const PayType PayType_MIN = UNKNOW;
const PayType PayType_MAX = OFFLINE_PAY;
const int PayType_ARRAYSIZE = PayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PayType_descriptor();
inline const ::std::string& PayType_Name(PayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PayType_descriptor(), value);
}
inline bool PayType_Parse(
    const ::std::string& name, PayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PayType>(
    PayType_descriptor(), name, value);
}
enum OrderState {
  ALL_STATE = 0,
  WAIT_PAY = 1,
  PAY_OK = 2,
  WAIT_DELIVERY = 3,
  TRANSING = 4,
  FINISHED = 5,
  LOADING = 6,
  REFUNDING = 7,
  CLOSED = 8,
  OrderState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrderState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrderState_IsValid(int value);
const OrderState OrderState_MIN = ALL_STATE;
const OrderState OrderState_MAX = CLOSED;
const int OrderState_ARRAYSIZE = OrderState_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderState_descriptor();
inline const ::std::string& OrderState_Name(OrderState value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderState_descriptor(), value);
}
inline bool OrderState_Parse(
    const ::std::string& name, OrderState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderState>(
    OrderState_descriptor(), name, value);
}
// ===================================================================

class OrderItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.OrderItem) */ {
 public:
  OrderItem();
  virtual ~OrderItem();

  OrderItem(const OrderItem& from);

  inline OrderItem& operator=(const OrderItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderItem& default_instance();

  static inline const OrderItem* internal_default_instance() {
    return reinterpret_cast<const OrderItem*>(
               &_OrderItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(OrderItem* other);

  // implements Message ----------------------------------------------

  inline OrderItem* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderItem& from);
  void MergeFrom(const OrderItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key_id = 2;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 2;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const char* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // .ttmall.GoodsInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::GoodsInfo& info() const;
  ::ttmall::GoodsInfo* mutable_info();
  ::ttmall::GoodsInfo* release_info();
  void set_allocated_info(::ttmall::GoodsInfo* info);

  // int32 key_count = 3;
  void clear_key_count();
  static const int kKeyCountFieldNumber = 3;
  ::google::protobuf::int32 key_count() const;
  void set_key_count(::google::protobuf::int32 value);

  // int32 key_fee = 4;
  void clear_key_fee();
  static const int kKeyFeeFieldNumber = 4;
  ::google::protobuf::int32 key_fee() const;
  void set_key_fee(::google::protobuf::int32 value);

  // int32 dis_fee = 5;
  void clear_dis_fee();
  static const int kDisFeeFieldNumber = 5;
  ::google::protobuf::int32 dis_fee() const;
  void set_dis_fee(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.OrderItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::ttmall::GoodsInfo* info_;
  ::google::protobuf::int32 key_count_;
  ::google::protobuf::int32 key_fee_;
  ::google::protobuf::int32 dis_fee_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.OrderInfo) */ {
 public:
  OrderInfo();
  virtual ~OrderInfo();

  OrderInfo(const OrderInfo& from);

  inline OrderInfo& operator=(const OrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderInfo& default_instance();

  static inline const OrderInfo* internal_default_instance() {
    return reinterpret_cast<const OrderInfo*>(
               &_OrderInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(OrderInfo* other);

  // implements Message ----------------------------------------------

  inline OrderInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderInfo& from);
  void MergeFrom(const OrderInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.OrderItem items = 3;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 3;
  const ::ttmall::OrderItem& items(int index) const;
  ::ttmall::OrderItem* mutable_items(int index);
  ::ttmall::OrderItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
      items() const;

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string mark = 18;
  void clear_mark();
  static const int kMarkFieldNumber = 18;
  const ::std::string& mark() const;
  void set_mark(const ::std::string& value);
  #if LANG_CXX11
  void set_mark(::std::string&& value);
  #endif
  void set_mark(const char* value);
  void set_mark(const char* value, size_t size);
  ::std::string* mutable_mark();
  ::std::string* release_mark();
  void set_allocated_mark(::std::string* mark);

  // .ttmall.DeliverTimeInfo deliver_time = 17;
  bool has_deliver_time() const;
  void clear_deliver_time();
  static const int kDeliverTimeFieldNumber = 17;
  const ::ttmall::DeliverTimeInfo& deliver_time() const;
  ::ttmall::DeliverTimeInfo* mutable_deliver_time();
  ::ttmall::DeliverTimeInfo* release_deliver_time();
  void set_allocated_deliver_time(::ttmall::DeliverTimeInfo* deliver_time);

  // .ttmall.CouponInfo Coupon = 19;
  bool has_coupon() const;
  void clear_coupon();
  static const int kCouponFieldNumber = 19;
  const ::ttmall::CouponInfo& coupon() const;
  ::ttmall::CouponInfo* mutable_coupon();
  ::ttmall::CouponInfo* release_coupon();
  void set_allocated_coupon(::ttmall::CouponInfo* coupon);

  // .ttmall.AddressInfo Address = 20;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 20;
  const ::ttmall::AddressInfo& address() const;
  ::ttmall::AddressInfo* mutable_address();
  ::ttmall::AddressInfo* release_address();
  void set_allocated_address(::ttmall::AddressInfo* address);

  // .ttmall.OrderState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::ttmall::OrderState state() const;
  void set_state(::ttmall::OrderState value);

  // int32 total_fee = 4;
  void clear_total_fee();
  static const int kTotalFeeFieldNumber = 4;
  ::google::protobuf::int32 total_fee() const;
  void set_total_fee(::google::protobuf::int32 value);

  // int32 total_num = 5;
  void clear_total_num();
  static const int kTotalNumFieldNumber = 5;
  ::google::protobuf::int32 total_num() const;
  void set_total_num(::google::protobuf::int32 value);

  // .ttmall.PayType pay_type = 6;
  void clear_pay_type();
  static const int kPayTypeFieldNumber = 6;
  ::ttmall::PayType pay_type() const;
  void set_pay_type(::ttmall::PayType value);

  // int64 pay_time = 8;
  void clear_pay_time();
  static const int kPayTimeFieldNumber = 8;
  ::google::protobuf::int64 pay_time() const;
  void set_pay_time(::google::protobuf::int64 value);

  // int64 gen_time = 9;
  void clear_gen_time();
  static const int kGenTimeFieldNumber = 9;
  ::google::protobuf::int64 gen_time() const;
  void set_gen_time(::google::protobuf::int64 value);

  // .ttmall.PaySelect pay_select = 7;
  void clear_pay_select();
  static const int kPaySelectFieldNumber = 7;
  ::ttmall::PaySelect pay_select() const;
  void set_pay_select(::ttmall::PaySelect value);

  // int32 balance_fee = 11;
  void clear_balance_fee();
  static const int kBalanceFeeFieldNumber = 11;
  ::google::protobuf::int32 balance_fee() const;
  void set_balance_fee(::google::protobuf::int32 value);

  // int64 refund_time = 10;
  void clear_refund_time();
  static const int kRefundTimeFieldNumber = 10;
  ::google::protobuf::int64 refund_time() const;
  void set_refund_time(::google::protobuf::int64 value);

  // int32 trans_fee = 12;
  void clear_trans_fee();
  static const int kTransFeeFieldNumber = 12;
  ::google::protobuf::int32 trans_fee() const;
  void set_trans_fee(::google::protobuf::int32 value);

  // int32 dis_free = 13;
  void clear_dis_free();
  static const int kDisFreeFieldNumber = 13;
  ::google::protobuf::int32 dis_free() const;
  void set_dis_free(::google::protobuf::int32 value);

  // int32 coupon_fee = 14;
  void clear_coupon_fee();
  static const int kCouponFeeFieldNumber = 14;
  ::google::protobuf::int32 coupon_fee() const;
  void set_coupon_fee(::google::protobuf::int32 value);

  // int32 pay_fee = 15;
  void clear_pay_fee();
  static const int kPayFeeFieldNumber = 15;
  ::google::protobuf::int32 pay_fee() const;
  void set_pay_fee(::google::protobuf::int32 value);

  // int32 refund_fee = 16;
  void clear_refund_fee();
  static const int kRefundFeeFieldNumber = 16;
  ::google::protobuf::int32 refund_fee() const;
  void set_refund_fee(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.OrderInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem > items_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr mark_;
  ::ttmall::DeliverTimeInfo* deliver_time_;
  ::ttmall::CouponInfo* coupon_;
  ::ttmall::AddressInfo* address_;
  int state_;
  ::google::protobuf::int32 total_fee_;
  ::google::protobuf::int32 total_num_;
  int pay_type_;
  ::google::protobuf::int64 pay_time_;
  ::google::protobuf::int64 gen_time_;
  int pay_select_;
  ::google::protobuf::int32 balance_fee_;
  ::google::protobuf::int64 refund_time_;
  ::google::protobuf::int32 trans_fee_;
  ::google::protobuf::int32 dis_free_;
  ::google::protobuf::int32 coupon_fee_;
  ::google::protobuf::int32 pay_fee_;
  ::google::protobuf::int32 refund_fee_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubmitOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.SubmitOrderReq) */ {
 public:
  SubmitOrderReq();
  virtual ~SubmitOrderReq();

  SubmitOrderReq(const SubmitOrderReq& from);

  inline SubmitOrderReq& operator=(const SubmitOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitOrderReq& default_instance();

  static inline const SubmitOrderReq* internal_default_instance() {
    return reinterpret_cast<const SubmitOrderReq*>(
               &_SubmitOrderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SubmitOrderReq* other);

  // implements Message ----------------------------------------------

  inline SubmitOrderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SubmitOrderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubmitOrderReq& from);
  void MergeFrom(const SubmitOrderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubmitOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cart_ids = 2;
  int cart_ids_size() const;
  void clear_cart_ids();
  static const int kCartIdsFieldNumber = 2;
  const ::std::string& cart_ids(int index) const;
  ::std::string* mutable_cart_ids(int index);
  void set_cart_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cart_ids(int index, ::std::string&& value);
  #endif
  void set_cart_ids(int index, const char* value);
  void set_cart_ids(int index, const char* value, size_t size);
  ::std::string* add_cart_ids();
  void add_cart_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_cart_ids(::std::string&& value);
  #endif
  void add_cart_ids(const char* value);
  void add_cart_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cart_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cart_ids();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string coupon_id = 3;
  void clear_coupon_id();
  static const int kCouponIdFieldNumber = 3;
  const ::std::string& coupon_id() const;
  void set_coupon_id(const ::std::string& value);
  #if LANG_CXX11
  void set_coupon_id(::std::string&& value);
  #endif
  void set_coupon_id(const char* value);
  void set_coupon_id(const char* value, size_t size);
  ::std::string* mutable_coupon_id();
  ::std::string* release_coupon_id();
  void set_allocated_coupon_id(::std::string* coupon_id);

  // string address_id = 4;
  void clear_address_id();
  static const int kAddressIdFieldNumber = 4;
  const ::std::string& address_id() const;
  void set_address_id(const ::std::string& value);
  #if LANG_CXX11
  void set_address_id(::std::string&& value);
  #endif
  void set_address_id(const char* value);
  void set_address_id(const char* value, size_t size);
  ::std::string* mutable_address_id();
  ::std::string* release_address_id();
  void set_allocated_address_id(::std::string* address_id);

  // string mark = 8;
  void clear_mark();
  static const int kMarkFieldNumber = 8;
  const ::std::string& mark() const;
  void set_mark(const ::std::string& value);
  #if LANG_CXX11
  void set_mark(::std::string&& value);
  #endif
  void set_mark(const char* value);
  void set_mark(const char* value, size_t size);
  ::std::string* mutable_mark();
  ::std::string* release_mark();
  void set_allocated_mark(::std::string* mark);

  // int32 deliver_time_id = 5;
  void clear_deliver_time_id();
  static const int kDeliverTimeIdFieldNumber = 5;
  ::google::protobuf::int32 deliver_time_id() const;
  void set_deliver_time_id(::google::protobuf::int32 value);

  // .ttmall.PaySelect pay_select = 7;
  void clear_pay_select();
  static const int kPaySelectFieldNumber = 7;
  ::ttmall::PaySelect pay_select() const;
  void set_pay_select(::ttmall::PaySelect value);

  // @@protoc_insertion_point(class_scope:ttmall.SubmitOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cart_ids_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr coupon_id_;
  ::google::protobuf::internal::ArenaStringPtr address_id_;
  ::google::protobuf::internal::ArenaStringPtr mark_;
  ::google::protobuf::int32 deliver_time_id_;
  int pay_select_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubmitOrderRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.SubmitOrderRep) */ {
 public:
  SubmitOrderRep();
  virtual ~SubmitOrderRep();

  SubmitOrderRep(const SubmitOrderRep& from);

  inline SubmitOrderRep& operator=(const SubmitOrderRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitOrderRep& default_instance();

  static inline const SubmitOrderRep* internal_default_instance() {
    return reinterpret_cast<const SubmitOrderRep*>(
               &_SubmitOrderRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SubmitOrderRep* other);

  // implements Message ----------------------------------------------

  inline SubmitOrderRep* New() const PROTOBUF_FINAL { return New(NULL); }

  SubmitOrderRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubmitOrderRep& from);
  void MergeFrom(const SubmitOrderRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubmitOrderRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.OrderInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::OrderInfo& info() const;
  ::ttmall::OrderInfo* mutable_info();
  ::ttmall::OrderInfo* release_info();
  void set_allocated_info(::ttmall::OrderInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.SubmitOrderRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::OrderInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfirmOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ConfirmOrderReq) */ {
 public:
  ConfirmOrderReq();
  virtual ~ConfirmOrderReq();

  ConfirmOrderReq(const ConfirmOrderReq& from);

  inline ConfirmOrderReq& operator=(const ConfirmOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfirmOrderReq& default_instance();

  static inline const ConfirmOrderReq* internal_default_instance() {
    return reinterpret_cast<const ConfirmOrderReq*>(
               &_ConfirmOrderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ConfirmOrderReq* other);

  // implements Message ----------------------------------------------

  inline ConfirmOrderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfirmOrderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfirmOrderReq& from);
  void MergeFrom(const ConfirmOrderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfirmOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cart_ids = 2;
  int cart_ids_size() const;
  void clear_cart_ids();
  static const int kCartIdsFieldNumber = 2;
  const ::std::string& cart_ids(int index) const;
  ::std::string* mutable_cart_ids(int index);
  void set_cart_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cart_ids(int index, ::std::string&& value);
  #endif
  void set_cart_ids(int index, const char* value);
  void set_cart_ids(int index, const char* value, size_t size);
  ::std::string* add_cart_ids();
  void add_cart_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_cart_ids(::std::string&& value);
  #endif
  void add_cart_ids(const char* value);
  void add_cart_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cart_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cart_ids();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string coupon_id = 3;
  void clear_coupon_id();
  static const int kCouponIdFieldNumber = 3;
  const ::std::string& coupon_id() const;
  void set_coupon_id(const ::std::string& value);
  #if LANG_CXX11
  void set_coupon_id(::std::string&& value);
  #endif
  void set_coupon_id(const char* value);
  void set_coupon_id(const char* value, size_t size);
  ::std::string* mutable_coupon_id();
  ::std::string* release_coupon_id();
  void set_allocated_coupon_id(::std::string* coupon_id);

  // string address_id = 4;
  void clear_address_id();
  static const int kAddressIdFieldNumber = 4;
  const ::std::string& address_id() const;
  void set_address_id(const ::std::string& value);
  #if LANG_CXX11
  void set_address_id(::std::string&& value);
  #endif
  void set_address_id(const char* value);
  void set_address_id(const char* value, size_t size);
  ::std::string* mutable_address_id();
  ::std::string* release_address_id();
  void set_allocated_address_id(::std::string* address_id);

  // @@protoc_insertion_point(class_scope:ttmall.ConfirmOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cart_ids_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr coupon_id_;
  ::google::protobuf::internal::ArenaStringPtr address_id_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeliverTimeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DeliverTimeInfo) */ {
 public:
  DeliverTimeInfo();
  virtual ~DeliverTimeInfo();

  DeliverTimeInfo(const DeliverTimeInfo& from);

  inline DeliverTimeInfo& operator=(const DeliverTimeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeliverTimeInfo& default_instance();

  static inline const DeliverTimeInfo* internal_default_instance() {
    return reinterpret_cast<const DeliverTimeInfo*>(
               &_DeliverTimeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DeliverTimeInfo* other);

  // implements Message ----------------------------------------------

  inline DeliverTimeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DeliverTimeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeliverTimeInfo& from);
  void MergeFrom(const DeliverTimeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeliverTimeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string desc = 3;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.DeliverTimeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfirmOrderRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ConfirmOrderRep) */ {
 public:
  ConfirmOrderRep();
  virtual ~ConfirmOrderRep();

  ConfirmOrderRep(const ConfirmOrderRep& from);

  inline ConfirmOrderRep& operator=(const ConfirmOrderRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfirmOrderRep& default_instance();

  static inline const ConfirmOrderRep* internal_default_instance() {
    return reinterpret_cast<const ConfirmOrderRep*>(
               &_ConfirmOrderRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ConfirmOrderRep* other);

  // implements Message ----------------------------------------------

  inline ConfirmOrderRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfirmOrderRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfirmOrderRep& from);
  void MergeFrom(const ConfirmOrderRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfirmOrderRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.OrderItem items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::OrderItem& items(int index) const;
  ::ttmall::OrderItem* mutable_items(int index);
  ::ttmall::OrderItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
      items() const;

  // repeated .ttmall.AddressInfo address = 8;
  int address_size() const;
  void clear_address();
  static const int kAddressFieldNumber = 8;
  const ::ttmall::AddressInfo& address(int index) const;
  ::ttmall::AddressInfo* mutable_address(int index);
  ::ttmall::AddressInfo* add_address();
  ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
      mutable_address();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
      address() const;

  // repeated .ttmall.CouponInfo coupons = 9;
  int coupons_size() const;
  void clear_coupons();
  static const int kCouponsFieldNumber = 9;
  const ::ttmall::CouponInfo& coupons(int index) const;
  ::ttmall::CouponInfo* mutable_coupons(int index);
  ::ttmall::CouponInfo* add_coupons();
  ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >*
      mutable_coupons();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >&
      coupons() const;

  // repeated .ttmall.DeliverTimeInfo times = 10;
  int times_size() const;
  void clear_times();
  static const int kTimesFieldNumber = 10;
  const ::ttmall::DeliverTimeInfo& times(int index) const;
  ::ttmall::DeliverTimeInfo* mutable_times(int index);
  ::ttmall::DeliverTimeInfo* add_times();
  ::google::protobuf::RepeatedPtrField< ::ttmall::DeliverTimeInfo >*
      mutable_times();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::DeliverTimeInfo >&
      times() const;

  // int32 total_fee = 2;
  void clear_total_fee();
  static const int kTotalFeeFieldNumber = 2;
  ::google::protobuf::int32 total_fee() const;
  void set_total_fee(::google::protobuf::int32 value);

  // int32 total_num = 3;
  void clear_total_num();
  static const int kTotalNumFieldNumber = 3;
  ::google::protobuf::int32 total_num() const;
  void set_total_num(::google::protobuf::int32 value);

  // int32 coupon_fee = 4;
  void clear_coupon_fee();
  static const int kCouponFeeFieldNumber = 4;
  ::google::protobuf::int32 coupon_fee() const;
  void set_coupon_fee(::google::protobuf::int32 value);

  // int32 dis_fee = 5;
  void clear_dis_fee();
  static const int kDisFeeFieldNumber = 5;
  ::google::protobuf::int32 dis_fee() const;
  void set_dis_fee(::google::protobuf::int32 value);

  // int32 trans_fee = 6;
  void clear_trans_fee();
  static const int kTransFeeFieldNumber = 6;
  ::google::protobuf::int32 trans_fee() const;
  void set_trans_fee(::google::protobuf::int32 value);

  // int32 pay_fee = 7;
  void clear_pay_fee();
  static const int kPayFeeFieldNumber = 7;
  ::google::protobuf::int32 pay_fee() const;
  void set_pay_fee(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.ConfirmOrderRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem > items_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo > address_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo > coupons_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::DeliverTimeInfo > times_;
  ::google::protobuf::int32 total_fee_;
  ::google::protobuf::int32 total_num_;
  ::google::protobuf::int32 coupon_fee_;
  ::google::protobuf::int32 dis_fee_;
  ::google::protobuf::int32 trans_fee_;
  ::google::protobuf::int32 pay_fee_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PayOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.PayOrderReq) */ {
 public:
  PayOrderReq();
  virtual ~PayOrderReq();

  PayOrderReq(const PayOrderReq& from);

  inline PayOrderReq& operator=(const PayOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PayOrderReq& default_instance();

  static inline const PayOrderReq* internal_default_instance() {
    return reinterpret_cast<const PayOrderReq*>(
               &_PayOrderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PayOrderReq* other);

  // implements Message ----------------------------------------------

  inline PayOrderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PayOrderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PayOrderReq& from);
  void MergeFrom(const PayOrderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PayOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.PayType pay_type = 3;
  int pay_type_size() const;
  void clear_pay_type();
  static const int kPayTypeFieldNumber = 3;
  ::ttmall::PayType pay_type(int index) const;
  void set_pay_type(int index, ::ttmall::PayType value);
  void add_pay_type(::ttmall::PayType value);
  const ::google::protobuf::RepeatedField<int>& pay_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_pay_type();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string order_id = 2;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  const ::std::string& order_id() const;
  void set_order_id(const ::std::string& value);
  #if LANG_CXX11
  void set_order_id(::std::string&& value);
  #endif
  void set_order_id(const char* value);
  void set_order_id(const char* value, size_t size);
  ::std::string* mutable_order_id();
  ::std::string* release_order_id();
  void set_allocated_order_id(::std::string* order_id);

  // @@protoc_insertion_point(class_scope:ttmall.PayOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> pay_type_;
  mutable int _pay_type_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr order_id_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PayOrderRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.PayOrderRep) */ {
 public:
  PayOrderRep();
  virtual ~PayOrderRep();

  PayOrderRep(const PayOrderRep& from);

  inline PayOrderRep& operator=(const PayOrderRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PayOrderRep& default_instance();

  static inline const PayOrderRep* internal_default_instance() {
    return reinterpret_cast<const PayOrderRep*>(
               &_PayOrderRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PayOrderRep* other);

  // implements Message ----------------------------------------------

  inline PayOrderRep* New() const PROTOBUF_FINAL { return New(NULL); }

  PayOrderRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PayOrderRep& from);
  void MergeFrom(const PayOrderRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PayOrderRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string wxpay = 1;
  void clear_wxpay();
  static const int kWxpayFieldNumber = 1;
  const ::std::string& wxpay() const;
  void set_wxpay(const ::std::string& value);
  #if LANG_CXX11
  void set_wxpay(::std::string&& value);
  #endif
  void set_wxpay(const char* value);
  void set_wxpay(const char* value, size_t size);
  ::std::string* mutable_wxpay();
  ::std::string* release_wxpay();
  void set_allocated_wxpay(::std::string* wxpay);

  // string alipay = 2;
  void clear_alipay();
  static const int kAlipayFieldNumber = 2;
  const ::std::string& alipay() const;
  void set_alipay(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay(::std::string&& value);
  #endif
  void set_alipay(const char* value);
  void set_alipay(const char* value, size_t size);
  ::std::string* mutable_alipay();
  ::std::string* release_alipay();
  void set_allocated_alipay(::std::string* alipay);

  // @@protoc_insertion_point(class_scope:ttmall.PayOrderRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr wxpay_;
  ::google::protobuf::internal::ArenaStringPtr alipay_;
  mutable int _cached_size_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderItem

// .ttmall.GoodsInfo info = 1;
inline bool OrderItem::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void OrderItem::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::GoodsInfo& OrderItem::info() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.info)
  return info_ != NULL ? *info_
                         : *::ttmall::GoodsInfo::internal_default_instance();
}
inline ::ttmall::GoodsInfo* OrderItem::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::GoodsInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderItem.info)
  return info_;
}
inline ::ttmall::GoodsInfo* OrderItem::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.OrderItem.info)
  
  ::ttmall::GoodsInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void OrderItem::set_allocated_info(::ttmall::GoodsInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderItem.info)
}

// string key_id = 2;
inline void OrderItem::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderItem::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.key_id)
  return key_id_.GetNoArena();
}
inline void OrderItem::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OrderItem.key_id)
}
#if LANG_CXX11
inline void OrderItem::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OrderItem.key_id)
}
#endif
inline void OrderItem::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OrderItem.key_id)
}
inline void OrderItem::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OrderItem.key_id)
}
inline ::std::string* OrderItem::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OrderItem.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderItem::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.OrderItem.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderItem::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderItem.key_id)
}

// int32 key_count = 3;
inline void OrderItem::clear_key_count() {
  key_count_ = 0;
}
inline ::google::protobuf::int32 OrderItem::key_count() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.key_count)
  return key_count_;
}
inline void OrderItem::set_key_count(::google::protobuf::int32 value) {
  
  key_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderItem.key_count)
}

// int32 key_fee = 4;
inline void OrderItem::clear_key_fee() {
  key_fee_ = 0;
}
inline ::google::protobuf::int32 OrderItem::key_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.key_fee)
  return key_fee_;
}
inline void OrderItem::set_key_fee(::google::protobuf::int32 value) {
  
  key_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderItem.key_fee)
}

// int32 dis_fee = 5;
inline void OrderItem::clear_dis_fee() {
  dis_fee_ = 0;
}
inline ::google::protobuf::int32 OrderItem::dis_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderItem.dis_fee)
  return dis_fee_;
}
inline void OrderItem::set_dis_fee(::google::protobuf::int32 value) {
  
  dis_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderItem.dis_fee)
}

// -------------------------------------------------------------------

// OrderInfo

// string id = 1;
inline void OrderInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.id)
  return id_.GetNoArena();
}
inline void OrderInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.id)
}
#if LANG_CXX11
inline void OrderInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OrderInfo.id)
}
#endif
inline void OrderInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OrderInfo.id)
}
inline void OrderInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OrderInfo.id)
}
inline ::std::string* OrderInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.id)
}

// .ttmall.OrderState state = 2;
inline void OrderInfo::clear_state() {
  state_ = 0;
}
inline ::ttmall::OrderState OrderInfo::state() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.state)
  return static_cast< ::ttmall::OrderState >(state_);
}
inline void OrderInfo::set_state(::ttmall::OrderState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.state)
}

// repeated .ttmall.OrderItem items = 3;
inline int OrderInfo::items_size() const {
  return items_.size();
}
inline void OrderInfo::clear_items() {
  items_.Clear();
}
inline const ::ttmall::OrderItem& OrderInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.items)
  return items_.Get(index);
}
inline ::ttmall::OrderItem* OrderInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.items)
  return items_.Mutable(index);
}
inline ::ttmall::OrderItem* OrderInfo::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.OrderInfo.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
OrderInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.OrderInfo.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
OrderInfo::items() const {
  // @@protoc_insertion_point(field_list:ttmall.OrderInfo.items)
  return items_;
}

// int32 total_fee = 4;
inline void OrderInfo::clear_total_fee() {
  total_fee_ = 0;
}
inline ::google::protobuf::int32 OrderInfo::total_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.total_fee)
  return total_fee_;
}
inline void OrderInfo::set_total_fee(::google::protobuf::int32 value) {
  
  total_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.total_fee)
}

// int32 total_num = 5;
inline void OrderInfo::clear_total_num() {
  total_num_ = 0;
}
inline ::google::protobuf::int32 OrderInfo::total_num() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.total_num)
  return total_num_;
}
inline void OrderInfo::set_total_num(::google::protobuf::int32 value) {
  
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.total_num)
}

// .ttmall.PayType pay_type = 6;
inline void OrderInfo::clear_pay_type() {
  pay_type_ = 0;
}
inline ::ttmall::PayType OrderInfo::pay_type() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.pay_type)
  return static_cast< ::ttmall::PayType >(pay_type_);
}
inline void OrderInfo::set_pay_type(::ttmall::PayType value) {
  
  pay_type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.pay_type)
}

// .ttmall.PaySelect pay_select = 7;
inline void OrderInfo::clear_pay_select() {
  pay_select_ = 0;
}
inline ::ttmall::PaySelect OrderInfo::pay_select() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.pay_select)
  return static_cast< ::ttmall::PaySelect >(pay_select_);
}
inline void OrderInfo::set_pay_select(::ttmall::PaySelect value) {
  
  pay_select_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.pay_select)
}

// int64 pay_time = 8;
inline void OrderInfo::clear_pay_time() {
  pay_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderInfo::pay_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.pay_time)
  return pay_time_;
}
inline void OrderInfo::set_pay_time(::google::protobuf::int64 value) {
  
  pay_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.pay_time)
}

// int64 gen_time = 9;
inline void OrderInfo::clear_gen_time() {
  gen_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderInfo::gen_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.gen_time)
  return gen_time_;
}
inline void OrderInfo::set_gen_time(::google::protobuf::int64 value) {
  
  gen_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.gen_time)
}

// int64 refund_time = 10;
inline void OrderInfo::clear_refund_time() {
  refund_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderInfo::refund_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.refund_time)
  return refund_time_;
}
inline void OrderInfo::set_refund_time(::google::protobuf::int64 value) {
  
  refund_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.refund_time)
}

// int32 balance_fee = 11;
inline void OrderInfo::clear_balance_fee() {
  balance_fee_ = 0;
}
inline ::google::protobuf::int32 OrderInfo::balance_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.balance_fee)
  return balance_fee_;
}
inline void OrderInfo::set_balance_fee(::google::protobuf::int32 value) {
  
  balance_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.balance_fee)
}

// int32 trans_fee = 12;
inline void OrderInfo::clear_trans_fee() {
  trans_fee_ = 0;
}
inline ::google::protobuf::int32 OrderInfo::trans_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.trans_fee)
  return trans_fee_;
}
inline void OrderInfo::set_trans_fee(::google::protobuf::int32 value) {
  
  trans_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.trans_fee)
}

// int32 dis_free = 13;
inline void OrderInfo::clear_dis_free() {
  dis_free_ = 0;
}
inline ::google::protobuf::int32 OrderInfo::dis_free() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.dis_free)
  return dis_free_;
}
inline void OrderInfo::set_dis_free(::google::protobuf::int32 value) {
  
  dis_free_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.dis_free)
}

// int32 coupon_fee = 14;
inline void OrderInfo::clear_coupon_fee() {
  coupon_fee_ = 0;
}
inline ::google::protobuf::int32 OrderInfo::coupon_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.coupon_fee)
  return coupon_fee_;
}
inline void OrderInfo::set_coupon_fee(::google::protobuf::int32 value) {
  
  coupon_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.coupon_fee)
}

// int32 pay_fee = 15;
inline void OrderInfo::clear_pay_fee() {
  pay_fee_ = 0;
}
inline ::google::protobuf::int32 OrderInfo::pay_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.pay_fee)
  return pay_fee_;
}
inline void OrderInfo::set_pay_fee(::google::protobuf::int32 value) {
  
  pay_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.pay_fee)
}

// int32 refund_fee = 16;
inline void OrderInfo::clear_refund_fee() {
  refund_fee_ = 0;
}
inline ::google::protobuf::int32 OrderInfo::refund_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.refund_fee)
  return refund_fee_;
}
inline void OrderInfo::set_refund_fee(::google::protobuf::int32 value) {
  
  refund_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.refund_fee)
}

// .ttmall.DeliverTimeInfo deliver_time = 17;
inline bool OrderInfo::has_deliver_time() const {
  return this != internal_default_instance() && deliver_time_ != NULL;
}
inline void OrderInfo::clear_deliver_time() {
  if (GetArenaNoVirtual() == NULL && deliver_time_ != NULL) delete deliver_time_;
  deliver_time_ = NULL;
}
inline const ::ttmall::DeliverTimeInfo& OrderInfo::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.deliver_time)
  return deliver_time_ != NULL ? *deliver_time_
                         : *::ttmall::DeliverTimeInfo::internal_default_instance();
}
inline ::ttmall::DeliverTimeInfo* OrderInfo::mutable_deliver_time() {
  
  if (deliver_time_ == NULL) {
    deliver_time_ = new ::ttmall::DeliverTimeInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.deliver_time)
  return deliver_time_;
}
inline ::ttmall::DeliverTimeInfo* OrderInfo::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.deliver_time)
  
  ::ttmall::DeliverTimeInfo* temp = deliver_time_;
  deliver_time_ = NULL;
  return temp;
}
inline void OrderInfo::set_allocated_deliver_time(::ttmall::DeliverTimeInfo* deliver_time) {
  delete deliver_time_;
  deliver_time_ = deliver_time;
  if (deliver_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.deliver_time)
}

// string mark = 18;
inline void OrderInfo::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderInfo::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.mark)
  return mark_.GetNoArena();
}
inline void OrderInfo::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OrderInfo.mark)
}
#if LANG_CXX11
inline void OrderInfo::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OrderInfo.mark)
}
#endif
inline void OrderInfo::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OrderInfo.mark)
}
inline void OrderInfo::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OrderInfo.mark)
}
inline ::std::string* OrderInfo::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderInfo::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderInfo::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.mark)
}

// .ttmall.CouponInfo Coupon = 19;
inline bool OrderInfo::has_coupon() const {
  return this != internal_default_instance() && coupon_ != NULL;
}
inline void OrderInfo::clear_coupon() {
  if (GetArenaNoVirtual() == NULL && coupon_ != NULL) delete coupon_;
  coupon_ = NULL;
}
inline const ::ttmall::CouponInfo& OrderInfo::coupon() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.Coupon)
  return coupon_ != NULL ? *coupon_
                         : *::ttmall::CouponInfo::internal_default_instance();
}
inline ::ttmall::CouponInfo* OrderInfo::mutable_coupon() {
  
  if (coupon_ == NULL) {
    coupon_ = new ::ttmall::CouponInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.Coupon)
  return coupon_;
}
inline ::ttmall::CouponInfo* OrderInfo::release_coupon() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.Coupon)
  
  ::ttmall::CouponInfo* temp = coupon_;
  coupon_ = NULL;
  return temp;
}
inline void OrderInfo::set_allocated_coupon(::ttmall::CouponInfo* coupon) {
  delete coupon_;
  coupon_ = coupon;
  if (coupon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.Coupon)
}

// .ttmall.AddressInfo Address = 20;
inline bool OrderInfo::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline void OrderInfo::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
inline const ::ttmall::AddressInfo& OrderInfo::address() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderInfo.Address)
  return address_ != NULL ? *address_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
inline ::ttmall::AddressInfo* OrderInfo::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderInfo.Address)
  return address_;
}
inline ::ttmall::AddressInfo* OrderInfo::release_address() {
  // @@protoc_insertion_point(field_release:ttmall.OrderInfo.Address)
  
  ::ttmall::AddressInfo* temp = address_;
  address_ = NULL;
  return temp;
}
inline void OrderInfo::set_allocated_address(::ttmall::AddressInfo* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderInfo.Address)
}

// -------------------------------------------------------------------

// SubmitOrderReq

// string token = 1;
inline void SubmitOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubmitOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.token)
  return token_.GetNoArena();
}
inline void SubmitOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.token)
}
#if LANG_CXX11
inline void SubmitOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SubmitOrderReq.token)
}
#endif
inline void SubmitOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.token)
}
inline void SubmitOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.token)
}
inline ::std::string* SubmitOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderReq.token)
}

// repeated string cart_ids = 2;
inline int SubmitOrderReq::cart_ids_size() const {
  return cart_ids_.size();
}
inline void SubmitOrderReq::clear_cart_ids() {
  cart_ids_.Clear();
}
inline const ::std::string& SubmitOrderReq::cart_ids(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.cart_ids)
  return cart_ids_.Get(index);
}
inline ::std::string* SubmitOrderReq::mutable_cart_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.cart_ids)
  return cart_ids_.Mutable(index);
}
inline void SubmitOrderReq::set_cart_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.cart_ids)
  cart_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SubmitOrderReq::set_cart_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.cart_ids)
  cart_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SubmitOrderReq::set_cart_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.cart_ids)
}
inline void SubmitOrderReq::set_cart_ids(int index, const char* value, size_t size) {
  cart_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.cart_ids)
}
inline ::std::string* SubmitOrderReq::add_cart_ids() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.SubmitOrderReq.cart_ids)
  return cart_ids_.Add();
}
inline void SubmitOrderReq::add_cart_ids(const ::std::string& value) {
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.SubmitOrderReq.cart_ids)
}
#if LANG_CXX11
inline void SubmitOrderReq::add_cart_ids(::std::string&& value) {
  cart_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.SubmitOrderReq.cart_ids)
}
#endif
inline void SubmitOrderReq::add_cart_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.SubmitOrderReq.cart_ids)
}
inline void SubmitOrderReq::add_cart_ids(const char* value, size_t size) {
  cart_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.SubmitOrderReq.cart_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SubmitOrderReq::cart_ids() const {
  // @@protoc_insertion_point(field_list:ttmall.SubmitOrderReq.cart_ids)
  return cart_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SubmitOrderReq::mutable_cart_ids() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.SubmitOrderReq.cart_ids)
  return &cart_ids_;
}

// string coupon_id = 3;
inline void SubmitOrderReq::clear_coupon_id() {
  coupon_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubmitOrderReq::coupon_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.coupon_id)
  return coupon_id_.GetNoArena();
}
inline void SubmitOrderReq::set_coupon_id(const ::std::string& value) {
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.coupon_id)
}
#if LANG_CXX11
inline void SubmitOrderReq::set_coupon_id(::std::string&& value) {
  
  coupon_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SubmitOrderReq.coupon_id)
}
#endif
inline void SubmitOrderReq::set_coupon_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.coupon_id)
}
inline void SubmitOrderReq::set_coupon_id(const char* value, size_t size) {
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.coupon_id)
}
inline ::std::string* SubmitOrderReq::mutable_coupon_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.coupon_id)
  return coupon_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitOrderReq::release_coupon_id() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderReq.coupon_id)
  
  return coupon_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitOrderReq::set_allocated_coupon_id(::std::string* coupon_id) {
  if (coupon_id != NULL) {
    
  } else {
    
  }
  coupon_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coupon_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderReq.coupon_id)
}

// string address_id = 4;
inline void SubmitOrderReq::clear_address_id() {
  address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubmitOrderReq::address_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.address_id)
  return address_id_.GetNoArena();
}
inline void SubmitOrderReq::set_address_id(const ::std::string& value) {
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.address_id)
}
#if LANG_CXX11
inline void SubmitOrderReq::set_address_id(::std::string&& value) {
  
  address_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SubmitOrderReq.address_id)
}
#endif
inline void SubmitOrderReq::set_address_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.address_id)
}
inline void SubmitOrderReq::set_address_id(const char* value, size_t size) {
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.address_id)
}
inline ::std::string* SubmitOrderReq::mutable_address_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.address_id)
  return address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitOrderReq::release_address_id() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderReq.address_id)
  
  return address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitOrderReq::set_allocated_address_id(::std::string* address_id) {
  if (address_id != NULL) {
    
  } else {
    
  }
  address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderReq.address_id)
}

// int32 deliver_time_id = 5;
inline void SubmitOrderReq::clear_deliver_time_id() {
  deliver_time_id_ = 0;
}
inline ::google::protobuf::int32 SubmitOrderReq::deliver_time_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.deliver_time_id)
  return deliver_time_id_;
}
inline void SubmitOrderReq::set_deliver_time_id(::google::protobuf::int32 value) {
  
  deliver_time_id_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.deliver_time_id)
}

// .ttmall.PaySelect pay_select = 7;
inline void SubmitOrderReq::clear_pay_select() {
  pay_select_ = 0;
}
inline ::ttmall::PaySelect SubmitOrderReq::pay_select() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.pay_select)
  return static_cast< ::ttmall::PaySelect >(pay_select_);
}
inline void SubmitOrderReq::set_pay_select(::ttmall::PaySelect value) {
  
  pay_select_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.pay_select)
}

// string mark = 8;
inline void SubmitOrderReq::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubmitOrderReq::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderReq.mark)
  return mark_.GetNoArena();
}
inline void SubmitOrderReq::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SubmitOrderReq.mark)
}
#if LANG_CXX11
inline void SubmitOrderReq::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SubmitOrderReq.mark)
}
#endif
inline void SubmitOrderReq::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SubmitOrderReq.mark)
}
inline void SubmitOrderReq::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SubmitOrderReq.mark)
}
inline ::std::string* SubmitOrderReq::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderReq.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitOrderReq::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderReq.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitOrderReq::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderReq.mark)
}

// -------------------------------------------------------------------

// SubmitOrderRep

// .ttmall.OrderInfo info = 1;
inline bool SubmitOrderRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void SubmitOrderRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::OrderInfo& SubmitOrderRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.SubmitOrderRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
inline ::ttmall::OrderInfo* SubmitOrderRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.SubmitOrderRep.info)
  return info_;
}
inline ::ttmall::OrderInfo* SubmitOrderRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.SubmitOrderRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SubmitOrderRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.SubmitOrderRep.info)
}

// -------------------------------------------------------------------

// ConfirmOrderReq

// string token = 1;
inline void ConfirmOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfirmOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderReq.token)
  return token_.GetNoArena();
}
inline void ConfirmOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.token)
}
#if LANG_CXX11
inline void ConfirmOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ConfirmOrderReq.token)
}
#endif
inline void ConfirmOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ConfirmOrderReq.token)
}
inline void ConfirmOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ConfirmOrderReq.token)
}
inline ::std::string* ConfirmOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfirmOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ConfirmOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfirmOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ConfirmOrderReq.token)
}

// repeated string cart_ids = 2;
inline int ConfirmOrderReq::cart_ids_size() const {
  return cart_ids_.size();
}
inline void ConfirmOrderReq::clear_cart_ids() {
  cart_ids_.Clear();
}
inline const ::std::string& ConfirmOrderReq::cart_ids(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderReq.cart_ids)
  return cart_ids_.Get(index);
}
inline ::std::string* ConfirmOrderReq::mutable_cart_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderReq.cart_ids)
  return cart_ids_.Mutable(index);
}
inline void ConfirmOrderReq::set_cart_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.cart_ids)
  cart_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ConfirmOrderReq::set_cart_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.cart_ids)
  cart_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ConfirmOrderReq::set_cart_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.ConfirmOrderReq.cart_ids)
}
inline void ConfirmOrderReq::set_cart_ids(int index, const char* value, size_t size) {
  cart_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.ConfirmOrderReq.cart_ids)
}
inline ::std::string* ConfirmOrderReq::add_cart_ids() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.ConfirmOrderReq.cart_ids)
  return cart_ids_.Add();
}
inline void ConfirmOrderReq::add_cart_ids(const ::std::string& value) {
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderReq.cart_ids)
}
#if LANG_CXX11
inline void ConfirmOrderReq::add_cart_ids(::std::string&& value) {
  cart_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderReq.cart_ids)
}
#endif
inline void ConfirmOrderReq::add_cart_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.ConfirmOrderReq.cart_ids)
}
inline void ConfirmOrderReq::add_cart_ids(const char* value, size_t size) {
  cart_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.ConfirmOrderReq.cart_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfirmOrderReq::cart_ids() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderReq.cart_ids)
  return cart_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfirmOrderReq::mutable_cart_ids() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderReq.cart_ids)
  return &cart_ids_;
}

// string coupon_id = 3;
inline void ConfirmOrderReq::clear_coupon_id() {
  coupon_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfirmOrderReq::coupon_id() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderReq.coupon_id)
  return coupon_id_.GetNoArena();
}
inline void ConfirmOrderReq::set_coupon_id(const ::std::string& value) {
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.coupon_id)
}
#if LANG_CXX11
inline void ConfirmOrderReq::set_coupon_id(::std::string&& value) {
  
  coupon_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ConfirmOrderReq.coupon_id)
}
#endif
inline void ConfirmOrderReq::set_coupon_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ConfirmOrderReq.coupon_id)
}
inline void ConfirmOrderReq::set_coupon_id(const char* value, size_t size) {
  
  coupon_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ConfirmOrderReq.coupon_id)
}
inline ::std::string* ConfirmOrderReq::mutable_coupon_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderReq.coupon_id)
  return coupon_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfirmOrderReq::release_coupon_id() {
  // @@protoc_insertion_point(field_release:ttmall.ConfirmOrderReq.coupon_id)
  
  return coupon_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfirmOrderReq::set_allocated_coupon_id(::std::string* coupon_id) {
  if (coupon_id != NULL) {
    
  } else {
    
  }
  coupon_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coupon_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ConfirmOrderReq.coupon_id)
}

// string address_id = 4;
inline void ConfirmOrderReq::clear_address_id() {
  address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfirmOrderReq::address_id() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderReq.address_id)
  return address_id_.GetNoArena();
}
inline void ConfirmOrderReq::set_address_id(const ::std::string& value) {
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderReq.address_id)
}
#if LANG_CXX11
inline void ConfirmOrderReq::set_address_id(::std::string&& value) {
  
  address_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ConfirmOrderReq.address_id)
}
#endif
inline void ConfirmOrderReq::set_address_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ConfirmOrderReq.address_id)
}
inline void ConfirmOrderReq::set_address_id(const char* value, size_t size) {
  
  address_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ConfirmOrderReq.address_id)
}
inline ::std::string* ConfirmOrderReq::mutable_address_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderReq.address_id)
  return address_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfirmOrderReq::release_address_id() {
  // @@protoc_insertion_point(field_release:ttmall.ConfirmOrderReq.address_id)
  
  return address_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfirmOrderReq::set_allocated_address_id(::std::string* address_id) {
  if (address_id != NULL) {
    
  } else {
    
  }
  address_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ConfirmOrderReq.address_id)
}

// -------------------------------------------------------------------

// DeliverTimeInfo

// int32 id = 1;
inline void DeliverTimeInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 DeliverTimeInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeliverTimeInfo.id)
  return id_;
}
inline void DeliverTimeInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ttmall.DeliverTimeInfo.id)
}

// string name = 2;
inline void DeliverTimeInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeliverTimeInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.DeliverTimeInfo.name)
  return name_.GetNoArena();
}
inline void DeliverTimeInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeliverTimeInfo.name)
}
#if LANG_CXX11
inline void DeliverTimeInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeliverTimeInfo.name)
}
#endif
inline void DeliverTimeInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeliverTimeInfo.name)
}
inline void DeliverTimeInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeliverTimeInfo.name)
}
inline ::std::string* DeliverTimeInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeliverTimeInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeliverTimeInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.DeliverTimeInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeliverTimeInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeliverTimeInfo.name)
}

// string desc = 3;
inline void DeliverTimeInfo::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeliverTimeInfo::desc() const {
  // @@protoc_insertion_point(field_get:ttmall.DeliverTimeInfo.desc)
  return desc_.GetNoArena();
}
inline void DeliverTimeInfo::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeliverTimeInfo.desc)
}
#if LANG_CXX11
inline void DeliverTimeInfo::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeliverTimeInfo.desc)
}
#endif
inline void DeliverTimeInfo::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeliverTimeInfo.desc)
}
inline void DeliverTimeInfo::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeliverTimeInfo.desc)
}
inline ::std::string* DeliverTimeInfo::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeliverTimeInfo.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeliverTimeInfo::release_desc() {
  // @@protoc_insertion_point(field_release:ttmall.DeliverTimeInfo.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeliverTimeInfo::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeliverTimeInfo.desc)
}

// -------------------------------------------------------------------

// ConfirmOrderRep

// repeated .ttmall.OrderItem items = 1;
inline int ConfirmOrderRep::items_size() const {
  return items_.size();
}
inline void ConfirmOrderRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::OrderItem& ConfirmOrderRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.items)
  return items_.Get(index);
}
inline ::ttmall::OrderItem* ConfirmOrderRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::OrderItem* ConfirmOrderRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
ConfirmOrderRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
ConfirmOrderRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderRep.items)
  return items_;
}

// int32 total_fee = 2;
inline void ConfirmOrderRep::clear_total_fee() {
  total_fee_ = 0;
}
inline ::google::protobuf::int32 ConfirmOrderRep::total_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.total_fee)
  return total_fee_;
}
inline void ConfirmOrderRep::set_total_fee(::google::protobuf::int32 value) {
  
  total_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.total_fee)
}

// int32 total_num = 3;
inline void ConfirmOrderRep::clear_total_num() {
  total_num_ = 0;
}
inline ::google::protobuf::int32 ConfirmOrderRep::total_num() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.total_num)
  return total_num_;
}
inline void ConfirmOrderRep::set_total_num(::google::protobuf::int32 value) {
  
  total_num_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.total_num)
}

// int32 coupon_fee = 4;
inline void ConfirmOrderRep::clear_coupon_fee() {
  coupon_fee_ = 0;
}
inline ::google::protobuf::int32 ConfirmOrderRep::coupon_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.coupon_fee)
  return coupon_fee_;
}
inline void ConfirmOrderRep::set_coupon_fee(::google::protobuf::int32 value) {
  
  coupon_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.coupon_fee)
}

// int32 dis_fee = 5;
inline void ConfirmOrderRep::clear_dis_fee() {
  dis_fee_ = 0;
}
inline ::google::protobuf::int32 ConfirmOrderRep::dis_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.dis_fee)
  return dis_fee_;
}
inline void ConfirmOrderRep::set_dis_fee(::google::protobuf::int32 value) {
  
  dis_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.dis_fee)
}

// int32 trans_fee = 6;
inline void ConfirmOrderRep::clear_trans_fee() {
  trans_fee_ = 0;
}
inline ::google::protobuf::int32 ConfirmOrderRep::trans_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.trans_fee)
  return trans_fee_;
}
inline void ConfirmOrderRep::set_trans_fee(::google::protobuf::int32 value) {
  
  trans_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.trans_fee)
}

// int32 pay_fee = 7;
inline void ConfirmOrderRep::clear_pay_fee() {
  pay_fee_ = 0;
}
inline ::google::protobuf::int32 ConfirmOrderRep::pay_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.pay_fee)
  return pay_fee_;
}
inline void ConfirmOrderRep::set_pay_fee(::google::protobuf::int32 value) {
  
  pay_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ConfirmOrderRep.pay_fee)
}

// repeated .ttmall.AddressInfo address = 8;
inline int ConfirmOrderRep::address_size() const {
  return address_.size();
}
inline void ConfirmOrderRep::clear_address() {
  address_.Clear();
}
inline const ::ttmall::AddressInfo& ConfirmOrderRep::address(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.address)
  return address_.Get(index);
}
inline ::ttmall::AddressInfo* ConfirmOrderRep::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderRep.address)
  return address_.Mutable(index);
}
inline ::ttmall::AddressInfo* ConfirmOrderRep::add_address() {
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderRep.address)
  return address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
ConfirmOrderRep::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderRep.address)
  return &address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
ConfirmOrderRep::address() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderRep.address)
  return address_;
}

// repeated .ttmall.CouponInfo coupons = 9;
inline int ConfirmOrderRep::coupons_size() const {
  return coupons_.size();
}
inline void ConfirmOrderRep::clear_coupons() {
  coupons_.Clear();
}
inline const ::ttmall::CouponInfo& ConfirmOrderRep::coupons(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.coupons)
  return coupons_.Get(index);
}
inline ::ttmall::CouponInfo* ConfirmOrderRep::mutable_coupons(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderRep.coupons)
  return coupons_.Mutable(index);
}
inline ::ttmall::CouponInfo* ConfirmOrderRep::add_coupons() {
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderRep.coupons)
  return coupons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >*
ConfirmOrderRep::mutable_coupons() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderRep.coupons)
  return &coupons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >&
ConfirmOrderRep::coupons() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderRep.coupons)
  return coupons_;
}

// repeated .ttmall.DeliverTimeInfo times = 10;
inline int ConfirmOrderRep::times_size() const {
  return times_.size();
}
inline void ConfirmOrderRep::clear_times() {
  times_.Clear();
}
inline const ::ttmall::DeliverTimeInfo& ConfirmOrderRep::times(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ConfirmOrderRep.times)
  return times_.Get(index);
}
inline ::ttmall::DeliverTimeInfo* ConfirmOrderRep::mutable_times(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ConfirmOrderRep.times)
  return times_.Mutable(index);
}
inline ::ttmall::DeliverTimeInfo* ConfirmOrderRep::add_times() {
  // @@protoc_insertion_point(field_add:ttmall.ConfirmOrderRep.times)
  return times_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::DeliverTimeInfo >*
ConfirmOrderRep::mutable_times() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ConfirmOrderRep.times)
  return &times_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::DeliverTimeInfo >&
ConfirmOrderRep::times() const {
  // @@protoc_insertion_point(field_list:ttmall.ConfirmOrderRep.times)
  return times_;
}

// -------------------------------------------------------------------

// PayOrderReq

// string token = 1;
inline void PayOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PayOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderReq.token)
  return token_.GetNoArena();
}
inline void PayOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderReq.token)
}
#if LANG_CXX11
inline void PayOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PayOrderReq.token)
}
#endif
inline void PayOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PayOrderReq.token)
}
inline void PayOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PayOrderReq.token)
}
inline ::std::string* PayOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PayOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PayOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.PayOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PayOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PayOrderReq.token)
}

// string order_id = 2;
inline void PayOrderReq::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PayOrderReq::order_id() const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderReq.order_id)
  return order_id_.GetNoArena();
}
inline void PayOrderReq::set_order_id(const ::std::string& value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderReq.order_id)
}
#if LANG_CXX11
inline void PayOrderReq::set_order_id(::std::string&& value) {
  
  order_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PayOrderReq.order_id)
}
#endif
inline void PayOrderReq::set_order_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PayOrderReq.order_id)
}
inline void PayOrderReq::set_order_id(const char* value, size_t size) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PayOrderReq.order_id)
}
inline ::std::string* PayOrderReq::mutable_order_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PayOrderReq.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PayOrderReq::release_order_id() {
  // @@protoc_insertion_point(field_release:ttmall.PayOrderReq.order_id)
  
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PayOrderReq::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    
  } else {
    
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PayOrderReq.order_id)
}

// repeated .ttmall.PayType pay_type = 3;
inline int PayOrderReq::pay_type_size() const {
  return pay_type_.size();
}
inline void PayOrderReq::clear_pay_type() {
  pay_type_.Clear();
}
inline ::ttmall::PayType PayOrderReq::pay_type(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderReq.pay_type)
  return static_cast< ::ttmall::PayType >(pay_type_.Get(index));
}
inline void PayOrderReq::set_pay_type(int index, ::ttmall::PayType value) {
  pay_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderReq.pay_type)
}
inline void PayOrderReq::add_pay_type(::ttmall::PayType value) {
  pay_type_.Add(value);
  // @@protoc_insertion_point(field_add:ttmall.PayOrderReq.pay_type)
}
inline const ::google::protobuf::RepeatedField<int>&
PayOrderReq::pay_type() const {
  // @@protoc_insertion_point(field_list:ttmall.PayOrderReq.pay_type)
  return pay_type_;
}
inline ::google::protobuf::RepeatedField<int>*
PayOrderReq::mutable_pay_type() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.PayOrderReq.pay_type)
  return &pay_type_;
}

// -------------------------------------------------------------------

// PayOrderRep

// string wxpay = 1;
inline void PayOrderRep::clear_wxpay() {
  wxpay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PayOrderRep::wxpay() const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderRep.wxpay)
  return wxpay_.GetNoArena();
}
inline void PayOrderRep::set_wxpay(const ::std::string& value) {
  
  wxpay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderRep.wxpay)
}
#if LANG_CXX11
inline void PayOrderRep::set_wxpay(::std::string&& value) {
  
  wxpay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PayOrderRep.wxpay)
}
#endif
inline void PayOrderRep::set_wxpay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  wxpay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PayOrderRep.wxpay)
}
inline void PayOrderRep::set_wxpay(const char* value, size_t size) {
  
  wxpay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PayOrderRep.wxpay)
}
inline ::std::string* PayOrderRep::mutable_wxpay() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PayOrderRep.wxpay)
  return wxpay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PayOrderRep::release_wxpay() {
  // @@protoc_insertion_point(field_release:ttmall.PayOrderRep.wxpay)
  
  return wxpay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PayOrderRep::set_allocated_wxpay(::std::string* wxpay) {
  if (wxpay != NULL) {
    
  } else {
    
  }
  wxpay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxpay);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PayOrderRep.wxpay)
}

// string alipay = 2;
inline void PayOrderRep::clear_alipay() {
  alipay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PayOrderRep::alipay() const {
  // @@protoc_insertion_point(field_get:ttmall.PayOrderRep.alipay)
  return alipay_.GetNoArena();
}
inline void PayOrderRep::set_alipay(const ::std::string& value) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PayOrderRep.alipay)
}
#if LANG_CXX11
inline void PayOrderRep::set_alipay(::std::string&& value) {
  
  alipay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PayOrderRep.alipay)
}
#endif
inline void PayOrderRep::set_alipay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PayOrderRep.alipay)
}
inline void PayOrderRep::set_alipay(const char* value, size_t size) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PayOrderRep.alipay)
}
inline ::std::string* PayOrderRep::mutable_alipay() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PayOrderRep.alipay)
  return alipay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PayOrderRep::release_alipay() {
  // @@protoc_insertion_point(field_release:ttmall.PayOrderRep.alipay)
  
  return alipay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PayOrderRep::set_allocated_alipay(::std::string* alipay) {
  if (alipay != NULL) {
    
  } else {
    
  }
  alipay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PayOrderRep.alipay)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ttmall

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ttmall::PaySelect> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ttmall::PaySelect>() {
  return ::ttmall::PaySelect_descriptor();
}
template <> struct is_proto_enum< ::ttmall::PayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ttmall::PayType>() {
  return ::ttmall::PayType_descriptor();
}
template <> struct is_proto_enum< ::ttmall::OrderState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ttmall::OrderState>() {
  return ::ttmall::OrderState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_order_2eproto__INCLUDED
