// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "public.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ttmall {
class BrandInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BrandInfo> {
} _BrandInfo_default_instance_;
class TypeInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TypeInfo> {
} _TypeInfo_default_instance_;
class PriceRangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PriceRange> {
} _PriceRange_default_instance_;
class SetInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetInfo> {
} _SetInfo_default_instance_;
class PriceInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PriceInfo> {
} _PriceInfo_default_instance_;
class AttrInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AttrInfo> {
} _AttrInfo_default_instance_;
class AttrGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AttrGroup> {
} _AttrGroup_default_instance_;
class MapInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MapInfo> {
} _MapInfo_default_instance_;
class GoodsInfo_PricesEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GoodsInfo::GoodsInfo_PricesEntry> {
} _GoodsInfo_PricesEntry_default_instance_;
class GoodsInfo_AttrsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GoodsInfo::GoodsInfo_AttrsEntry> {
} _GoodsInfo_AttrsEntry_default_instance_;
class GoodsInfo_MapsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GoodsInfo::GoodsInfo_MapsEntry> {
} _GoodsInfo_MapsEntry_default_instance_;
class GoodsInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GoodsInfo> {
} _GoodsInfo_default_instance_;
class NoticeInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NoticeInfo> {
} _NoticeInfo_default_instance_;
class ListNoticeReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListNoticeReq> {
} _ListNoticeReq_default_instance_;
class ListNoticeRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListNoticeRep> {
} _ListNoticeRep_default_instance_;
class ExtInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExtInfo> {
} _ExtInfo_default_instance_;
class MessageInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageInfo> {
} _MessageInfo_default_instance_;
class ListMessageReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListMessageReq> {
} _ListMessageReq_default_instance_;
class ListMessageRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListMessageRep> {
} _ListMessageRep_default_instance_;
class DeleteMessageReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteMessageReq> {
} _DeleteMessageReq_default_instance_;
class DeleteMessageRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeleteMessageRep> {
} _DeleteMessageRep_default_instance_;
class SetMessageReadReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetMessageReadReq> {
} _SetMessageReadReq_default_instance_;
class SetMessageReadRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetMessageReadRep> {
} _SetMessageReadRep_default_instance_;
class GetNewMessageReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetNewMessageReq> {
} _GetNewMessageReq_default_instance_;
class GetNewMessageRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetNewMessageRep> {
} _GetNewMessageRep_default_instance_;
class CoordInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CoordInfo> {
} _CoordInfo_default_instance_;
class RegionInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegionInfo> {
} _RegionInfo_default_instance_;
class ImageInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ImageInfo> {
} _ImageInfo_default_instance_;
class CouponInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CouponInfo> {
} _CouponInfo_default_instance_;
class CarInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CarInfo> {
} _CarInfo_default_instance_;
class AddressInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddressInfo> {
} _AddressInfo_default_instance_;
class WareInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WareInfo> {
} _WareInfo_default_instance_;
class UserTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserType> {
} _UserType_default_instance_;
class UserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserInfo> {
} _UserInfo_default_instance_;
class IndexReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IndexReq> {
} _IndexReq_default_instance_;
class IndexTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IndexType> {
} _IndexType_default_instance_;
class IndexAdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IndexAd> {
} _IndexAd_default_instance_;
class IndexAdGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IndexAdGroup> {
} _IndexAdGroup_default_instance_;
class IndexRep_GroupsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IndexRep::IndexRep_GroupsEntry> {
} _IndexRep_GroupsEntry_default_instance_;
class IndexRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IndexRep> {
} _IndexRep_default_instance_;
class ListRegionsReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListRegionsReq> {
} _ListRegionsReq_default_instance_;
class ListRegionsRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListRegionsRep> {
} _ListRegionsRep_default_instance_;
class ListCarReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCarReq> {
} _ListCarReq_default_instance_;
class ListCarRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCarRep> {
} _ListCarRep_default_instance_;
class SendAuthReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendAuthReq> {
} _SendAuthReq_default_instance_;
class SendAuthRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendAuthRep> {
} _SendAuthRep_default_instance_;
class PublicInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PublicInfoReq> {
} _PublicInfoReq_default_instance_;
class PublicInfoRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PublicInfoRep> {
} _PublicInfoRep_default_instance_;
class ListUserTypeReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListUserTypeReq> {
} _ListUserTypeReq_default_instance_;
class ListUserTypeRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListUserTypeRep> {
} _ListUserTypeRep_default_instance_;
class IndexAdInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IndexAdInfoReq> {
} _IndexAdInfoReq_default_instance_;
class IndexAdInfoRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IndexAdInfoRep> {
} _IndexAdInfoRep_default_instance_;
class SetDeviceIdReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetDeviceIdReq> {
} _SetDeviceIdReq_default_instance_;
class SetDeviceIdRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetDeviceIdRep> {
} _SetDeviceIdRep_default_instance_;
class CheckUpdateReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckUpdateReq> {
} _CheckUpdateReq_default_instance_;
class CheckUpdateRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckUpdateRep> {
} _CheckUpdateRep_default_instance_;

namespace protobuf_public_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[56];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrandInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrandInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrandInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrandInfo, icon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeInfo, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeInfo, icon_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeInfo, icon_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeInfo, recommend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeInfo, notice_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceRange, beg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceRange, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceRange, price_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetInfo, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetInfo, brief_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetInfo, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetInfo, discount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, original_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, buy_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, add_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, ranges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriceInfo, start_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrInfo, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrInfo, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrGroup, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrGroup, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttrGroup, attrs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, inventory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, sets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapInfo, disabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, prices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, attrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, maps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, brief_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, disabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoodsInfo, is_collect_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoticeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoticeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoticeInfo, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoticeInfo, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListNoticeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListNoticeReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListNoticeRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListNoticeRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtInfo, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, is_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageInfo, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMessageReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMessageReq, skip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMessageReq, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMessageRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListMessageRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageRep, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessageReadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessageReadReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessageReadReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessageReadRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessageReadRep, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMessageReadRep, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewMessageReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewMessageRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewMessageRep, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo, lng_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordInfo, lat_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageInfo, small_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageInfo, big_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageInfo, md5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CouponInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CouponInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CouponInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CouponInfo, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CouponInfo, discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CouponInfo, exp_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, load_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, capacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, mark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CarInfo, photos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, coord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, default__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, regions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddressInfo, is_pass_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareInfo, coord_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserType, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserType, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserType, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserType, parent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, reg_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, coupon_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, is_pass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, disabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, deliver_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, mark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexType, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexType, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexType, icon_m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexType, icon_s_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAd, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAd, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAd, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdGroup, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdGroup, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdGroup, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdGroup, ads_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexRep, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexRep, groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexRep, md5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListRegionsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListRegionsReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListRegionsRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListRegionsRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCarReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCarRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCarRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAuthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAuthReq, mobile_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAuthRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAuthRep, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublicInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublicInfoReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublicInfoRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublicInfoRep, shop_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublicInfoRep, deliver_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublicInfoRep, clause_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublicInfoRep, rule_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserTypeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserTypeReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserTypeRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserTypeRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoRep, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoRep, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoRep, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoRep, banner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IndexAdInfoRep, goods_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDeviceIdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDeviceIdReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDeviceIdReq, device_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDeviceIdRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateReq, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateReq, platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRep, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRep, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRep, has_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRep, is_must_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUpdateRep, desc_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(BrandInfo)},
  { 8, -1, sizeof(TypeInfo)},
  { 20, -1, sizeof(PriceRange)},
  { 28, -1, sizeof(SetInfo)},
  { 39, -1, sizeof(PriceInfo)},
  { 55, -1, sizeof(AttrInfo)},
  { 62, -1, sizeof(AttrGroup)},
  { 70, -1, sizeof(MapInfo)},
  { 81, -1, sizeof(GoodsInfo)},
  { 101, -1, sizeof(NoticeInfo)},
  { 109, -1, sizeof(ListNoticeReq)},
  { 115, -1, sizeof(ListNoticeRep)},
  { 121, -1, sizeof(ExtInfo)},
  { 128, -1, sizeof(MessageInfo)},
  { 140, -1, sizeof(ListMessageReq)},
  { 148, -1, sizeof(ListMessageRep)},
  { 154, -1, sizeof(DeleteMessageReq)},
  { 161, -1, sizeof(DeleteMessageRep)},
  { 167, -1, sizeof(SetMessageReadReq)},
  { 174, -1, sizeof(SetMessageReadRep)},
  { 181, -1, sizeof(GetNewMessageReq)},
  { 187, -1, sizeof(GetNewMessageRep)},
  { 193, -1, sizeof(CoordInfo)},
  { 200, -1, sizeof(RegionInfo)},
  { 209, -1, sizeof(ImageInfo)},
  { 217, -1, sizeof(CouponInfo)},
  { 227, -1, sizeof(CarInfo)},
  { 241, -1, sizeof(AddressInfo)},
  { 258, -1, sizeof(WareInfo)},
  { 272, -1, sizeof(UserType)},
  { 281, -1, sizeof(UserInfo)},
  { 304, -1, sizeof(IndexReq)},
  { 310, -1, sizeof(IndexType)},
  { 319, -1, sizeof(IndexAd)},
  { 327, -1, sizeof(IndexAdGroup)},
  { 336, -1, sizeof(IndexRep)},
  { 344, -1, sizeof(ListRegionsReq)},
  { 350, -1, sizeof(ListRegionsRep)},
  { 356, -1, sizeof(ListCarReq)},
  { 362, -1, sizeof(ListCarRep)},
  { 368, -1, sizeof(SendAuthReq)},
  { 374, -1, sizeof(SendAuthRep)},
  { 380, -1, sizeof(PublicInfoReq)},
  { 386, -1, sizeof(PublicInfoRep)},
  { 395, -1, sizeof(ListUserTypeReq)},
  { 401, -1, sizeof(ListUserTypeRep)},
  { 407, -1, sizeof(IndexAdInfoReq)},
  { 414, -1, sizeof(IndexAdInfoRep)},
  { 424, -1, sizeof(SetDeviceIdReq)},
  { 431, -1, sizeof(SetDeviceIdRep)},
  { 436, -1, sizeof(CheckUpdateReq)},
  { 444, -1, sizeof(CheckUpdateRep)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BrandInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TypeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PriceRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PriceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AttrInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AttrGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MapInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GoodsInfo_PricesEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GoodsInfo_AttrsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GoodsInfo_MapsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GoodsInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NoticeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListNoticeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListNoticeRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExtInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListMessageRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteMessageRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetMessageReadReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetMessageReadRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetNewMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetNewMessageRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CoordInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ImageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CouponInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CarInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddressInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WareInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexAd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexAdGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexRep_GroupsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListRegionsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListRegionsRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCarRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendAuthReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendAuthRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PublicInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PublicInfoRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListUserTypeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListUserTypeRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexAdInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IndexAdInfoRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetDeviceIdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetDeviceIdRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckUpdateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckUpdateRep_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "public.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[8].reflection = GoodsInfo::GoodsInfo_PricesEntry::CreateReflection(file_level_metadata[8].descriptor, _GoodsInfo_PricesEntry_default_instance_.get_mutable());
file_level_metadata[9].reflection = GoodsInfo::GoodsInfo_AttrsEntry::CreateReflection(file_level_metadata[9].descriptor, _GoodsInfo_AttrsEntry_default_instance_.get_mutable());
file_level_metadata[10].reflection = GoodsInfo::GoodsInfo_MapsEntry::CreateReflection(file_level_metadata[10].descriptor, _GoodsInfo_MapsEntry_default_instance_.get_mutable());
file_level_metadata[38].reflection = IndexRep::IndexRep_GroupsEntry::CreateReflection(file_level_metadata[38].descriptor, _IndexRep_GroupsEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 56);
}

}  // namespace

void TableStruct::Shutdown() {
  _BrandInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TypeInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PriceRange_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SetInfo_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PriceInfo_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _AttrInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _AttrGroup_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _MapInfo_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _GoodsInfo_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _NoticeInfo_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _ListNoticeReq_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _ListNoticeRep_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _ExtInfo_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _MessageInfo_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _ListMessageReq_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _ListMessageRep_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _DeleteMessageReq_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _DeleteMessageRep_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _SetMessageReadReq_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _SetMessageReadRep_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _GetNewMessageReq_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _GetNewMessageRep_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _CoordInfo_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _RegionInfo_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _ImageInfo_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CouponInfo_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CarInfo_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _AddressInfo_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _WareInfo_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _UserType_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _UserInfo_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _IndexReq_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _IndexType_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _IndexAd_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _IndexAdGroup_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _IndexRep_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _ListRegionsReq_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _ListRegionsRep_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _ListCarReq_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _ListCarRep_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _SendAuthReq_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _SendAuthRep_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _PublicInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _PublicInfoRep_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _ListUserTypeReq_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _ListUserTypeRep_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _IndexAdInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _IndexAdInfoRep_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _SetDeviceIdReq_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _SetDeviceIdRep_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _CheckUpdateReq_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _CheckUpdateRep_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  delete file_level_metadata[8].reflection;
  delete file_level_metadata[9].reflection;
  delete file_level_metadata[10].reflection;
  delete file_level_metadata[38].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BrandInfo_default_instance_.DefaultConstruct();
  _TypeInfo_default_instance_.DefaultConstruct();
  _PriceRange_default_instance_.DefaultConstruct();
  _SetInfo_default_instance_.DefaultConstruct();
  _PriceInfo_default_instance_.DefaultConstruct();
  _AttrInfo_default_instance_.DefaultConstruct();
  _AttrGroup_default_instance_.DefaultConstruct();
  _MapInfo_default_instance_.DefaultConstruct();
  _GoodsInfo_PricesEntry_default_instance_.DefaultConstruct();
  _GoodsInfo_AttrsEntry_default_instance_.DefaultConstruct();
  _GoodsInfo_MapsEntry_default_instance_.DefaultConstruct();
  _GoodsInfo_default_instance_.DefaultConstruct();
  _NoticeInfo_default_instance_.DefaultConstruct();
  _ListNoticeReq_default_instance_.DefaultConstruct();
  _ListNoticeRep_default_instance_.DefaultConstruct();
  _ExtInfo_default_instance_.DefaultConstruct();
  _MessageInfo_default_instance_.DefaultConstruct();
  _ListMessageReq_default_instance_.DefaultConstruct();
  _ListMessageRep_default_instance_.DefaultConstruct();
  _DeleteMessageReq_default_instance_.DefaultConstruct();
  _DeleteMessageRep_default_instance_.DefaultConstruct();
  _SetMessageReadReq_default_instance_.DefaultConstruct();
  _SetMessageReadRep_default_instance_.DefaultConstruct();
  _GetNewMessageReq_default_instance_.DefaultConstruct();
  _GetNewMessageRep_default_instance_.DefaultConstruct();
  _CoordInfo_default_instance_.DefaultConstruct();
  _RegionInfo_default_instance_.DefaultConstruct();
  _ImageInfo_default_instance_.DefaultConstruct();
  _CouponInfo_default_instance_.DefaultConstruct();
  _CarInfo_default_instance_.DefaultConstruct();
  _AddressInfo_default_instance_.DefaultConstruct();
  _WareInfo_default_instance_.DefaultConstruct();
  _UserType_default_instance_.DefaultConstruct();
  _UserInfo_default_instance_.DefaultConstruct();
  _IndexReq_default_instance_.DefaultConstruct();
  _IndexType_default_instance_.DefaultConstruct();
  _IndexAd_default_instance_.DefaultConstruct();
  _IndexAdGroup_default_instance_.DefaultConstruct();
  _IndexRep_GroupsEntry_default_instance_.DefaultConstruct();
  _IndexRep_default_instance_.DefaultConstruct();
  _ListRegionsReq_default_instance_.DefaultConstruct();
  _ListRegionsRep_default_instance_.DefaultConstruct();
  _ListCarReq_default_instance_.DefaultConstruct();
  _ListCarRep_default_instance_.DefaultConstruct();
  _SendAuthReq_default_instance_.DefaultConstruct();
  _SendAuthRep_default_instance_.DefaultConstruct();
  _PublicInfoReq_default_instance_.DefaultConstruct();
  _PublicInfoRep_default_instance_.DefaultConstruct();
  _ListUserTypeReq_default_instance_.DefaultConstruct();
  _ListUserTypeRep_default_instance_.DefaultConstruct();
  _IndexAdInfoReq_default_instance_.DefaultConstruct();
  _IndexAdInfoRep_default_instance_.DefaultConstruct();
  _SetDeviceIdReq_default_instance_.DefaultConstruct();
  _SetDeviceIdRep_default_instance_.DefaultConstruct();
  _CheckUpdateReq_default_instance_.DefaultConstruct();
  _CheckUpdateRep_default_instance_.DefaultConstruct();
  _BrandInfo_default_instance_.get_mutable()->icon_ = const_cast< ::ttmall::ImageInfo*>(
      ::ttmall::ImageInfo::internal_default_instance());
  _GoodsInfo_PricesEntry_default_instance_.get_mutable()->set_default_instance(_GoodsInfo_PricesEntry_default_instance_.get_mutable());
  _GoodsInfo_PricesEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _GoodsInfo_AttrsEntry_default_instance_.get_mutable()->set_default_instance(_GoodsInfo_AttrsEntry_default_instance_.get_mutable());
  _GoodsInfo_AttrsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _GoodsInfo_MapsEntry_default_instance_.get_mutable()->set_default_instance(_GoodsInfo_MapsEntry_default_instance_.get_mutable());
  _GoodsInfo_MapsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _MessageInfo_default_instance_.get_mutable()->ext_ = const_cast< ::ttmall::ExtInfo*>(
      ::ttmall::ExtInfo::internal_default_instance());
  _AddressInfo_default_instance_.get_mutable()->coord_ = const_cast< ::ttmall::CoordInfo*>(
      ::ttmall::CoordInfo::internal_default_instance());
  _WareInfo_default_instance_.get_mutable()->coord_ = const_cast< ::ttmall::CoordInfo*>(
      ::ttmall::CoordInfo::internal_default_instance());
  _UserInfo_default_instance_.get_mutable()->avatar_ = const_cast< ::ttmall::ImageInfo*>(
      ::ttmall::ImageInfo::internal_default_instance());
  _UserInfo_default_instance_.get_mutable()->address_ = const_cast< ::ttmall::AddressInfo*>(
      ::ttmall::AddressInfo::internal_default_instance());
  _IndexType_default_instance_.get_mutable()->icon_m_ = const_cast< ::ttmall::ImageInfo*>(
      ::ttmall::ImageInfo::internal_default_instance());
  _IndexType_default_instance_.get_mutable()->icon_s_ = const_cast< ::ttmall::ImageInfo*>(
      ::ttmall::ImageInfo::internal_default_instance());
  _IndexAd_default_instance_.get_mutable()->image_ = const_cast< ::ttmall::ImageInfo*>(
      ::ttmall::ImageInfo::internal_default_instance());
  _IndexRep_GroupsEntry_default_instance_.get_mutable()->set_default_instance(_IndexRep_GroupsEntry_default_instance_.get_mutable());
  _IndexRep_GroupsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _IndexAdInfoRep_default_instance_.get_mutable()->banner_ = const_cast< ::ttmall::ImageInfo*>(
      ::ttmall::ImageInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014public.proto\022\006ttmall\"F\n\tBrandInfo\022\n\n\002i"
      "d\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\037\n\004icon\030\003 \001(\0132\021.tt"
      "mall.ImageInfo\"w\n\010TypeInfo\022\n\n\002id\030\001 \001(\t\022\014"
      "\n\004name\030\002 \001(\t\022\016\n\006parent\030\003 \001(\t\022\016\n\006icon_m\030\004"
      " \001(\t\022\016\n\006icon_s\030\005 \001(\t\022\021\n\trecommend\030\006 \001(\010\022"
      "\016\n\006notice\030\007 \001(\t\"5\n\nPriceRange\022\013\n\003beg\030\001 \001"
      "(\005\022\013\n\003end\030\002 \001(\005\022\r\n\005price\030\003 \001(\005\"b\n\007SetInf"
      "o\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005count\030\003 \001"
      "(\005\022\r\n\005brief\030\004 \001(\t\022\r\n\005price\030\005 \001(\005\022\020\n\010disc"
      "ount\030\006 \001(\005\"\333\001\n\tPriceInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004"
      "name\030\002 \001(\t\022\036\n\004type\030\003 \001(\0162\020.ttmall.SaleTy"
      "pe\022\r\n\005price\030\004 \001(\005\022\020\n\010original\030\005 \001(\005\022\017\n\007b"
      "uy_num\030\006 \001(\005\022\017\n\007add_num\030\007 \001(\005\022\020\n\010discoun"
      "t\030\010 \001(\005\022\"\n\006ranges\030\t \003(\0132\022.ttmall.PriceRa"
      "nge\022\014\n\004unit\030\n \001(\t\022\r\n\005start\030\013 \001(\005\"&\n\010Attr"
      "Info\022\014\n\004code\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"H\n\tAttr"
      "Group\022\014\n\004code\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\037\n\005att"
      "rs\030\003 \003(\0132\020.ttmall.AttrInfo\"\214\001\n\007MapInfo\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005price\030\002 \001(\t\022!\n\006images\030\003 \003"
      "(\0132\021.ttmall.ImageInfo\022\021\n\tinventory\030\004 \001(\005"
      "\022\035\n\004sets\030\005 \003(\0132\017.ttmall.SetInfo\022\020\n\010disab"
      "led\030\006 \001(\010\"\237\004\n\tGoodsInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004n"
      "ame\030\002 \001(\t\022\r\n\005alias\030\003 \003(\t\022!\n\006images\030\004 \003(\013"
      "2\021.ttmall.ImageInfo\022\014\n\004area\030\005 \001(\t\022\014\n\004des"
      "c\030\006 \001(\t\022\017\n\007type_id\030\007 \003(\t\022-\n\006prices\030\010 \003(\013"
      "2\035.ttmall.GoodsInfo.PricesEntry\022+\n\005attrs"
      "\030\t \003(\0132\034.ttmall.GoodsInfo.AttrsEntry\022)\n\004"
      "maps\030\n \003(\0132\033.ttmall.GoodsInfo.MapsEntry\022"
      "\016\n\006key_id\030\013 \001(\t\022\r\n\005brief\030\014 \001(\t\022\020\n\010disabl"
      "ed\030\r \001(\010\022\014\n\004code\030\016 \001(\t\022\022\n\nis_collect\030\017 \001"
      "(\010\032@\n\013PricesEntry\022\013\n\003key\030\001 \001(\t\022 \n\005value\030"
      "\002 \001(\0132\021.ttmall.PriceInfo:\0028\001\032\?\n\nAttrsEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022 \n\005value\030\002 \001(\0132\021.ttmall."
      "AttrGroup:\0028\001\032<\n\tMapsEntry\022\013\n\003key\030\001 \001(\t\022"
      "\036\n\005value\030\002 \001(\0132\017.ttmall.MapInfo:\0028\001\"7\n\nN"
      "oticeInfo\022\n\n\002id\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\014"
      "\n\004time\030\003 \001(\003\"\036\n\rListNoticeReq\022\r\n\005token\030\001"
      " \001(\t\"2\n\rListNoticeRep\022!\n\005items\030\001 \003(\0132\022.t"
      "tmall.NoticeInfo\"#\n\007ExtInfo\022\014\n\004type\030\001 \001("
      "\005\022\n\n\002id\030\002 \001(\t\"\231\001\n\013MessageInfo\022\n\n\002id\030\001 \001("
      "\t\022!\n\004type\030\002 \001(\0162\023.ttmall.MessageType\022\r\n\005"
      "title\030\003 \001(\t\022\017\n\007content\030\004 \001(\t\022\017\n\007is_read\030"
      "\005 \001(\010\022\014\n\004time\030\006 \001(\003\022\034\n\003ext\030\007 \001(\0132\017.ttmal"
      "l.ExtInfo\"<\n\016ListMessageReq\022\r\n\005token\030\001 \001"
      "(\t\022\014\n\004skip\030\002 \001(\005\022\r\n\005limit\030\003 \001(\005\"4\n\016ListM"
      "essageRep\022\"\n\005items\030\001 \003(\0132\023.ttmall.Messag"
      "eInfo\"-\n\020DeleteMessageReq\022\r\n\005token\030\001 \001(\t"
      "\022\n\n\002id\030\002 \001(\t\"\036\n\020DeleteMessageRep\022\n\n\002id\030\001"
      " \001(\t\".\n\021SetMessageReadReq\022\r\n\005token\030\001 \001(\t"
      "\022\n\n\002id\030\002 \001(\t\".\n\021SetMessageReadRep\022\n\n\002id\030"
      "\001 \001(\t\022\r\n\005count\030\002 \001(\005\"!\n\020GetNewMessageReq"
      "\022\r\n\005token\030\001 \001(\t\"!\n\020GetNewMessageRep\022\r\n\005c"
      "ount\030\001 \001(\005\"%\n\tCoordInfo\022\013\n\003lng\030\001 \001(\001\022\013\n\003"
      "lat\030\002 \001(\001\"D\n\nRegionInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004n"
      "ame\030\002 \001(\t\022\016\n\006parent\030\003 \001(\t\022\014\n\004code\030\004 \001(\t\""
      "4\n\tImageInfo\022\r\n\005small\030\001 \001(\t\022\013\n\003big\030\002 \001(\t"
      "\022\013\n\003md5\030\003 \001(\t\"Z\n\nCouponInfo\022\n\n\002id\030\001 \001(\t\022"
      "\014\n\004name\030\002 \001(\t\022\016\n\006amount\030\003 \001(\005\022\020\n\010discoun"
      "t\030\004 \001(\005\022\020\n\010exp_time\030\005 \001(\003\"\242\001\n\007CarInfo\022\n\n"
      "\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005model\030\003 \001(\t\022\016"
      "\n\006length\030\004 \001(\t\022\014\n\004load\030\005 \001(\t\022\020\n\010capacity"
      "\030\006 \001(\t\022\r\n\005color\030\007 \001(\t\022\014\n\004mark\030\010 \001(\t\022!\n\006p"
      "hotos\030\t \003(\0132\021.ttmall.ImageInfo\"\331\001\n\013Addre"
      "ssInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\020\n\010prov"
      "ince\030\003 \001(\t\022\014\n\004city\030\004 \001(\t\022\014\n\004area\030\005 \001(\t\022\014"
      "\n\004addr\030\006 \001(\t\022\017\n\007contact\030\007 \001(\t\022\016\n\006mobile\030"
      "\010 \001(\t\022 \n\005coord\030\t \001(\0132\021.ttmall.CoordInfo\022"
      "\017\n\007default\030\n \001(\010\022\017\n\007regions\030\013 \003(\t\022\017\n\007is_"
      "pass\030\014 \001(\010\"\243\001\n\010WareInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004n"
      "ame\030\002 \001(\t\022\020\n\010province\030\003 \001(\t\022\014\n\004city\030\004 \001("
      "\t\022\014\n\004area\030\005 \001(\t\022\014\n\004addr\030\006 \001(\t\022\017\n\007contact"
      "\030\007 \001(\t\022\016\n\006mobile\030\010 \001(\t\022 \n\005coord\030\t \001(\0132\021."
      "ttmall.CoordInfo\"B\n\010UserType\022\n\n\002id\030\001 \001(\t"
      "\022\014\n\004code\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\016\n\006parent\030\004"
      " \001(\t\"\355\002\n\010UserInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 "
      "\001(\t\022!\n\006avatar\030\003 \001(\0132\021.ttmall.ImageInfo\022\r"
      "\n\005owner\030\004 \001(\t\022\014\n\004type\030\005 \001(\t\022!\n\006images\030\006 "
      "\003(\0132\021.ttmall.ImageInfo\022\016\n\006mobile\030\007 \001(\t\022\022"
      "\n\nlogin_time\030\010 \001(\003\022\020\n\010reg_time\030\t \001(\003\022\017\n\007"
      "balance\030\n \001(\005\022\022\n\ncoupon_num\030\013 \001(\005\022\017\n\007is_"
      "pass\030\014 \001(\010\022$\n\007address\030\r \001(\0132\023.ttmall.Add"
      "ressInfo\022\r\n\005level\030\016 \001(\005\022\r\n\005types\030\017 \003(\t\022\020"
      "\n\010disabled\030\020 \001(\010\022\024\n\014deliver_time\030\021 \001(\t\022\014"
      "\n\004mark\030\022 \001(\t\"\031\n\010IndexReq\022\r\n\005token\030\001 \001(\t\""
      "k\n\tIndexType\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022!"
      "\n\006icon_m\030\003 \001(\0132\021.ttmall.ImageInfo\022!\n\006ico"
      "n_s\030\004 \001(\0132\021.ttmall.ImageInfo\"F\n\007IndexAd\022"
      "\n\n\002id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022 \n\005image\030\003 \001("
      "\0132\021.ttmall.ImageInfo\"j\n\014IndexAdGroup\022 \n\004"
      "type\030\001 \001(\0162\022.ttmall.AdPosition\022\014\n\004name\030\002"
      " \001(\t\022\014\n\004desc\030\003 \001(\t\022\034\n\003ads\030\004 \003(\0132\017.ttmall"
      ".IndexAd\"\254\001\n\010IndexRep\022 \n\005types\030\001 \003(\0132\021.t"
      "tmall.IndexType\022,\n\006groups\030\002 \003(\0132\034.ttmall"
      ".IndexRep.GroupsEntry\022\013\n\003md5\030\003 \001(\t\032C\n\013Gr"
      "oupsEntry\022\013\n\003key\030\001 \001(\005\022#\n\005value\030\002 \001(\0132\024."
      "ttmall.IndexAdGroup:\0028\001\"\037\n\016ListRegionsRe"
      "q\022\r\n\005token\030\001 \001(\t\"3\n\016ListRegionsRep\022!\n\005It"
      "ems\030\001 \003(\0132\022.ttmall.RegionInfo\"\033\n\nListCar"
      "Req\022\r\n\005token\030\001 \001(\t\",\n\nListCarRep\022\036\n\005Item"
      "s\030\001 \003(\0132\017.ttmall.CarInfo\"\035\n\013SendAuthReq\022"
      "\016\n\006mobile\030\001 \001(\t\"\034\n\013SendAuthRep\022\r\n\005token\030"
      "\001 \001(\t\"\036\n\rPublicInfoReq\022\r\n\005token\030\001 \001(\t\"`\n"
      "\rPublicInfoRep\022\022\n\nshop_types\030\001 \003(\t\022\025\n\rde"
      "liver_times\030\002 \003(\t\022\022\n\nclause_url\030\003 \001(\t\022\020\n"
      "\010rule_url\030\004 \001(\t\" \n\017ListUserTypeReq\022\r\n\005to"
      "ken\030\001 \001(\t\"2\n\017ListUserTypeRep\022\037\n\005items\030\001 "
      "\003(\0132\020.ttmall.UserType\"+\n\016IndexAdInfoReq\022"
      "\r\n\005token\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\"~\n\016IndexAdInf"
      "oRep\022\n\n\002id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\014\n\004desc\030"
      "\003 \001(\t\022!\n\006banner\030\004 \001(\0132\021.ttmall.ImageInfo"
      "\022 \n\005goods\030\005 \003(\0132\021.ttmall.GoodsInfo\"2\n\016Se"
      "tDeviceIdReq\022\r\n\005token\030\001 \001(\t\022\021\n\tdevice_id"
      "\030\002 \001(\t\"\020\n\016SetDeviceIdRep\"m\n\016CheckUpdateR"
      "eq\022 \n\004type\030\001 \001(\0162\022.ttmall.UpdateType\022\017\n\007"
      "version\030\002 \001(\005\022(\n\010platform\030\003 \001(\0162\026.ttmall"
      ".DevicePlatform\"a\n\016CheckUpdateRep\022\017\n\007ver"
      "sion\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\022\022\n\nhas_update\030\003 "
      "\001(\010\022\017\n\007is_must\030\004 \001(\010\022\014\n\004desc\030\005 \001(\t*`\n\016De"
      "vicePlatform\022\030\n\024DEVICE_PLATFORM_NONE\020\000\022\033"
      "\n\027DEVICE_PLATFORM_ANDROID\020\001\022\027\n\023DEVICE_PL"
      "ATFORM_IOS\020\002*H\n\010SaleType\022\r\n\tFIX_PRICE\020\000\022"
      "\014\n\010DIS_GIFT\020\001\022\016\n\nDIS_REBATE\020\002\022\017\n\013RANGE_P"
      "RICE\020\003*3\n\013MessageType\022\013\n\007MT_NONE\020\000\022\013\n\007MT"
      "_PUSH\020\001\022\n\n\006MT_SMS\020\002*\212\002\n\005Error\022\013\n\007SUCCESS"
      "\020\000\022\t\n\005PANIC\020d\022\016\n\tARGS_MISS\020\350\007\022\017\n\nNEED_LO"
      "GIN\020\220N\022\014\n\007DB_MISS\020\221N\022\021\n\014LOGIN_FAILED\020\222N\022"
      "\021\n\014USER_DISABLE\020\223N\022\023\n\016AUTH_NOT_VALID\020\224N\022"
      "\022\n\rMOBILE_EXISTS\020\225N\022\024\n\017USER_NOT_EXISTS\020\226"
      "N\022\023\n\016DRIVER_IS_PASS\020\227N\022\024\n\017DRIVER_NOT_PAS"
      "S\020\230N\022\025\n\020ADDRESS_DISABLED\020\231N\022\023\n\016MISS_PRIV"
      "ILAGE\020\232N*^\n\nAdPosition\022\007\n\003AD1\020\000\022\007\n\003AD2\020\001"
      "\022\016\n\nRECOMMEND1\020\002\022\016\n\nRECOMMEND2\020\003\022\016\n\nRECO"
      "MMEND3\020\004\022\016\n\nRECOMMEND4\020\005*i\n\nUpdateType\022\024"
      "\n\020UPDATE_TYPE_NONE\020\000\022\026\n\022UPDATE_TYPE_TTMA"
      "LL\020\001\022\026\n\022UPDATE_TYPE_DRIVER\020\002\022\025\n\021UPDATE_T"
      "YPE_SALER\020\0032\373\003\n\rPublicService\022\?\n\013CheckUp"
      "date\022\026.ttmall.CheckUpdateReq\032\026.ttmall.Ch"
      "eckUpdateRep\"\000\022\?\n\013IndexAdInfo\022\026.ttmall.I"
      "ndexAdInfoReq\032\026.ttmall.IndexAdInfoRep\"\000\022"
      "B\n\014ListUserType\022\027.ttmall.ListUserTypeReq"
      "\032\027.ttmall.ListUserTypeRep\"\000\022<\n\nListNotic"
      "e\022\025.ttmall.ListNoticeReq\032\025.ttmall.ListNo"
      "ticeRep\"\000\022<\n\nPublicInfo\022\025.ttmall.PublicI"
      "nfoReq\032\025.ttmall.PublicInfoRep\"\000\0224\n\010ListC"
      "ars\022\022.ttmall.ListCarReq\032\022.ttmall.ListCar"
      "Rep\"\000\022\?\n\013ListRegions\022\026.ttmall.ListRegion"
      "sReq\032\026.ttmall.ListRegionsRep\"\000\0221\n\tIndexI"
      "nfo\022\020.ttmall.IndexReq\032\020.ttmall.IndexRep\""
      "\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5929);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "public.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_public_2eproto

const ::google::protobuf::EnumDescriptor* DevicePlatform_descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_enum_descriptors[0];
}
bool DevicePlatform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SaleType_descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_enum_descriptors[1];
}
bool SaleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_enum_descriptors[2];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Error_descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_enum_descriptors[3];
}
bool Error_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 1000:
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
    case 10008:
    case 10009:
    case 10010:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AdPosition_descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_enum_descriptors[4];
}
bool AdPosition_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UpdateType_descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_enum_descriptors[5];
}
bool UpdateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BrandInfo::kIdFieldNumber;
const int BrandInfo::kNameFieldNumber;
const int BrandInfo::kIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BrandInfo::BrandInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.BrandInfo)
}
BrandInfo::BrandInfo(const BrandInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_icon()) {
    icon_ = new ::ttmall::ImageInfo(*from.icon_);
  } else {
    icon_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.BrandInfo)
}

void BrandInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_ = NULL;
  _cached_size_ = 0;
}

BrandInfo::~BrandInfo() {
  // @@protoc_insertion_point(destructor:ttmall.BrandInfo)
  SharedDtor();
}

void BrandInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete icon_;
  }
}

void BrandInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BrandInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BrandInfo& BrandInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

BrandInfo* BrandInfo::New(::google::protobuf::Arena* arena) const {
  BrandInfo* n = new BrandInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BrandInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.BrandInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && icon_ != NULL) {
    delete icon_;
  }
  icon_ = NULL;
}

bool BrandInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.BrandInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.BrandInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.BrandInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.ImageInfo icon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_icon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.BrandInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.BrandInfo)
  return false;
#undef DO_
}

void BrandInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.BrandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.BrandInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.BrandInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .ttmall.ImageInfo icon = 3;
  if (this->has_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->icon_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.BrandInfo)
}

::google::protobuf::uint8* BrandInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.BrandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.BrandInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.BrandInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .ttmall.ImageInfo icon = 3;
  if (this->has_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->icon_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.BrandInfo)
  return target;
}

size_t BrandInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.BrandInfo)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .ttmall.ImageInfo icon = 3;
  if (this->has_icon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->icon_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BrandInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.BrandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BrandInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BrandInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.BrandInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.BrandInfo)
    MergeFrom(*source);
  }
}

void BrandInfo::MergeFrom(const BrandInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.BrandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_icon()) {
    mutable_icon()->::ttmall::ImageInfo::MergeFrom(from.icon());
  }
}

void BrandInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.BrandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BrandInfo::CopyFrom(const BrandInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.BrandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrandInfo::IsInitialized() const {
  return true;
}

void BrandInfo::Swap(BrandInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BrandInfo::InternalSwap(BrandInfo* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(icon_, other->icon_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BrandInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BrandInfo

// string id = 1;
void BrandInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BrandInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.BrandInfo.id)
  return id_.GetNoArena();
}
void BrandInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.BrandInfo.id)
}
#if LANG_CXX11
void BrandInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.BrandInfo.id)
}
#endif
void BrandInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.BrandInfo.id)
}
void BrandInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.BrandInfo.id)
}
::std::string* BrandInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.BrandInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BrandInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.BrandInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BrandInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.BrandInfo.id)
}

// string name = 2;
void BrandInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BrandInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.BrandInfo.name)
  return name_.GetNoArena();
}
void BrandInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.BrandInfo.name)
}
#if LANG_CXX11
void BrandInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.BrandInfo.name)
}
#endif
void BrandInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.BrandInfo.name)
}
void BrandInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.BrandInfo.name)
}
::std::string* BrandInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.BrandInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BrandInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.BrandInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BrandInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.BrandInfo.name)
}

// .ttmall.ImageInfo icon = 3;
bool BrandInfo::has_icon() const {
  return this != internal_default_instance() && icon_ != NULL;
}
void BrandInfo::clear_icon() {
  if (GetArenaNoVirtual() == NULL && icon_ != NULL) delete icon_;
  icon_ = NULL;
}
const ::ttmall::ImageInfo& BrandInfo::icon() const {
  // @@protoc_insertion_point(field_get:ttmall.BrandInfo.icon)
  return icon_ != NULL ? *icon_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
::ttmall::ImageInfo* BrandInfo::mutable_icon() {
  
  if (icon_ == NULL) {
    icon_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.BrandInfo.icon)
  return icon_;
}
::ttmall::ImageInfo* BrandInfo::release_icon() {
  // @@protoc_insertion_point(field_release:ttmall.BrandInfo.icon)
  
  ::ttmall::ImageInfo* temp = icon_;
  icon_ = NULL;
  return temp;
}
void BrandInfo::set_allocated_icon(::ttmall::ImageInfo* icon) {
  delete icon_;
  icon_ = icon;
  if (icon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.BrandInfo.icon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeInfo::kIdFieldNumber;
const int TypeInfo::kNameFieldNumber;
const int TypeInfo::kParentFieldNumber;
const int TypeInfo::kIconMFieldNumber;
const int TypeInfo::kIconSFieldNumber;
const int TypeInfo::kRecommendFieldNumber;
const int TypeInfo::kNoticeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeInfo::TypeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.TypeInfo)
}
TypeInfo::TypeInfo(const TypeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  icon_m_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon_m().size() > 0) {
    icon_m_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_m_);
  }
  icon_s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon_s().size() > 0) {
    icon_s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_s_);
  }
  notice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.notice().size() > 0) {
    notice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notice_);
  }
  recommend_ = from.recommend_;
  // @@protoc_insertion_point(copy_constructor:ttmall.TypeInfo)
}

void TypeInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_m_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recommend_ = false;
  _cached_size_ = 0;
}

TypeInfo::~TypeInfo() {
  // @@protoc_insertion_point(destructor:ttmall.TypeInfo)
  SharedDtor();
}

void TypeInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_m_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TypeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypeInfo& TypeInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

TypeInfo* TypeInfo::New(::google::protobuf::Arena* arena) const {
  TypeInfo* n = new TypeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.TypeInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_m_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recommend_ = false;
}

bool TypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.TypeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.TypeInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.TypeInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.TypeInfo.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon_m = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_m()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon_m().data(), this->icon_m().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.TypeInfo.icon_m"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon_s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_s()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon_s().data(), this->icon_s().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.TypeInfo.icon_s"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool recommend = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recommend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string notice = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->notice().data(), this->notice().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.TypeInfo.notice"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.TypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.TypeInfo)
  return false;
#undef DO_
}

void TypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.TypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->parent(), output);
  }

  // string icon_m = 4;
  if (this->icon_m().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_m().data(), this->icon_m().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.icon_m");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon_m(), output);
  }

  // string icon_s = 5;
  if (this->icon_s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_s().data(), this->icon_s().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.icon_s");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->icon_s(), output);
  }

  // bool recommend = 6;
  if (this->recommend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->recommend(), output);
  }

  // string notice = 7;
  if (this->notice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notice().data(), this->notice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.notice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->notice(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.TypeInfo)
}

::google::protobuf::uint8* TypeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.TypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->parent(), target);
  }

  // string icon_m = 4;
  if (this->icon_m().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_m().data(), this->icon_m().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.icon_m");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon_m(), target);
  }

  // string icon_s = 5;
  if (this->icon_s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_s().data(), this->icon_s().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.icon_s");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->icon_s(), target);
  }

  // bool recommend = 6;
  if (this->recommend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->recommend(), target);
  }

  // string notice = 7;
  if (this->notice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notice().data(), this->notice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.TypeInfo.notice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->notice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.TypeInfo)
  return target;
}

size_t TypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.TypeInfo)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string icon_m = 4;
  if (this->icon_m().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon_m());
  }

  // string icon_s = 5;
  if (this->icon_s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon_s());
  }

  // string notice = 7;
  if (this->notice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->notice());
  }

  // bool recommend = 6;
  if (this->recommend() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TypeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.TypeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.TypeInfo)
    MergeFrom(*source);
  }
}

void TypeInfo::MergeFrom(const TypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.icon_m().size() > 0) {

    icon_m_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_m_);
  }
  if (from.icon_s().size() > 0) {

    icon_s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_s_);
  }
  if (from.notice().size() > 0) {

    notice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notice_);
  }
  if (from.recommend() != 0) {
    set_recommend(from.recommend());
  }
}

void TypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeInfo::CopyFrom(const TypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeInfo::IsInitialized() const {
  return true;
}

void TypeInfo::Swap(TypeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeInfo::InternalSwap(TypeInfo* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  parent_.Swap(&other->parent_);
  icon_m_.Swap(&other->icon_m_);
  icon_s_.Swap(&other->icon_s_);
  notice_.Swap(&other->notice_);
  std::swap(recommend_, other->recommend_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeInfo

// string id = 1;
void TypeInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TypeInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.TypeInfo.id)
  return id_.GetNoArena();
}
void TypeInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.TypeInfo.id)
}
#if LANG_CXX11
void TypeInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.TypeInfo.id)
}
#endif
void TypeInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.TypeInfo.id)
}
void TypeInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.TypeInfo.id)
}
::std::string* TypeInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.TypeInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.TypeInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.TypeInfo.id)
}

// string name = 2;
void TypeInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TypeInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.TypeInfo.name)
  return name_.GetNoArena();
}
void TypeInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.TypeInfo.name)
}
#if LANG_CXX11
void TypeInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.TypeInfo.name)
}
#endif
void TypeInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.TypeInfo.name)
}
void TypeInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.TypeInfo.name)
}
::std::string* TypeInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.TypeInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.TypeInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.TypeInfo.name)
}

// string parent = 3;
void TypeInfo::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TypeInfo::parent() const {
  // @@protoc_insertion_point(field_get:ttmall.TypeInfo.parent)
  return parent_.GetNoArena();
}
void TypeInfo::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.TypeInfo.parent)
}
#if LANG_CXX11
void TypeInfo::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.TypeInfo.parent)
}
#endif
void TypeInfo::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.TypeInfo.parent)
}
void TypeInfo::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.TypeInfo.parent)
}
::std::string* TypeInfo::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.TypeInfo.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeInfo::release_parent() {
  // @@protoc_insertion_point(field_release:ttmall.TypeInfo.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeInfo::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:ttmall.TypeInfo.parent)
}

// string icon_m = 4;
void TypeInfo::clear_icon_m() {
  icon_m_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TypeInfo::icon_m() const {
  // @@protoc_insertion_point(field_get:ttmall.TypeInfo.icon_m)
  return icon_m_.GetNoArena();
}
void TypeInfo::set_icon_m(const ::std::string& value) {
  
  icon_m_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.TypeInfo.icon_m)
}
#if LANG_CXX11
void TypeInfo::set_icon_m(::std::string&& value) {
  
  icon_m_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.TypeInfo.icon_m)
}
#endif
void TypeInfo::set_icon_m(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_m_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.TypeInfo.icon_m)
}
void TypeInfo::set_icon_m(const char* value, size_t size) {
  
  icon_m_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.TypeInfo.icon_m)
}
::std::string* TypeInfo::mutable_icon_m() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.TypeInfo.icon_m)
  return icon_m_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeInfo::release_icon_m() {
  // @@protoc_insertion_point(field_release:ttmall.TypeInfo.icon_m)
  
  return icon_m_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeInfo::set_allocated_icon_m(::std::string* icon_m) {
  if (icon_m != NULL) {
    
  } else {
    
  }
  icon_m_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_m);
  // @@protoc_insertion_point(field_set_allocated:ttmall.TypeInfo.icon_m)
}

// string icon_s = 5;
void TypeInfo::clear_icon_s() {
  icon_s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TypeInfo::icon_s() const {
  // @@protoc_insertion_point(field_get:ttmall.TypeInfo.icon_s)
  return icon_s_.GetNoArena();
}
void TypeInfo::set_icon_s(const ::std::string& value) {
  
  icon_s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.TypeInfo.icon_s)
}
#if LANG_CXX11
void TypeInfo::set_icon_s(::std::string&& value) {
  
  icon_s_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.TypeInfo.icon_s)
}
#endif
void TypeInfo::set_icon_s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.TypeInfo.icon_s)
}
void TypeInfo::set_icon_s(const char* value, size_t size) {
  
  icon_s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.TypeInfo.icon_s)
}
::std::string* TypeInfo::mutable_icon_s() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.TypeInfo.icon_s)
  return icon_s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeInfo::release_icon_s() {
  // @@protoc_insertion_point(field_release:ttmall.TypeInfo.icon_s)
  
  return icon_s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeInfo::set_allocated_icon_s(::std::string* icon_s) {
  if (icon_s != NULL) {
    
  } else {
    
  }
  icon_s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_s);
  // @@protoc_insertion_point(field_set_allocated:ttmall.TypeInfo.icon_s)
}

// bool recommend = 6;
void TypeInfo::clear_recommend() {
  recommend_ = false;
}
bool TypeInfo::recommend() const {
  // @@protoc_insertion_point(field_get:ttmall.TypeInfo.recommend)
  return recommend_;
}
void TypeInfo::set_recommend(bool value) {
  
  recommend_ = value;
  // @@protoc_insertion_point(field_set:ttmall.TypeInfo.recommend)
}

// string notice = 7;
void TypeInfo::clear_notice() {
  notice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TypeInfo::notice() const {
  // @@protoc_insertion_point(field_get:ttmall.TypeInfo.notice)
  return notice_.GetNoArena();
}
void TypeInfo::set_notice(const ::std::string& value) {
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.TypeInfo.notice)
}
#if LANG_CXX11
void TypeInfo::set_notice(::std::string&& value) {
  
  notice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.TypeInfo.notice)
}
#endif
void TypeInfo::set_notice(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.TypeInfo.notice)
}
void TypeInfo::set_notice(const char* value, size_t size) {
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.TypeInfo.notice)
}
::std::string* TypeInfo::mutable_notice() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.TypeInfo.notice)
  return notice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeInfo::release_notice() {
  // @@protoc_insertion_point(field_release:ttmall.TypeInfo.notice)
  
  return notice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeInfo::set_allocated_notice(::std::string* notice) {
  if (notice != NULL) {
    
  } else {
    
  }
  notice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notice);
  // @@protoc_insertion_point(field_set_allocated:ttmall.TypeInfo.notice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriceRange::kBegFieldNumber;
const int PriceRange::kEndFieldNumber;
const int PriceRange::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriceRange::PriceRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.PriceRange)
}
PriceRange::PriceRange(const PriceRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&beg_, &from.beg_,
    reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&beg_) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:ttmall.PriceRange)
}

void PriceRange::SharedCtor() {
  ::memset(&beg_, 0, reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&beg_) + sizeof(price_));
  _cached_size_ = 0;
}

PriceRange::~PriceRange() {
  // @@protoc_insertion_point(destructor:ttmall.PriceRange)
  SharedDtor();
}

void PriceRange::SharedDtor() {
}

void PriceRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PriceRange::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriceRange& PriceRange::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

PriceRange* PriceRange::New(::google::protobuf::Arena* arena) const {
  PriceRange* n = new PriceRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PriceRange::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.PriceRange)
  ::memset(&beg_, 0, reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&beg_) + sizeof(price_));
}

bool PriceRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.PriceRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 beg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.PriceRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.PriceRange)
  return false;
#undef DO_
}

void PriceRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.PriceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 beg = 1;
  if (this->beg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->beg(), output);
  }

  // int32 end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end(), output);
  }

  // int32 price = 3;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->price(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.PriceRange)
}

::google::protobuf::uint8* PriceRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.PriceRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 beg = 1;
  if (this->beg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->beg(), target);
  }

  // int32 end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end(), target);
  }

  // int32 price = 3;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->price(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.PriceRange)
  return target;
}

size_t PriceRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.PriceRange)
  size_t total_size = 0;

  // int32 beg = 1;
  if (this->beg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->beg());
  }

  // int32 end = 2;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end());
  }

  // int32 price = 3;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PriceRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.PriceRange)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriceRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.PriceRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.PriceRange)
    MergeFrom(*source);
  }
}

void PriceRange::MergeFrom(const PriceRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.PriceRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.beg() != 0) {
    set_beg(from.beg());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void PriceRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.PriceRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceRange::CopyFrom(const PriceRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.PriceRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceRange::IsInitialized() const {
  return true;
}

void PriceRange::Swap(PriceRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriceRange::InternalSwap(PriceRange* other) {
  std::swap(beg_, other->beg_);
  std::swap(end_, other->end_);
  std::swap(price_, other->price_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PriceRange::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PriceRange

// int32 beg = 1;
void PriceRange::clear_beg() {
  beg_ = 0;
}
::google::protobuf::int32 PriceRange::beg() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceRange.beg)
  return beg_;
}
void PriceRange::set_beg(::google::protobuf::int32 value) {
  
  beg_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceRange.beg)
}

// int32 end = 2;
void PriceRange::clear_end() {
  end_ = 0;
}
::google::protobuf::int32 PriceRange::end() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceRange.end)
  return end_;
}
void PriceRange::set_end(::google::protobuf::int32 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceRange.end)
}

// int32 price = 3;
void PriceRange::clear_price() {
  price_ = 0;
}
::google::protobuf::int32 PriceRange::price() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceRange.price)
  return price_;
}
void PriceRange::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceRange.price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetInfo::kIdFieldNumber;
const int SetInfo::kNameFieldNumber;
const int SetInfo::kCountFieldNumber;
const int SetInfo::kBriefFieldNumber;
const int SetInfo::kPriceFieldNumber;
const int SetInfo::kDiscountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetInfo::SetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetInfo)
}
SetInfo::SetInfo(const SetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  brief_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brief().size() > 0) {
    brief_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brief_);
  }
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&count_) + sizeof(discount_));
  // @@protoc_insertion_point(copy_constructor:ttmall.SetInfo)
}

void SetInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brief_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&count_) + sizeof(discount_));
  _cached_size_ = 0;
}

SetInfo::~SetInfo() {
  // @@protoc_insertion_point(destructor:ttmall.SetInfo)
  SharedDtor();
}

void SetInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brief_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetInfo& SetInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetInfo* SetInfo::New(::google::protobuf::Arena* arena) const {
  SetInfo* n = new SetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brief_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&count_) + sizeof(discount_));
}

bool SetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brief = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brief()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brief().data(), this->brief().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetInfo.brief"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 discount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetInfo)
  return false;
#undef DO_
}

void SetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  // string brief = 4;
  if (this->brief().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brief().data(), this->brief().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetInfo.brief");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->brief(), output);
  }

  // int32 price = 5;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->price(), output);
  }

  // int32 discount = 6;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->discount(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SetInfo)
}

::google::protobuf::uint8* SetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  // string brief = 4;
  if (this->brief().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brief().data(), this->brief().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetInfo.brief");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->brief(), target);
  }

  // int32 price = 5;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->price(), target);
  }

  // int32 discount = 6;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->discount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetInfo)
  return target;
}

size_t SetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetInfo)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string brief = 4;
  if (this->brief().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brief());
  }

  // int32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // int32 price = 5;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  // int32 discount = 6;
  if (this->discount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->discount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetInfo)
    MergeFrom(*source);
  }
}

void SetInfo::MergeFrom(const SetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.brief().size() > 0) {

    brief_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brief_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
}

void SetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetInfo::CopyFrom(const SetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetInfo::IsInitialized() const {
  return true;
}

void SetInfo::Swap(SetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetInfo::InternalSwap(SetInfo* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  brief_.Swap(&other->brief_);
  std::swap(count_, other->count_);
  std::swap(price_, other->price_);
  std::swap(discount_, other->discount_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetInfo

// string id = 1;
void SetInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetInfo.id)
  return id_.GetNoArena();
}
void SetInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetInfo.id)
}
#if LANG_CXX11
void SetInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetInfo.id)
}
#endif
void SetInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetInfo.id)
}
void SetInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetInfo.id)
}
::std::string* SetInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetInfo.id)
}

// string name = 2;
void SetInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.SetInfo.name)
  return name_.GetNoArena();
}
void SetInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetInfo.name)
}
#if LANG_CXX11
void SetInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetInfo.name)
}
#endif
void SetInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetInfo.name)
}
void SetInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetInfo.name)
}
::std::string* SetInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.SetInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetInfo.name)
}

// int32 count = 3;
void SetInfo::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 SetInfo::count() const {
  // @@protoc_insertion_point(field_get:ttmall.SetInfo.count)
  return count_;
}
void SetInfo::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SetInfo.count)
}

// string brief = 4;
void SetInfo::clear_brief() {
  brief_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetInfo::brief() const {
  // @@protoc_insertion_point(field_get:ttmall.SetInfo.brief)
  return brief_.GetNoArena();
}
void SetInfo::set_brief(const ::std::string& value) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetInfo.brief)
}
#if LANG_CXX11
void SetInfo::set_brief(::std::string&& value) {
  
  brief_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetInfo.brief)
}
#endif
void SetInfo::set_brief(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetInfo.brief)
}
void SetInfo::set_brief(const char* value, size_t size) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetInfo.brief)
}
::std::string* SetInfo::mutable_brief() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetInfo.brief)
  return brief_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetInfo::release_brief() {
  // @@protoc_insertion_point(field_release:ttmall.SetInfo.brief)
  
  return brief_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetInfo::set_allocated_brief(::std::string* brief) {
  if (brief != NULL) {
    
  } else {
    
  }
  brief_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brief);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetInfo.brief)
}

// int32 price = 5;
void SetInfo::clear_price() {
  price_ = 0;
}
::google::protobuf::int32 SetInfo::price() const {
  // @@protoc_insertion_point(field_get:ttmall.SetInfo.price)
  return price_;
}
void SetInfo::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SetInfo.price)
}

// int32 discount = 6;
void SetInfo::clear_discount() {
  discount_ = 0;
}
::google::protobuf::int32 SetInfo::discount() const {
  // @@protoc_insertion_point(field_get:ttmall.SetInfo.discount)
  return discount_;
}
void SetInfo::set_discount(::google::protobuf::int32 value) {
  
  discount_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SetInfo.discount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriceInfo::kIdFieldNumber;
const int PriceInfo::kNameFieldNumber;
const int PriceInfo::kTypeFieldNumber;
const int PriceInfo::kPriceFieldNumber;
const int PriceInfo::kOriginalFieldNumber;
const int PriceInfo::kBuyNumFieldNumber;
const int PriceInfo::kAddNumFieldNumber;
const int PriceInfo::kDiscountFieldNumber;
const int PriceInfo::kRangesFieldNumber;
const int PriceInfo::kUnitFieldNumber;
const int PriceInfo::kStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriceInfo::PriceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.PriceInfo)
}
PriceInfo::PriceInfo(const PriceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ranges_(from.ranges_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unit().size() > 0) {
    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&start_) -
    reinterpret_cast<char*>(&type_) + sizeof(start_));
  // @@protoc_insertion_point(copy_constructor:ttmall.PriceInfo)
}

void PriceInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&start_) -
    reinterpret_cast<char*>(&type_) + sizeof(start_));
  _cached_size_ = 0;
}

PriceInfo::~PriceInfo() {
  // @@protoc_insertion_point(destructor:ttmall.PriceInfo)
  SharedDtor();
}

void PriceInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PriceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PriceInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriceInfo& PriceInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

PriceInfo* PriceInfo::New(::google::protobuf::Arena* arena) const {
  PriceInfo* n = new PriceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PriceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.PriceInfo)
  ranges_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&start_) -
    reinterpret_cast<char*>(&type_) + sizeof(start_));
}

bool PriceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.PriceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PriceInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PriceInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.SaleType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ttmall::SaleType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 original = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &original_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 buy_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 add_num = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 discount = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.PriceRange ranges = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit().data(), this->unit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PriceInfo.unit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 start = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.PriceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.PriceInfo)
  return false;
#undef DO_
}

void PriceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.PriceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PriceInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PriceInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .ttmall.SaleType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // int32 price = 4;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->price(), output);
  }

  // int32 original = 5;
  if (this->original() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->original(), output);
  }

  // int32 buy_num = 6;
  if (this->buy_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->buy_num(), output);
  }

  // int32 add_num = 7;
  if (this->add_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->add_num(), output);
  }

  // int32 discount = 8;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->discount(), output);
  }

  // repeated .ttmall.PriceRange ranges = 9;
  for (unsigned int i = 0, n = this->ranges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->ranges(i), output);
  }

  // string unit = 10;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PriceInfo.unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->unit(), output);
  }

  // int32 start = 11;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->start(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.PriceInfo)
}

::google::protobuf::uint8* PriceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.PriceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PriceInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PriceInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .ttmall.SaleType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // int32 price = 4;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->price(), target);
  }

  // int32 original = 5;
  if (this->original() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->original(), target);
  }

  // int32 buy_num = 6;
  if (this->buy_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->buy_num(), target);
  }

  // int32 add_num = 7;
  if (this->add_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->add_num(), target);
  }

  // int32 discount = 8;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->discount(), target);
  }

  // repeated .ttmall.PriceRange ranges = 9;
  for (unsigned int i = 0, n = this->ranges_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->ranges(i), deterministic, target);
  }

  // string unit = 10;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PriceInfo.unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->unit(), target);
  }

  // int32 start = 11;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->start(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.PriceInfo)
  return target;
}

size_t PriceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.PriceInfo)
  size_t total_size = 0;

  // repeated .ttmall.PriceRange ranges = 9;
  {
    unsigned int count = this->ranges_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ranges(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string unit = 10;
  if (this->unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit());
  }

  // .ttmall.SaleType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 price = 4;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  // int32 original = 5;
  if (this->original() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->original());
  }

  // int32 buy_num = 6;
  if (this->buy_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buy_num());
  }

  // int32 add_num = 7;
  if (this->add_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->add_num());
  }

  // int32 discount = 8;
  if (this->discount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->discount());
  }

  // int32 start = 11;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PriceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.PriceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.PriceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.PriceInfo)
    MergeFrom(*source);
  }
}

void PriceInfo::MergeFrom(const PriceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.PriceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ranges_.MergeFrom(from.ranges_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.unit().size() > 0) {

    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.original() != 0) {
    set_original(from.original());
  }
  if (from.buy_num() != 0) {
    set_buy_num(from.buy_num());
  }
  if (from.add_num() != 0) {
    set_add_num(from.add_num());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
  if (from.start() != 0) {
    set_start(from.start());
  }
}

void PriceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.PriceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceInfo::CopyFrom(const PriceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.PriceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceInfo::IsInitialized() const {
  return true;
}

void PriceInfo::Swap(PriceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriceInfo::InternalSwap(PriceInfo* other) {
  ranges_.InternalSwap(&other->ranges_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  unit_.Swap(&other->unit_);
  std::swap(type_, other->type_);
  std::swap(price_, other->price_);
  std::swap(original_, other->original_);
  std::swap(buy_num_, other->buy_num_);
  std::swap(add_num_, other->add_num_);
  std::swap(discount_, other->discount_);
  std::swap(start_, other->start_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PriceInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PriceInfo

// string id = 1;
void PriceInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PriceInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.id)
  return id_.GetNoArena();
}
void PriceInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.id)
}
#if LANG_CXX11
void PriceInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PriceInfo.id)
}
#endif
void PriceInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PriceInfo.id)
}
void PriceInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PriceInfo.id)
}
::std::string* PriceInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PriceInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PriceInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.PriceInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PriceInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PriceInfo.id)
}

// string name = 2;
void PriceInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PriceInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.name)
  return name_.GetNoArena();
}
void PriceInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.name)
}
#if LANG_CXX11
void PriceInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PriceInfo.name)
}
#endif
void PriceInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PriceInfo.name)
}
void PriceInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PriceInfo.name)
}
::std::string* PriceInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PriceInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PriceInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.PriceInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PriceInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PriceInfo.name)
}

// .ttmall.SaleType type = 3;
void PriceInfo::clear_type() {
  type_ = 0;
}
::ttmall::SaleType PriceInfo::type() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.type)
  return static_cast< ::ttmall::SaleType >(type_);
}
void PriceInfo::set_type(::ttmall::SaleType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.type)
}

// int32 price = 4;
void PriceInfo::clear_price() {
  price_ = 0;
}
::google::protobuf::int32 PriceInfo::price() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.price)
  return price_;
}
void PriceInfo::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.price)
}

// int32 original = 5;
void PriceInfo::clear_original() {
  original_ = 0;
}
::google::protobuf::int32 PriceInfo::original() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.original)
  return original_;
}
void PriceInfo::set_original(::google::protobuf::int32 value) {
  
  original_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.original)
}

// int32 buy_num = 6;
void PriceInfo::clear_buy_num() {
  buy_num_ = 0;
}
::google::protobuf::int32 PriceInfo::buy_num() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.buy_num)
  return buy_num_;
}
void PriceInfo::set_buy_num(::google::protobuf::int32 value) {
  
  buy_num_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.buy_num)
}

// int32 add_num = 7;
void PriceInfo::clear_add_num() {
  add_num_ = 0;
}
::google::protobuf::int32 PriceInfo::add_num() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.add_num)
  return add_num_;
}
void PriceInfo::set_add_num(::google::protobuf::int32 value) {
  
  add_num_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.add_num)
}

// int32 discount = 8;
void PriceInfo::clear_discount() {
  discount_ = 0;
}
::google::protobuf::int32 PriceInfo::discount() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.discount)
  return discount_;
}
void PriceInfo::set_discount(::google::protobuf::int32 value) {
  
  discount_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.discount)
}

// repeated .ttmall.PriceRange ranges = 9;
int PriceInfo::ranges_size() const {
  return ranges_.size();
}
void PriceInfo::clear_ranges() {
  ranges_.Clear();
}
const ::ttmall::PriceRange& PriceInfo::ranges(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.ranges)
  return ranges_.Get(index);
}
::ttmall::PriceRange* PriceInfo::mutable_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.PriceInfo.ranges)
  return ranges_.Mutable(index);
}
::ttmall::PriceRange* PriceInfo::add_ranges() {
  // @@protoc_insertion_point(field_add:ttmall.PriceInfo.ranges)
  return ranges_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::PriceRange >*
PriceInfo::mutable_ranges() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.PriceInfo.ranges)
  return &ranges_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::PriceRange >&
PriceInfo::ranges() const {
  // @@protoc_insertion_point(field_list:ttmall.PriceInfo.ranges)
  return ranges_;
}

// string unit = 10;
void PriceInfo::clear_unit() {
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PriceInfo::unit() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.unit)
  return unit_.GetNoArena();
}
void PriceInfo::set_unit(const ::std::string& value) {
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.unit)
}
#if LANG_CXX11
void PriceInfo::set_unit(::std::string&& value) {
  
  unit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PriceInfo.unit)
}
#endif
void PriceInfo::set_unit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PriceInfo.unit)
}
void PriceInfo::set_unit(const char* value, size_t size) {
  
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PriceInfo.unit)
}
::std::string* PriceInfo::mutable_unit() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PriceInfo.unit)
  return unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PriceInfo::release_unit() {
  // @@protoc_insertion_point(field_release:ttmall.PriceInfo.unit)
  
  return unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PriceInfo::set_allocated_unit(::std::string* unit) {
  if (unit != NULL) {
    
  } else {
    
  }
  unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unit);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PriceInfo.unit)
}

// int32 start = 11;
void PriceInfo::clear_start() {
  start_ = 0;
}
::google::protobuf::int32 PriceInfo::start() const {
  // @@protoc_insertion_point(field_get:ttmall.PriceInfo.start)
  return start_;
}
void PriceInfo::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:ttmall.PriceInfo.start)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttrInfo::kCodeFieldNumber;
const int AttrInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttrInfo::AttrInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AttrInfo)
}
AttrInfo::AttrInfo(const AttrInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.AttrInfo)
}

void AttrInfo::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AttrInfo::~AttrInfo() {
  // @@protoc_insertion_point(destructor:ttmall.AttrInfo)
  SharedDtor();
}

void AttrInfo::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttrInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttrInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttrInfo& AttrInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

AttrInfo* AttrInfo::New(::google::protobuf::Arena* arena) const {
  AttrInfo* n = new AttrInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttrInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AttrInfo)
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AttrInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AttrInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AttrInfo.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AttrInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AttrInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AttrInfo)
  return false;
#undef DO_
}

void AttrInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AttrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AttrInfo.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AttrInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AttrInfo)
}

::google::protobuf::uint8* AttrInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AttrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AttrInfo.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AttrInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AttrInfo)
  return target;
}

size_t AttrInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AttrInfo)
  size_t total_size = 0;

  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttrInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AttrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AttrInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttrInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AttrInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AttrInfo)
    MergeFrom(*source);
  }
}

void AttrInfo::MergeFrom(const AttrInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AttrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void AttrInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AttrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttrInfo::CopyFrom(const AttrInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AttrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttrInfo::IsInitialized() const {
  return true;
}

void AttrInfo::Swap(AttrInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttrInfo::InternalSwap(AttrInfo* other) {
  code_.Swap(&other->code_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttrInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttrInfo

// string code = 1;
void AttrInfo::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttrInfo::code() const {
  // @@protoc_insertion_point(field_get:ttmall.AttrInfo.code)
  return code_.GetNoArena();
}
void AttrInfo::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AttrInfo.code)
}
#if LANG_CXX11
void AttrInfo::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AttrInfo.code)
}
#endif
void AttrInfo::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AttrInfo.code)
}
void AttrInfo::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AttrInfo.code)
}
::std::string* AttrInfo::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AttrInfo.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttrInfo::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.AttrInfo.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttrInfo::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AttrInfo.code)
}

// string name = 2;
void AttrInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttrInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.AttrInfo.name)
  return name_.GetNoArena();
}
void AttrInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AttrInfo.name)
}
#if LANG_CXX11
void AttrInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AttrInfo.name)
}
#endif
void AttrInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AttrInfo.name)
}
void AttrInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AttrInfo.name)
}
::std::string* AttrInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AttrInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttrInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.AttrInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttrInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AttrInfo.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttrGroup::kCodeFieldNumber;
const int AttrGroup::kNameFieldNumber;
const int AttrGroup::kAttrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttrGroup::AttrGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AttrGroup)
}
AttrGroup::AttrGroup(const AttrGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attrs_(from.attrs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.AttrGroup)
}

void AttrGroup::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AttrGroup::~AttrGroup() {
  // @@protoc_insertion_point(destructor:ttmall.AttrGroup)
  SharedDtor();
}

void AttrGroup::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttrGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttrGroup::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttrGroup& AttrGroup::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

AttrGroup* AttrGroup::New(::google::protobuf::Arena* arena) const {
  AttrGroup* n = new AttrGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttrGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AttrGroup)
  attrs_.Clear();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AttrGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AttrGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AttrGroup.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AttrGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.AttrInfo attrs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AttrGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AttrGroup)
  return false;
#undef DO_
}

void AttrGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AttrGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AttrGroup.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AttrGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .ttmall.AttrInfo attrs = 3;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attrs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AttrGroup)
}

::google::protobuf::uint8* AttrGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AttrGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AttrGroup.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AttrGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .ttmall.AttrInfo attrs = 3;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->attrs(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AttrGroup)
  return target;
}

size_t AttrGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AttrGroup)
  size_t total_size = 0;

  // repeated .ttmall.AttrInfo attrs = 3;
  {
    unsigned int count = this->attrs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attrs(i));
    }
  }

  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttrGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AttrGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const AttrGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttrGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AttrGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AttrGroup)
    MergeFrom(*source);
  }
}

void AttrGroup::MergeFrom(const AttrGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AttrGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attrs_.MergeFrom(from.attrs_);
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void AttrGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AttrGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttrGroup::CopyFrom(const AttrGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AttrGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttrGroup::IsInitialized() const {
  return true;
}

void AttrGroup::Swap(AttrGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttrGroup::InternalSwap(AttrGroup* other) {
  attrs_.InternalSwap(&other->attrs_);
  code_.Swap(&other->code_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttrGroup::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttrGroup

// string code = 1;
void AttrGroup::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttrGroup::code() const {
  // @@protoc_insertion_point(field_get:ttmall.AttrGroup.code)
  return code_.GetNoArena();
}
void AttrGroup::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AttrGroup.code)
}
#if LANG_CXX11
void AttrGroup::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AttrGroup.code)
}
#endif
void AttrGroup::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AttrGroup.code)
}
void AttrGroup::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AttrGroup.code)
}
::std::string* AttrGroup::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AttrGroup.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttrGroup::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.AttrGroup.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttrGroup::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AttrGroup.code)
}

// string name = 2;
void AttrGroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttrGroup::name() const {
  // @@protoc_insertion_point(field_get:ttmall.AttrGroup.name)
  return name_.GetNoArena();
}
void AttrGroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AttrGroup.name)
}
#if LANG_CXX11
void AttrGroup::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AttrGroup.name)
}
#endif
void AttrGroup::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AttrGroup.name)
}
void AttrGroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AttrGroup.name)
}
::std::string* AttrGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AttrGroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttrGroup::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.AttrGroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttrGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AttrGroup.name)
}

// repeated .ttmall.AttrInfo attrs = 3;
int AttrGroup::attrs_size() const {
  return attrs_.size();
}
void AttrGroup::clear_attrs() {
  attrs_.Clear();
}
const ::ttmall::AttrInfo& AttrGroup::attrs(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.AttrGroup.attrs)
  return attrs_.Get(index);
}
::ttmall::AttrInfo* AttrGroup::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.AttrGroup.attrs)
  return attrs_.Mutable(index);
}
::ttmall::AttrInfo* AttrGroup::add_attrs() {
  // @@protoc_insertion_point(field_add:ttmall.AttrGroup.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::AttrInfo >*
AttrGroup::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.AttrGroup.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::AttrInfo >&
AttrGroup::attrs() const {
  // @@protoc_insertion_point(field_list:ttmall.AttrGroup.attrs)
  return attrs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapInfo::kKeyFieldNumber;
const int MapInfo::kPriceFieldNumber;
const int MapInfo::kImagesFieldNumber;
const int MapInfo::kInventoryFieldNumber;
const int MapInfo::kSetsFieldNumber;
const int MapInfo::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapInfo::MapInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.MapInfo)
}
MapInfo::MapInfo(const MapInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      images_(from.images_),
      sets_(from.sets_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.price().size() > 0) {
    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  ::memcpy(&inventory_, &from.inventory_,
    reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&inventory_) + sizeof(disabled_));
  // @@protoc_insertion_point(copy_constructor:ttmall.MapInfo)
}

void MapInfo::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inventory_, 0, reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&inventory_) + sizeof(disabled_));
  _cached_size_ = 0;
}

MapInfo::~MapInfo() {
  // @@protoc_insertion_point(destructor:ttmall.MapInfo)
  SharedDtor();
}

void MapInfo::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MapInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapInfo& MapInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

MapInfo* MapInfo::New(::google::protobuf::Arena* arena) const {
  MapInfo* n = new MapInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.MapInfo)
  images_.Clear();
  sets_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inventory_, 0, reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&inventory_) + sizeof(disabled_));
}

bool MapInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.MapInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.MapInfo.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price().data(), this->price().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.MapInfo.price"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.ImageInfo images = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 inventory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inventory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.SetInfo sets = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.MapInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.MapInfo)
  return false;
#undef DO_
}

void MapInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.MapInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MapInfo.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string price = 2;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MapInfo.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->price(), output);
  }

  // repeated .ttmall.ImageInfo images = 3;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->images(i), output);
  }

  // int32 inventory = 4;
  if (this->inventory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->inventory(), output);
  }

  // repeated .ttmall.SetInfo sets = 5;
  for (unsigned int i = 0, n = this->sets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->sets(i), output);
  }

  // bool disabled = 6;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->disabled(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.MapInfo)
}

::google::protobuf::uint8* MapInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.MapInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MapInfo.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string price = 2;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MapInfo.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->price(), target);
  }

  // repeated .ttmall.ImageInfo images = 3;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->images(i), deterministic, target);
  }

  // int32 inventory = 4;
  if (this->inventory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->inventory(), target);
  }

  // repeated .ttmall.SetInfo sets = 5;
  for (unsigned int i = 0, n = this->sets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->sets(i), deterministic, target);
  }

  // bool disabled = 6;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->disabled(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.MapInfo)
  return target;
}

size_t MapInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.MapInfo)
  size_t total_size = 0;

  // repeated .ttmall.ImageInfo images = 3;
  {
    unsigned int count = this->images_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->images(i));
    }
  }

  // repeated .ttmall.SetInfo sets = 5;
  {
    unsigned int count = this->sets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sets(i));
    }
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string price = 2;
  if (this->price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  // int32 inventory = 4;
  if (this->inventory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inventory());
  }

  // bool disabled = 6;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.MapInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MapInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.MapInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.MapInfo)
    MergeFrom(*source);
  }
}

void MapInfo::MergeFrom(const MapInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.MapInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  sets_.MergeFrom(from.sets_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.price().size() > 0) {

    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  if (from.inventory() != 0) {
    set_inventory(from.inventory());
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void MapInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.MapInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapInfo::CopyFrom(const MapInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.MapInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapInfo::IsInitialized() const {
  return true;
}

void MapInfo::Swap(MapInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapInfo::InternalSwap(MapInfo* other) {
  images_.InternalSwap(&other->images_);
  sets_.InternalSwap(&other->sets_);
  key_.Swap(&other->key_);
  price_.Swap(&other->price_);
  std::swap(inventory_, other->inventory_);
  std::swap(disabled_, other->disabled_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapInfo

// string key = 1;
void MapInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MapInfo::key() const {
  // @@protoc_insertion_point(field_get:ttmall.MapInfo.key)
  return key_.GetNoArena();
}
void MapInfo::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.MapInfo.key)
}
#if LANG_CXX11
void MapInfo::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.MapInfo.key)
}
#endif
void MapInfo::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.MapInfo.key)
}
void MapInfo::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.MapInfo.key)
}
::std::string* MapInfo::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.MapInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MapInfo::release_key() {
  // @@protoc_insertion_point(field_release:ttmall.MapInfo.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MapInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ttmall.MapInfo.key)
}

// string price = 2;
void MapInfo::clear_price() {
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MapInfo::price() const {
  // @@protoc_insertion_point(field_get:ttmall.MapInfo.price)
  return price_.GetNoArena();
}
void MapInfo::set_price(const ::std::string& value) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.MapInfo.price)
}
#if LANG_CXX11
void MapInfo::set_price(::std::string&& value) {
  
  price_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.MapInfo.price)
}
#endif
void MapInfo::set_price(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.MapInfo.price)
}
void MapInfo::set_price(const char* value, size_t size) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.MapInfo.price)
}
::std::string* MapInfo::mutable_price() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.MapInfo.price)
  return price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MapInfo::release_price() {
  // @@protoc_insertion_point(field_release:ttmall.MapInfo.price)
  
  return price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MapInfo::set_allocated_price(::std::string* price) {
  if (price != NULL) {
    
  } else {
    
  }
  price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price);
  // @@protoc_insertion_point(field_set_allocated:ttmall.MapInfo.price)
}

// repeated .ttmall.ImageInfo images = 3;
int MapInfo::images_size() const {
  return images_.size();
}
void MapInfo::clear_images() {
  images_.Clear();
}
const ::ttmall::ImageInfo& MapInfo::images(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.MapInfo.images)
  return images_.Get(index);
}
::ttmall::ImageInfo* MapInfo::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.MapInfo.images)
  return images_.Mutable(index);
}
::ttmall::ImageInfo* MapInfo::add_images() {
  // @@protoc_insertion_point(field_add:ttmall.MapInfo.images)
  return images_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::ImageInfo >*
MapInfo::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.MapInfo.images)
  return &images_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::ImageInfo >&
MapInfo::images() const {
  // @@protoc_insertion_point(field_list:ttmall.MapInfo.images)
  return images_;
}

// int32 inventory = 4;
void MapInfo::clear_inventory() {
  inventory_ = 0;
}
::google::protobuf::int32 MapInfo::inventory() const {
  // @@protoc_insertion_point(field_get:ttmall.MapInfo.inventory)
  return inventory_;
}
void MapInfo::set_inventory(::google::protobuf::int32 value) {
  
  inventory_ = value;
  // @@protoc_insertion_point(field_set:ttmall.MapInfo.inventory)
}

// repeated .ttmall.SetInfo sets = 5;
int MapInfo::sets_size() const {
  return sets_.size();
}
void MapInfo::clear_sets() {
  sets_.Clear();
}
const ::ttmall::SetInfo& MapInfo::sets(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.MapInfo.sets)
  return sets_.Get(index);
}
::ttmall::SetInfo* MapInfo::mutable_sets(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.MapInfo.sets)
  return sets_.Mutable(index);
}
::ttmall::SetInfo* MapInfo::add_sets() {
  // @@protoc_insertion_point(field_add:ttmall.MapInfo.sets)
  return sets_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::SetInfo >*
MapInfo::mutable_sets() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.MapInfo.sets)
  return &sets_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::SetInfo >&
MapInfo::sets() const {
  // @@protoc_insertion_point(field_list:ttmall.MapInfo.sets)
  return sets_;
}

// bool disabled = 6;
void MapInfo::clear_disabled() {
  disabled_ = false;
}
bool MapInfo::disabled() const {
  // @@protoc_insertion_point(field_get:ttmall.MapInfo.disabled)
  return disabled_;
}
void MapInfo::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:ttmall.MapInfo.disabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GoodsInfo::GoodsInfo_PricesEntry::GoodsInfo_PricesEntry() {}
GoodsInfo::GoodsInfo_PricesEntry::GoodsInfo_PricesEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GoodsInfo::GoodsInfo_PricesEntry::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[8];
}
void GoodsInfo::GoodsInfo_PricesEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GoodsInfo::GoodsInfo_PricesEntry::MergeFrom(const GoodsInfo_PricesEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GoodsInfo::GoodsInfo_AttrsEntry::GoodsInfo_AttrsEntry() {}
GoodsInfo::GoodsInfo_AttrsEntry::GoodsInfo_AttrsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GoodsInfo::GoodsInfo_AttrsEntry::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[9];
}
void GoodsInfo::GoodsInfo_AttrsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GoodsInfo::GoodsInfo_AttrsEntry::MergeFrom(const GoodsInfo_AttrsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GoodsInfo::GoodsInfo_MapsEntry::GoodsInfo_MapsEntry() {}
GoodsInfo::GoodsInfo_MapsEntry::GoodsInfo_MapsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GoodsInfo::GoodsInfo_MapsEntry::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[10];
}
void GoodsInfo::GoodsInfo_MapsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GoodsInfo::GoodsInfo_MapsEntry::MergeFrom(const GoodsInfo_MapsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo::kIdFieldNumber;
const int GoodsInfo::kNameFieldNumber;
const int GoodsInfo::kAliasFieldNumber;
const int GoodsInfo::kImagesFieldNumber;
const int GoodsInfo::kAreaFieldNumber;
const int GoodsInfo::kDescFieldNumber;
const int GoodsInfo::kTypeIdFieldNumber;
const int GoodsInfo::kPricesFieldNumber;
const int GoodsInfo::kAttrsFieldNumber;
const int GoodsInfo::kMapsFieldNumber;
const int GoodsInfo::kKeyIdFieldNumber;
const int GoodsInfo::kBriefFieldNumber;
const int GoodsInfo::kDisabledFieldNumber;
const int GoodsInfo::kCodeFieldNumber;
const int GoodsInfo::kIsCollectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo::GoodsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GoodsInfo)
}
GoodsInfo::GoodsInfo(const GoodsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      alias_(from.alias_),
      images_(from.images_),
      type_id_(from.type_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prices_.MergeFrom(from.prices_);
  attrs_.MergeFrom(from.attrs_);
  maps_.MergeFrom(from.maps_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.area().size() > 0) {
    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  brief_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brief().size() > 0) {
    brief_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brief_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  ::memcpy(&disabled_, &from.disabled_,
    reinterpret_cast<char*>(&is_collect_) -
    reinterpret_cast<char*>(&disabled_) + sizeof(is_collect_));
  // @@protoc_insertion_point(copy_constructor:ttmall.GoodsInfo)
}

void GoodsInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brief_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&disabled_, 0, reinterpret_cast<char*>(&is_collect_) -
    reinterpret_cast<char*>(&disabled_) + sizeof(is_collect_));
  _cached_size_ = 0;
}

GoodsInfo::~GoodsInfo() {
  // @@protoc_insertion_point(destructor:ttmall.GoodsInfo)
  SharedDtor();
}

void GoodsInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brief_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GoodsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoodsInfo& GoodsInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

GoodsInfo* GoodsInfo::New(::google::protobuf::Arena* arena) const {
  GoodsInfo* n = new GoodsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GoodsInfo)
  alias_.Clear();
  images_.Clear();
  type_id_.Clear();
  prices_.Clear();
  attrs_.Clear();
  maps_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brief_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&disabled_, 0, reinterpret_cast<char*>(&is_collect_) -
    reinterpret_cast<char*>(&disabled_) + sizeof(is_collect_));
}

bool GoodsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GoodsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string alias = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias(this->alias_size() - 1).data(),
            this->alias(this->alias_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.ImageInfo images = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string area = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->area().data(), this->area().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.area"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string type_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_id(this->type_id_size() - 1).data(),
            this->type_id(this->type_id_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.type_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .ttmall.PriceInfo> prices = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          GoodsInfo_PricesEntry::Parser< ::google::protobuf::internal::MapField<
              GoodsInfo_PricesEntry,
              ::std::string, ::ttmall::PriceInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo > > parser(&prices_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.PricesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .ttmall.AttrGroup> attrs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          GoodsInfo_AttrsEntry::Parser< ::google::protobuf::internal::MapField<
              GoodsInfo_AttrsEntry,
              ::std::string, ::ttmall::AttrGroup,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup > > parser(&attrs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.AttrsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .ttmall.MapInfo> maps = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          GoodsInfo_MapsEntry::Parser< ::google::protobuf::internal::MapField<
              GoodsInfo_MapsEntry,
              ::std::string, ::ttmall::MapInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::ttmall::MapInfo > > parser(&maps_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.MapsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), this->key_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brief = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brief()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brief().data(), this->brief().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.brief"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GoodsInfo.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_collect = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_collect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GoodsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GoodsInfo)
  return false;
#undef DO_
}

void GoodsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GoodsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated string alias = 3;
  for (int i = 0, n = this->alias_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias(i).data(), this->alias(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.alias");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->alias(i), output);
  }

  // repeated .ttmall.ImageInfo images = 4;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->images(i), output);
  }

  // string area = 5;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->area(), output);
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->desc(), output);
  }

  // repeated string type_id = 7;
  for (int i = 0, n = this->type_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_id(i).data(), this->type_id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.type_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->type_id(i), output);
  }

  // map<string, .ttmall.PriceInfo> prices = 8;
  if (!this->prices().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ttmall.GoodsInfo.PricesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->prices().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prices().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::const_iterator
          it = this->prices().begin();
          it != this->prices().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GoodsInfo_PricesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prices_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GoodsInfo_PricesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::const_iterator
          it = this->prices().begin();
          it != this->prices().end(); ++it) {
        entry.reset(prices_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .ttmall.AttrGroup> attrs = 9;
  if (!this->attrs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ttmall.GoodsInfo.AttrsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attrs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->attrs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GoodsInfo_AttrsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attrs_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GoodsInfo_AttrsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it) {
        entry.reset(attrs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .ttmall.MapInfo> maps = 10;
  if (!this->maps().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ttmall.GoodsInfo.MapsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->maps().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->maps().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::const_iterator
          it = this->maps().begin();
          it != this->maps().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GoodsInfo_MapsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(maps_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GoodsInfo_MapsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::const_iterator
          it = this->maps().begin();
          it != this->maps().end(); ++it) {
        entry.reset(maps_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string key_id = 11;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->key_id(), output);
  }

  // string brief = 12;
  if (this->brief().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brief().data(), this->brief().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.brief");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->brief(), output);
  }

  // bool disabled = 13;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->disabled(), output);
  }

  // string code = 14;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->code(), output);
  }

  // bool is_collect = 15;
  if (this->is_collect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_collect(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GoodsInfo)
}

::google::protobuf::uint8* GoodsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GoodsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated string alias = 3;
  for (int i = 0, n = this->alias_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias(i).data(), this->alias(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.alias");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->alias(i), target);
  }

  // repeated .ttmall.ImageInfo images = 4;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->images(i), deterministic, target);
  }

  // string area = 5;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->area(), target);
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->desc(), target);
  }

  // repeated string type_id = 7;
  for (int i = 0, n = this->type_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_id(i).data(), this->type_id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.type_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->type_id(i), target);
  }

  // map<string, .ttmall.PriceInfo> prices = 8;
  if (!this->prices().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ttmall.GoodsInfo.PricesEntry.key");
      }
    };

    if (deterministic &&
        this->prices().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prices().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::const_iterator
          it = this->prices().begin();
          it != this->prices().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GoodsInfo_PricesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prices_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GoodsInfo_PricesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::const_iterator
          it = this->prices().begin();
          it != this->prices().end(); ++it) {
        entry.reset(prices_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .ttmall.AttrGroup> attrs = 9;
  if (!this->attrs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ttmall.GoodsInfo.AttrsEntry.key");
      }
    };

    if (deterministic &&
        this->attrs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->attrs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GoodsInfo_AttrsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attrs_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GoodsInfo_AttrsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it) {
        entry.reset(attrs_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .ttmall.MapInfo> maps = 10;
  if (!this->maps().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ttmall.GoodsInfo.MapsEntry.key");
      }
    };

    if (deterministic &&
        this->maps().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->maps().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::const_iterator
          it = this->maps().begin();
          it != this->maps().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GoodsInfo_MapsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(maps_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GoodsInfo_MapsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::const_iterator
          it = this->maps().begin();
          it != this->maps().end(); ++it) {
        entry.reset(maps_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string key_id = 11;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->key_id(), target);
  }

  // string brief = 12;
  if (this->brief().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brief().data(), this->brief().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.brief");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->brief(), target);
  }

  // bool disabled = 13;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->disabled(), target);
  }

  // string code = 14;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GoodsInfo.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->code(), target);
  }

  // bool is_collect = 15;
  if (this->is_collect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_collect(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GoodsInfo)
  return target;
}

size_t GoodsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GoodsInfo)
  size_t total_size = 0;

  // repeated string alias = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->alias_size());
  for (int i = 0, n = this->alias_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->alias(i));
  }

  // repeated .ttmall.ImageInfo images = 4;
  {
    unsigned int count = this->images_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->images(i));
    }
  }

  // repeated string type_id = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->type_id_size());
  for (int i = 0, n = this->type_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type_id(i));
  }

  // map<string, .ttmall.PriceInfo> prices = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prices_size());
  {
    ::google::protobuf::scoped_ptr<GoodsInfo_PricesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >::const_iterator
        it = this->prices().begin();
        it != this->prices().end(); ++it) {
      entry.reset(prices_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .ttmall.AttrGroup> attrs = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attrs_size());
  {
    ::google::protobuf::scoped_ptr<GoodsInfo_AttrsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >::const_iterator
        it = this->attrs().begin();
        it != this->attrs().end(); ++it) {
      entry.reset(attrs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .ttmall.MapInfo> maps = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->maps_size());
  {
    ::google::protobuf::scoped_ptr<GoodsInfo_MapsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >::const_iterator
        it = this->maps().begin();
        it != this->maps().end(); ++it) {
      entry.reset(maps_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string area = 5;
  if (this->area().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area());
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // string key_id = 11;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  // string brief = 12;
  if (this->brief().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brief());
  }

  // string code = 14;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // bool disabled = 13;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  // bool is_collect = 15;
  if (this->is_collect() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GoodsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GoodsInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GoodsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GoodsInfo)
    MergeFrom(*source);
  }
}

void GoodsInfo::MergeFrom(const GoodsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GoodsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alias_.MergeFrom(from.alias_);
  images_.MergeFrom(from.images_);
  type_id_.MergeFrom(from.type_id_);
  prices_.MergeFrom(from.prices_);
  attrs_.MergeFrom(from.attrs_);
  maps_.MergeFrom(from.maps_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.area().size() > 0) {

    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.brief().size() > 0) {

    brief_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brief_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
  if (from.is_collect() != 0) {
    set_is_collect(from.is_collect());
  }
}

void GoodsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GoodsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo::CopyFrom(const GoodsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GoodsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo::IsInitialized() const {
  return true;
}

void GoodsInfo::Swap(GoodsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo::InternalSwap(GoodsInfo* other) {
  alias_.InternalSwap(&other->alias_);
  images_.InternalSwap(&other->images_);
  type_id_.InternalSwap(&other->type_id_);
  prices_.Swap(&other->prices_);
  attrs_.Swap(&other->attrs_);
  maps_.Swap(&other->maps_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  area_.Swap(&other->area_);
  desc_.Swap(&other->desc_);
  key_id_.Swap(&other->key_id_);
  brief_.Swap(&other->brief_);
  code_.Swap(&other->code_);
  std::swap(disabled_, other->disabled_);
  std::swap(is_collect_, other->is_collect_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoodsInfo

// string id = 1;
void GoodsInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GoodsInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.id)
  return id_.GetNoArena();
}
void GoodsInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.id)
}
#if LANG_CXX11
void GoodsInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GoodsInfo.id)
}
#endif
void GoodsInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.id)
}
void GoodsInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.id)
}
::std::string* GoodsInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GoodsInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.GoodsInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GoodsInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GoodsInfo.id)
}

// string name = 2;
void GoodsInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GoodsInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.name)
  return name_.GetNoArena();
}
void GoodsInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.name)
}
#if LANG_CXX11
void GoodsInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GoodsInfo.name)
}
#endif
void GoodsInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.name)
}
void GoodsInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.name)
}
::std::string* GoodsInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GoodsInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.GoodsInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GoodsInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GoodsInfo.name)
}

// repeated string alias = 3;
int GoodsInfo::alias_size() const {
  return alias_.size();
}
void GoodsInfo::clear_alias() {
  alias_.Clear();
}
const ::std::string& GoodsInfo::alias(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.alias)
  return alias_.Get(index);
}
::std::string* GoodsInfo::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.alias)
  return alias_.Mutable(index);
}
void GoodsInfo::set_alias(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.alias)
  alias_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GoodsInfo::set_alias(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.alias)
  alias_.Mutable(index)->assign(std::move(value));
}
#endif
void GoodsInfo::set_alias(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  alias_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.alias)
}
void GoodsInfo::set_alias(int index, const char* value, size_t size) {
  alias_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.alias)
}
::std::string* GoodsInfo::add_alias() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.GoodsInfo.alias)
  return alias_.Add();
}
void GoodsInfo::add_alias(const ::std::string& value) {
  alias_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.GoodsInfo.alias)
}
#if LANG_CXX11
void GoodsInfo::add_alias(::std::string&& value) {
  alias_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.GoodsInfo.alias)
}
#endif
void GoodsInfo::add_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  alias_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.GoodsInfo.alias)
}
void GoodsInfo::add_alias(const char* value, size_t size) {
  alias_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.GoodsInfo.alias)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GoodsInfo::alias() const {
  // @@protoc_insertion_point(field_list:ttmall.GoodsInfo.alias)
  return alias_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GoodsInfo::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.GoodsInfo.alias)
  return &alias_;
}

// repeated .ttmall.ImageInfo images = 4;
int GoodsInfo::images_size() const {
  return images_.size();
}
void GoodsInfo::clear_images() {
  images_.Clear();
}
const ::ttmall::ImageInfo& GoodsInfo::images(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.images)
  return images_.Get(index);
}
::ttmall::ImageInfo* GoodsInfo::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.images)
  return images_.Mutable(index);
}
::ttmall::ImageInfo* GoodsInfo::add_images() {
  // @@protoc_insertion_point(field_add:ttmall.GoodsInfo.images)
  return images_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::ImageInfo >*
GoodsInfo::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.GoodsInfo.images)
  return &images_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::ImageInfo >&
GoodsInfo::images() const {
  // @@protoc_insertion_point(field_list:ttmall.GoodsInfo.images)
  return images_;
}

// string area = 5;
void GoodsInfo::clear_area() {
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GoodsInfo::area() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.area)
  return area_.GetNoArena();
}
void GoodsInfo::set_area(const ::std::string& value) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.area)
}
#if LANG_CXX11
void GoodsInfo::set_area(::std::string&& value) {
  
  area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GoodsInfo.area)
}
#endif
void GoodsInfo::set_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.area)
}
void GoodsInfo::set_area(const char* value, size_t size) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.area)
}
::std::string* GoodsInfo::mutable_area() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.area)
  return area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GoodsInfo::release_area() {
  // @@protoc_insertion_point(field_release:ttmall.GoodsInfo.area)
  
  return area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GoodsInfo::set_allocated_area(::std::string* area) {
  if (area != NULL) {
    
  } else {
    
  }
  area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GoodsInfo.area)
}

// string desc = 6;
void GoodsInfo::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GoodsInfo::desc() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.desc)
  return desc_.GetNoArena();
}
void GoodsInfo::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.desc)
}
#if LANG_CXX11
void GoodsInfo::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GoodsInfo.desc)
}
#endif
void GoodsInfo::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.desc)
}
void GoodsInfo::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.desc)
}
::std::string* GoodsInfo::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GoodsInfo::release_desc() {
  // @@protoc_insertion_point(field_release:ttmall.GoodsInfo.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GoodsInfo::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GoodsInfo.desc)
}

// repeated string type_id = 7;
int GoodsInfo::type_id_size() const {
  return type_id_.size();
}
void GoodsInfo::clear_type_id() {
  type_id_.Clear();
}
const ::std::string& GoodsInfo::type_id(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.type_id)
  return type_id_.Get(index);
}
::std::string* GoodsInfo::mutable_type_id(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.type_id)
  return type_id_.Mutable(index);
}
void GoodsInfo::set_type_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.type_id)
  type_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GoodsInfo::set_type_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.type_id)
  type_id_.Mutable(index)->assign(std::move(value));
}
#endif
void GoodsInfo::set_type_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  type_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.type_id)
}
void GoodsInfo::set_type_id(int index, const char* value, size_t size) {
  type_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.type_id)
}
::std::string* GoodsInfo::add_type_id() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.GoodsInfo.type_id)
  return type_id_.Add();
}
void GoodsInfo::add_type_id(const ::std::string& value) {
  type_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.GoodsInfo.type_id)
}
#if LANG_CXX11
void GoodsInfo::add_type_id(::std::string&& value) {
  type_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.GoodsInfo.type_id)
}
#endif
void GoodsInfo::add_type_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  type_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.GoodsInfo.type_id)
}
void GoodsInfo::add_type_id(const char* value, size_t size) {
  type_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.GoodsInfo.type_id)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GoodsInfo::type_id() const {
  // @@protoc_insertion_point(field_list:ttmall.GoodsInfo.type_id)
  return type_id_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GoodsInfo::mutable_type_id() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.GoodsInfo.type_id)
  return &type_id_;
}

// map<string, .ttmall.PriceInfo> prices = 8;
int GoodsInfo::prices_size() const {
  return prices_.size();
}
void GoodsInfo::clear_prices() {
  prices_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >&
GoodsInfo::prices() const {
  // @@protoc_insertion_point(field_map:ttmall.GoodsInfo.prices)
  return prices_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::ttmall::PriceInfo >*
GoodsInfo::mutable_prices() {
  // @@protoc_insertion_point(field_mutable_map:ttmall.GoodsInfo.prices)
  return prices_.MutableMap();
}

// map<string, .ttmall.AttrGroup> attrs = 9;
int GoodsInfo::attrs_size() const {
  return attrs_.size();
}
void GoodsInfo::clear_attrs() {
  attrs_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >&
GoodsInfo::attrs() const {
  // @@protoc_insertion_point(field_map:ttmall.GoodsInfo.attrs)
  return attrs_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::ttmall::AttrGroup >*
GoodsInfo::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_map:ttmall.GoodsInfo.attrs)
  return attrs_.MutableMap();
}

// map<string, .ttmall.MapInfo> maps = 10;
int GoodsInfo::maps_size() const {
  return maps_.size();
}
void GoodsInfo::clear_maps() {
  maps_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >&
GoodsInfo::maps() const {
  // @@protoc_insertion_point(field_map:ttmall.GoodsInfo.maps)
  return maps_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::ttmall::MapInfo >*
GoodsInfo::mutable_maps() {
  // @@protoc_insertion_point(field_mutable_map:ttmall.GoodsInfo.maps)
  return maps_.MutableMap();
}

// string key_id = 11;
void GoodsInfo::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GoodsInfo::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.key_id)
  return key_id_.GetNoArena();
}
void GoodsInfo::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.key_id)
}
#if LANG_CXX11
void GoodsInfo::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GoodsInfo.key_id)
}
#endif
void GoodsInfo::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.key_id)
}
void GoodsInfo::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.key_id)
}
::std::string* GoodsInfo::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GoodsInfo::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.GoodsInfo.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GoodsInfo::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GoodsInfo.key_id)
}

// string brief = 12;
void GoodsInfo::clear_brief() {
  brief_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GoodsInfo::brief() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.brief)
  return brief_.GetNoArena();
}
void GoodsInfo::set_brief(const ::std::string& value) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.brief)
}
#if LANG_CXX11
void GoodsInfo::set_brief(::std::string&& value) {
  
  brief_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GoodsInfo.brief)
}
#endif
void GoodsInfo::set_brief(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.brief)
}
void GoodsInfo::set_brief(const char* value, size_t size) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.brief)
}
::std::string* GoodsInfo::mutable_brief() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.brief)
  return brief_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GoodsInfo::release_brief() {
  // @@protoc_insertion_point(field_release:ttmall.GoodsInfo.brief)
  
  return brief_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GoodsInfo::set_allocated_brief(::std::string* brief) {
  if (brief != NULL) {
    
  } else {
    
  }
  brief_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brief);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GoodsInfo.brief)
}

// bool disabled = 13;
void GoodsInfo::clear_disabled() {
  disabled_ = false;
}
bool GoodsInfo::disabled() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.disabled)
  return disabled_;
}
void GoodsInfo::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.disabled)
}

// string code = 14;
void GoodsInfo::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GoodsInfo::code() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.code)
  return code_.GetNoArena();
}
void GoodsInfo::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.code)
}
#if LANG_CXX11
void GoodsInfo::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GoodsInfo.code)
}
#endif
void GoodsInfo::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GoodsInfo.code)
}
void GoodsInfo::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GoodsInfo.code)
}
::std::string* GoodsInfo::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GoodsInfo.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GoodsInfo::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.GoodsInfo.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GoodsInfo::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GoodsInfo.code)
}

// bool is_collect = 15;
void GoodsInfo::clear_is_collect() {
  is_collect_ = false;
}
bool GoodsInfo::is_collect() const {
  // @@protoc_insertion_point(field_get:ttmall.GoodsInfo.is_collect)
  return is_collect_;
}
void GoodsInfo::set_is_collect(bool value) {
  
  is_collect_ = value;
  // @@protoc_insertion_point(field_set:ttmall.GoodsInfo.is_collect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NoticeInfo::kIdFieldNumber;
const int NoticeInfo::kContentFieldNumber;
const int NoticeInfo::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NoticeInfo::NoticeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.NoticeInfo)
}
NoticeInfo::NoticeInfo(const NoticeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:ttmall.NoticeInfo)
}

void NoticeInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

NoticeInfo::~NoticeInfo() {
  // @@protoc_insertion_point(destructor:ttmall.NoticeInfo)
  SharedDtor();
}

void NoticeInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NoticeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NoticeInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NoticeInfo& NoticeInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

NoticeInfo* NoticeInfo::New(::google::protobuf::Arena* arena) const {
  NoticeInfo* n = new NoticeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NoticeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.NoticeInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
}

bool NoticeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.NoticeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.NoticeInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.NoticeInfo.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.NoticeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.NoticeInfo)
  return false;
#undef DO_
}

void NoticeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.NoticeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.NoticeInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.NoticeInfo.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.NoticeInfo)
}

::google::protobuf::uint8* NoticeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.NoticeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.NoticeInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.NoticeInfo.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.NoticeInfo)
  return target;
}

size_t NoticeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.NoticeInfo)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // int64 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NoticeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.NoticeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const NoticeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NoticeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.NoticeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.NoticeInfo)
    MergeFrom(*source);
  }
}

void NoticeInfo::MergeFrom(const NoticeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.NoticeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void NoticeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.NoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NoticeInfo::CopyFrom(const NoticeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.NoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoticeInfo::IsInitialized() const {
  return true;
}

void NoticeInfo::Swap(NoticeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NoticeInfo::InternalSwap(NoticeInfo* other) {
  id_.Swap(&other->id_);
  content_.Swap(&other->content_);
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NoticeInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NoticeInfo

// string id = 1;
void NoticeInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NoticeInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.NoticeInfo.id)
  return id_.GetNoArena();
}
void NoticeInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.NoticeInfo.id)
}
#if LANG_CXX11
void NoticeInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.NoticeInfo.id)
}
#endif
void NoticeInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.NoticeInfo.id)
}
void NoticeInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.NoticeInfo.id)
}
::std::string* NoticeInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.NoticeInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NoticeInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.NoticeInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NoticeInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.NoticeInfo.id)
}

// string content = 2;
void NoticeInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NoticeInfo::content() const {
  // @@protoc_insertion_point(field_get:ttmall.NoticeInfo.content)
  return content_.GetNoArena();
}
void NoticeInfo::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.NoticeInfo.content)
}
#if LANG_CXX11
void NoticeInfo::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.NoticeInfo.content)
}
#endif
void NoticeInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.NoticeInfo.content)
}
void NoticeInfo::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.NoticeInfo.content)
}
::std::string* NoticeInfo::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.NoticeInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NoticeInfo::release_content() {
  // @@protoc_insertion_point(field_release:ttmall.NoticeInfo.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NoticeInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ttmall.NoticeInfo.content)
}

// int64 time = 3;
void NoticeInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 NoticeInfo::time() const {
  // @@protoc_insertion_point(field_get:ttmall.NoticeInfo.time)
  return time_;
}
void NoticeInfo::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.NoticeInfo.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNoticeReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNoticeReq::ListNoticeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListNoticeReq)
}
ListNoticeReq::ListNoticeReq(const ListNoticeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListNoticeReq)
}

void ListNoticeReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListNoticeReq::~ListNoticeReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListNoticeReq)
  SharedDtor();
}

void ListNoticeReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListNoticeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListNoticeReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNoticeReq& ListNoticeReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListNoticeReq* ListNoticeReq::New(::google::protobuf::Arena* arena) const {
  ListNoticeReq* n = new ListNoticeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListNoticeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListNoticeReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListNoticeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListNoticeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListNoticeReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListNoticeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListNoticeReq)
  return false;
#undef DO_
}

void ListNoticeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListNoticeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListNoticeReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListNoticeReq)
}

::google::protobuf::uint8* ListNoticeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListNoticeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListNoticeReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListNoticeReq)
  return target;
}

size_t ListNoticeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListNoticeReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListNoticeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListNoticeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNoticeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNoticeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListNoticeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListNoticeReq)
    MergeFrom(*source);
  }
}

void ListNoticeReq::MergeFrom(const ListNoticeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListNoticeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListNoticeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListNoticeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNoticeReq::CopyFrom(const ListNoticeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListNoticeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNoticeReq::IsInitialized() const {
  return true;
}

void ListNoticeReq::Swap(ListNoticeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNoticeReq::InternalSwap(ListNoticeReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListNoticeReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListNoticeReq

// string token = 1;
void ListNoticeReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListNoticeReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListNoticeReq.token)
  return token_.GetNoArena();
}
void ListNoticeReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListNoticeReq.token)
}
#if LANG_CXX11
void ListNoticeReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListNoticeReq.token)
}
#endif
void ListNoticeReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListNoticeReq.token)
}
void ListNoticeReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListNoticeReq.token)
}
::std::string* ListNoticeReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListNoticeReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListNoticeReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListNoticeReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListNoticeReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListNoticeReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListNoticeRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListNoticeRep::ListNoticeRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListNoticeRep)
}
ListNoticeRep::ListNoticeRep(const ListNoticeRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListNoticeRep)
}

void ListNoticeRep::SharedCtor() {
  _cached_size_ = 0;
}

ListNoticeRep::~ListNoticeRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListNoticeRep)
  SharedDtor();
}

void ListNoticeRep::SharedDtor() {
}

void ListNoticeRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListNoticeRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListNoticeRep& ListNoticeRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListNoticeRep* ListNoticeRep::New(::google::protobuf::Arena* arena) const {
  ListNoticeRep* n = new ListNoticeRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListNoticeRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListNoticeRep)
  items_.Clear();
}

bool ListNoticeRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListNoticeRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.NoticeInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListNoticeRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListNoticeRep)
  return false;
#undef DO_
}

void ListNoticeRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListNoticeRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.NoticeInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListNoticeRep)
}

::google::protobuf::uint8* ListNoticeRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListNoticeRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.NoticeInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListNoticeRep)
  return target;
}

size_t ListNoticeRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListNoticeRep)
  size_t total_size = 0;

  // repeated .ttmall.NoticeInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListNoticeRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListNoticeRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNoticeRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListNoticeRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListNoticeRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListNoticeRep)
    MergeFrom(*source);
  }
}

void ListNoticeRep::MergeFrom(const ListNoticeRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListNoticeRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListNoticeRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListNoticeRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNoticeRep::CopyFrom(const ListNoticeRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListNoticeRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNoticeRep::IsInitialized() const {
  return true;
}

void ListNoticeRep::Swap(ListNoticeRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListNoticeRep::InternalSwap(ListNoticeRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListNoticeRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListNoticeRep

// repeated .ttmall.NoticeInfo items = 1;
int ListNoticeRep::items_size() const {
  return items_.size();
}
void ListNoticeRep::clear_items() {
  items_.Clear();
}
const ::ttmall::NoticeInfo& ListNoticeRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListNoticeRep.items)
  return items_.Get(index);
}
::ttmall::NoticeInfo* ListNoticeRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListNoticeRep.items)
  return items_.Mutable(index);
}
::ttmall::NoticeInfo* ListNoticeRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListNoticeRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::NoticeInfo >*
ListNoticeRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListNoticeRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::NoticeInfo >&
ListNoticeRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListNoticeRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtInfo::kTypeFieldNumber;
const int ExtInfo::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtInfo::ExtInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ExtInfo)
}
ExtInfo::ExtInfo(const ExtInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ttmall.ExtInfo)
}

void ExtInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

ExtInfo::~ExtInfo() {
  // @@protoc_insertion_point(destructor:ttmall.ExtInfo)
  SharedDtor();
}

void ExtInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExtInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtInfo& ExtInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExtInfo* ExtInfo::New(::google::protobuf::Arena* arena) const {
  ExtInfo* n = new ExtInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExtInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ExtInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool ExtInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ExtInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ExtInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ExtInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ExtInfo)
  return false;
#undef DO_
}

void ExtInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ExtInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ExtInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ExtInfo)
}

::google::protobuf::uint8* ExtInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ExtInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ExtInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ExtInfo)
  return target;
}

size_t ExtInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ExtInfo)
  size_t total_size = 0;

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ExtInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ExtInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ExtInfo)
    MergeFrom(*source);
  }
}

void ExtInfo::MergeFrom(const ExtInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ExtInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ExtInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ExtInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtInfo::CopyFrom(const ExtInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ExtInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtInfo::IsInitialized() const {
  return true;
}

void ExtInfo::Swap(ExtInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtInfo::InternalSwap(ExtInfo* other) {
  id_.Swap(&other->id_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExtInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtInfo

// int32 type = 1;
void ExtInfo::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ExtInfo::type() const {
  // @@protoc_insertion_point(field_get:ttmall.ExtInfo.type)
  return type_;
}
void ExtInfo::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ExtInfo.type)
}

// string id = 2;
void ExtInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExtInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.ExtInfo.id)
  return id_.GetNoArena();
}
void ExtInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ExtInfo.id)
}
#if LANG_CXX11
void ExtInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ExtInfo.id)
}
#endif
void ExtInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ExtInfo.id)
}
void ExtInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ExtInfo.id)
}
::std::string* ExtInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ExtInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExtInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.ExtInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExtInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ExtInfo.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageInfo::kIdFieldNumber;
const int MessageInfo::kTypeFieldNumber;
const int MessageInfo::kTitleFieldNumber;
const int MessageInfo::kContentFieldNumber;
const int MessageInfo::kIsReadFieldNumber;
const int MessageInfo::kTimeFieldNumber;
const int MessageInfo::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageInfo::MessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.MessageInfo)
}
MessageInfo::MessageInfo(const MessageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_ext()) {
    ext_ = new ::ttmall::ExtInfo(*from.ext_);
  } else {
    ext_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&type_) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:ttmall.MessageInfo)
}

void MessageInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ext_, 0, reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&ext_) + sizeof(time_));
  _cached_size_ = 0;
}

MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:ttmall.MessageInfo)
  SharedDtor();
}

void MessageInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete ext_;
  }
}

void MessageInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageInfo& MessageInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageInfo* MessageInfo::New(::google::protobuf::Arena* arena) const {
  MessageInfo* n = new MessageInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.MessageInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ext_ != NULL) {
    delete ext_;
  }
  ext_ = NULL;
  ::memset(&type_, 0, reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&type_) + sizeof(time_));
}

bool MessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.MessageInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.MessageInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.MessageType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ttmall::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.MessageInfo.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.MessageInfo.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_read = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.ExtInfo ext = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.MessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.MessageInfo)
  return false;
#undef DO_
}

void MessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.MessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MessageInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .ttmall.MessageType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MessageInfo.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // string content = 4;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MessageInfo.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->content(), output);
  }

  // bool is_read = 5;
  if (this->is_read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_read(), output);
  }

  // int64 time = 6;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->time(), output);
  }

  // .ttmall.ExtInfo ext = 7;
  if (this->has_ext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->ext_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.MessageInfo)
}

::google::protobuf::uint8* MessageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.MessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MessageInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .ttmall.MessageType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MessageInfo.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // string content = 4;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.MessageInfo.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }

  // bool is_read = 5;
  if (this->is_read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_read(), target);
  }

  // int64 time = 6;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->time(), target);
  }

  // .ttmall.ExtInfo ext = 7;
  if (this->has_ext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->ext_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.MessageInfo)
  return target;
}

size_t MessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.MessageInfo)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 3;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string content = 4;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // .ttmall.ExtInfo ext = 7;
  if (this->has_ext()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ext_);
  }

  // .ttmall.MessageType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool is_read = 5;
  if (this->is_read() != 0) {
    total_size += 1 + 1;
  }

  // int64 time = 6;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.MessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.MessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.MessageInfo)
    MergeFrom(*source);
  }
}

void MessageInfo::MergeFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.MessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_ext()) {
    mutable_ext()->::ttmall::ExtInfo::MergeFrom(from.ext());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.is_read() != 0) {
    set_is_read(from.is_read());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void MessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  return true;
}

void MessageInfo::Swap(MessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageInfo::InternalSwap(MessageInfo* other) {
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  std::swap(ext_, other->ext_);
  std::swap(type_, other->type_);
  std::swap(is_read_, other->is_read_);
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageInfo

// string id = 1;
void MessageInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.MessageInfo.id)
  return id_.GetNoArena();
}
void MessageInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.MessageInfo.id)
}
#if LANG_CXX11
void MessageInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.MessageInfo.id)
}
#endif
void MessageInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.MessageInfo.id)
}
void MessageInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.MessageInfo.id)
}
::std::string* MessageInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.MessageInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.MessageInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.MessageInfo.id)
}

// .ttmall.MessageType type = 2;
void MessageInfo::clear_type() {
  type_ = 0;
}
::ttmall::MessageType MessageInfo::type() const {
  // @@protoc_insertion_point(field_get:ttmall.MessageInfo.type)
  return static_cast< ::ttmall::MessageType >(type_);
}
void MessageInfo::set_type(::ttmall::MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.MessageInfo.type)
}

// string title = 3;
void MessageInfo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageInfo::title() const {
  // @@protoc_insertion_point(field_get:ttmall.MessageInfo.title)
  return title_.GetNoArena();
}
void MessageInfo::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.MessageInfo.title)
}
#if LANG_CXX11
void MessageInfo::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.MessageInfo.title)
}
#endif
void MessageInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.MessageInfo.title)
}
void MessageInfo::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.MessageInfo.title)
}
::std::string* MessageInfo::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.MessageInfo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageInfo::release_title() {
  // @@protoc_insertion_point(field_release:ttmall.MessageInfo.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:ttmall.MessageInfo.title)
}

// string content = 4;
void MessageInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageInfo::content() const {
  // @@protoc_insertion_point(field_get:ttmall.MessageInfo.content)
  return content_.GetNoArena();
}
void MessageInfo::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.MessageInfo.content)
}
#if LANG_CXX11
void MessageInfo::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.MessageInfo.content)
}
#endif
void MessageInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.MessageInfo.content)
}
void MessageInfo::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.MessageInfo.content)
}
::std::string* MessageInfo::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.MessageInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageInfo::release_content() {
  // @@protoc_insertion_point(field_release:ttmall.MessageInfo.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ttmall.MessageInfo.content)
}

// bool is_read = 5;
void MessageInfo::clear_is_read() {
  is_read_ = false;
}
bool MessageInfo::is_read() const {
  // @@protoc_insertion_point(field_get:ttmall.MessageInfo.is_read)
  return is_read_;
}
void MessageInfo::set_is_read(bool value) {
  
  is_read_ = value;
  // @@protoc_insertion_point(field_set:ttmall.MessageInfo.is_read)
}

// int64 time = 6;
void MessageInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MessageInfo::time() const {
  // @@protoc_insertion_point(field_get:ttmall.MessageInfo.time)
  return time_;
}
void MessageInfo::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.MessageInfo.time)
}

// .ttmall.ExtInfo ext = 7;
bool MessageInfo::has_ext() const {
  return this != internal_default_instance() && ext_ != NULL;
}
void MessageInfo::clear_ext() {
  if (GetArenaNoVirtual() == NULL && ext_ != NULL) delete ext_;
  ext_ = NULL;
}
const ::ttmall::ExtInfo& MessageInfo::ext() const {
  // @@protoc_insertion_point(field_get:ttmall.MessageInfo.ext)
  return ext_ != NULL ? *ext_
                         : *::ttmall::ExtInfo::internal_default_instance();
}
::ttmall::ExtInfo* MessageInfo::mutable_ext() {
  
  if (ext_ == NULL) {
    ext_ = new ::ttmall::ExtInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.MessageInfo.ext)
  return ext_;
}
::ttmall::ExtInfo* MessageInfo::release_ext() {
  // @@protoc_insertion_point(field_release:ttmall.MessageInfo.ext)
  
  ::ttmall::ExtInfo* temp = ext_;
  ext_ = NULL;
  return temp;
}
void MessageInfo::set_allocated_ext(::ttmall::ExtInfo* ext) {
  delete ext_;
  ext_ = ext;
  if (ext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.MessageInfo.ext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMessageReq::kTokenFieldNumber;
const int ListMessageReq::kSkipFieldNumber;
const int ListMessageReq::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMessageReq::ListMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListMessageReq)
}
ListMessageReq::ListMessageReq(const ListMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&skip_, &from.skip_,
    reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:ttmall.ListMessageReq)
}

void ListMessageReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
  _cached_size_ = 0;
}

ListMessageReq::~ListMessageReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListMessageReq)
  SharedDtor();
}

void ListMessageReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMessageReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListMessageReq& ListMessageReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListMessageReq* ListMessageReq::New(::google::protobuf::Arena* arena) const {
  ListMessageReq* n = new ListMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListMessageReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
}

bool ListMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListMessageReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListMessageReq)
  return false;
#undef DO_
}

void ListMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListMessageReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skip(), output);
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->limit(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListMessageReq)
}

::google::protobuf::uint8* ListMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListMessageReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skip(), target);
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->limit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListMessageReq)
  return target;
}

size_t ListMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListMessageReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skip());
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMessageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListMessageReq)
    MergeFrom(*source);
  }
}

void ListMessageReq::MergeFrom(const ListMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.skip() != 0) {
    set_skip(from.skip());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void ListMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMessageReq::CopyFrom(const ListMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMessageReq::IsInitialized() const {
  return true;
}

void ListMessageReq::Swap(ListMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMessageReq::InternalSwap(ListMessageReq* other) {
  token_.Swap(&other->token_);
  std::swap(skip_, other->skip_);
  std::swap(limit_, other->limit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMessageReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListMessageReq

// string token = 1;
void ListMessageReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListMessageReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListMessageReq.token)
  return token_.GetNoArena();
}
void ListMessageReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListMessageReq.token)
}
#if LANG_CXX11
void ListMessageReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListMessageReq.token)
}
#endif
void ListMessageReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListMessageReq.token)
}
void ListMessageReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListMessageReq.token)
}
::std::string* ListMessageReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListMessageReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListMessageReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListMessageReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListMessageReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListMessageReq.token)
}

// int32 skip = 2;
void ListMessageReq::clear_skip() {
  skip_ = 0;
}
::google::protobuf::int32 ListMessageReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListMessageReq.skip)
  return skip_;
}
void ListMessageReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListMessageReq.skip)
}

// int32 limit = 3;
void ListMessageReq::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 ListMessageReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListMessageReq.limit)
  return limit_;
}
void ListMessageReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListMessageReq.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListMessageRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListMessageRep::ListMessageRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListMessageRep)
}
ListMessageRep::ListMessageRep(const ListMessageRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListMessageRep)
}

void ListMessageRep::SharedCtor() {
  _cached_size_ = 0;
}

ListMessageRep::~ListMessageRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListMessageRep)
  SharedDtor();
}

void ListMessageRep::SharedDtor() {
}

void ListMessageRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListMessageRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListMessageRep& ListMessageRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListMessageRep* ListMessageRep::New(::google::protobuf::Arena* arena) const {
  ListMessageRep* n = new ListMessageRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListMessageRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListMessageRep)
  items_.Clear();
}

bool ListMessageRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListMessageRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.MessageInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListMessageRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListMessageRep)
  return false;
#undef DO_
}

void ListMessageRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListMessageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.MessageInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListMessageRep)
}

::google::protobuf::uint8* ListMessageRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListMessageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.MessageInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListMessageRep)
  return target;
}

size_t ListMessageRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListMessageRep)
  size_t total_size = 0;

  // repeated .ttmall.MessageInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListMessageRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListMessageRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMessageRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListMessageRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListMessageRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListMessageRep)
    MergeFrom(*source);
  }
}

void ListMessageRep::MergeFrom(const ListMessageRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListMessageRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListMessageRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListMessageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMessageRep::CopyFrom(const ListMessageRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListMessageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMessageRep::IsInitialized() const {
  return true;
}

void ListMessageRep::Swap(ListMessageRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListMessageRep::InternalSwap(ListMessageRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListMessageRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListMessageRep

// repeated .ttmall.MessageInfo items = 1;
int ListMessageRep::items_size() const {
  return items_.size();
}
void ListMessageRep::clear_items() {
  items_.Clear();
}
const ::ttmall::MessageInfo& ListMessageRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListMessageRep.items)
  return items_.Get(index);
}
::ttmall::MessageInfo* ListMessageRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListMessageRep.items)
  return items_.Mutable(index);
}
::ttmall::MessageInfo* ListMessageRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListMessageRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::MessageInfo >*
ListMessageRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListMessageRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::MessageInfo >&
ListMessageRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListMessageRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteMessageReq::kTokenFieldNumber;
const int DeleteMessageReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteMessageReq::DeleteMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DeleteMessageReq)
}
DeleteMessageReq::DeleteMessageReq(const DeleteMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DeleteMessageReq)
}

void DeleteMessageReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteMessageReq::~DeleteMessageReq() {
  // @@protoc_insertion_point(destructor:ttmall.DeleteMessageReq)
  SharedDtor();
}

void DeleteMessageReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteMessageReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteMessageReq& DeleteMessageReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteMessageReq* DeleteMessageReq::New(::google::protobuf::Arena* arena) const {
  DeleteMessageReq* n = new DeleteMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DeleteMessageReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DeleteMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteMessageReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteMessageReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DeleteMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DeleteMessageReq)
  return false;
#undef DO_
}

void DeleteMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DeleteMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteMessageReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteMessageReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DeleteMessageReq)
}

::google::protobuf::uint8* DeleteMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DeleteMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteMessageReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteMessageReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DeleteMessageReq)
  return target;
}

size_t DeleteMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DeleteMessageReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DeleteMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteMessageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DeleteMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DeleteMessageReq)
    MergeFrom(*source);
  }
}

void DeleteMessageReq::MergeFrom(const DeleteMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DeleteMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void DeleteMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DeleteMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteMessageReq::CopyFrom(const DeleteMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DeleteMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMessageReq::IsInitialized() const {
  return true;
}

void DeleteMessageReq::Swap(DeleteMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteMessageReq::InternalSwap(DeleteMessageReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteMessageReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteMessageReq

// string token = 1;
void DeleteMessageReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteMessageReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteMessageReq.token)
  return token_.GetNoArena();
}
void DeleteMessageReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteMessageReq.token)
}
#if LANG_CXX11
void DeleteMessageReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteMessageReq.token)
}
#endif
void DeleteMessageReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteMessageReq.token)
}
void DeleteMessageReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteMessageReq.token)
}
::std::string* DeleteMessageReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteMessageReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteMessageReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteMessageReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteMessageReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteMessageReq.token)
}

// string id = 2;
void DeleteMessageReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteMessageReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteMessageReq.id)
  return id_.GetNoArena();
}
void DeleteMessageReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteMessageReq.id)
}
#if LANG_CXX11
void DeleteMessageReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteMessageReq.id)
}
#endif
void DeleteMessageReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteMessageReq.id)
}
void DeleteMessageReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteMessageReq.id)
}
::std::string* DeleteMessageReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteMessageReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteMessageReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteMessageReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteMessageReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteMessageReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteMessageRep::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteMessageRep::DeleteMessageRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DeleteMessageRep)
}
DeleteMessageRep::DeleteMessageRep(const DeleteMessageRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DeleteMessageRep)
}

void DeleteMessageRep::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteMessageRep::~DeleteMessageRep() {
  // @@protoc_insertion_point(destructor:ttmall.DeleteMessageRep)
  SharedDtor();
}

void DeleteMessageRep::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteMessageRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteMessageRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteMessageRep& DeleteMessageRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteMessageRep* DeleteMessageRep::New(::google::protobuf::Arena* arena) const {
  DeleteMessageRep* n = new DeleteMessageRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteMessageRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DeleteMessageRep)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteMessageRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DeleteMessageRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DeleteMessageRep.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DeleteMessageRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DeleteMessageRep)
  return false;
#undef DO_
}

void DeleteMessageRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DeleteMessageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteMessageRep.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DeleteMessageRep)
}

::google::protobuf::uint8* DeleteMessageRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DeleteMessageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DeleteMessageRep.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DeleteMessageRep)
  return target;
}

size_t DeleteMessageRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DeleteMessageRep)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteMessageRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DeleteMessageRep)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteMessageRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteMessageRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DeleteMessageRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DeleteMessageRep)
    MergeFrom(*source);
  }
}

void DeleteMessageRep::MergeFrom(const DeleteMessageRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DeleteMessageRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void DeleteMessageRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DeleteMessageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteMessageRep::CopyFrom(const DeleteMessageRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DeleteMessageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMessageRep::IsInitialized() const {
  return true;
}

void DeleteMessageRep::Swap(DeleteMessageRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteMessageRep::InternalSwap(DeleteMessageRep* other) {
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteMessageRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteMessageRep

// string id = 1;
void DeleteMessageRep::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteMessageRep::id() const {
  // @@protoc_insertion_point(field_get:ttmall.DeleteMessageRep.id)
  return id_.GetNoArena();
}
void DeleteMessageRep::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DeleteMessageRep.id)
}
#if LANG_CXX11
void DeleteMessageRep::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DeleteMessageRep.id)
}
#endif
void DeleteMessageRep::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DeleteMessageRep.id)
}
void DeleteMessageRep::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DeleteMessageRep.id)
}
::std::string* DeleteMessageRep::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DeleteMessageRep.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteMessageRep::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.DeleteMessageRep.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteMessageRep::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DeleteMessageRep.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMessageReadReq::kTokenFieldNumber;
const int SetMessageReadReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMessageReadReq::SetMessageReadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetMessageReadReq)
}
SetMessageReadReq::SetMessageReadReq(const SetMessageReadReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SetMessageReadReq)
}

void SetMessageReadReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetMessageReadReq::~SetMessageReadReq() {
  // @@protoc_insertion_point(destructor:ttmall.SetMessageReadReq)
  SharedDtor();
}

void SetMessageReadReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetMessageReadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMessageReadReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetMessageReadReq& SetMessageReadReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetMessageReadReq* SetMessageReadReq::New(::google::protobuf::Arena* arena) const {
  SetMessageReadReq* n = new SetMessageReadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMessageReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetMessageReadReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SetMessageReadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetMessageReadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetMessageReadReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetMessageReadReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetMessageReadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetMessageReadReq)
  return false;
#undef DO_
}

void SetMessageReadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetMessageReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetMessageReadReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetMessageReadReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SetMessageReadReq)
}

::google::protobuf::uint8* SetMessageReadReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetMessageReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetMessageReadReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetMessageReadReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetMessageReadReq)
  return target;
}

size_t SetMessageReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetMessageReadReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMessageReadReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetMessageReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMessageReadReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMessageReadReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetMessageReadReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetMessageReadReq)
    MergeFrom(*source);
  }
}

void SetMessageReadReq::MergeFrom(const SetMessageReadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetMessageReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void SetMessageReadReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetMessageReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMessageReadReq::CopyFrom(const SetMessageReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetMessageReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMessageReadReq::IsInitialized() const {
  return true;
}

void SetMessageReadReq::Swap(SetMessageReadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMessageReadReq::InternalSwap(SetMessageReadReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMessageReadReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMessageReadReq

// string token = 1;
void SetMessageReadReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetMessageReadReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SetMessageReadReq.token)
  return token_.GetNoArena();
}
void SetMessageReadReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetMessageReadReq.token)
}
#if LANG_CXX11
void SetMessageReadReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetMessageReadReq.token)
}
#endif
void SetMessageReadReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetMessageReadReq.token)
}
void SetMessageReadReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetMessageReadReq.token)
}
::std::string* SetMessageReadReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetMessageReadReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMessageReadReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SetMessageReadReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMessageReadReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetMessageReadReq.token)
}

// string id = 2;
void SetMessageReadReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetMessageReadReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetMessageReadReq.id)
  return id_.GetNoArena();
}
void SetMessageReadReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetMessageReadReq.id)
}
#if LANG_CXX11
void SetMessageReadReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetMessageReadReq.id)
}
#endif
void SetMessageReadReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetMessageReadReq.id)
}
void SetMessageReadReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetMessageReadReq.id)
}
::std::string* SetMessageReadReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetMessageReadReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMessageReadReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetMessageReadReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMessageReadReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetMessageReadReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMessageReadRep::kIdFieldNumber;
const int SetMessageReadRep::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMessageReadRep::SetMessageReadRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetMessageReadRep)
}
SetMessageReadRep::SetMessageReadRep(const SetMessageReadRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:ttmall.SetMessageReadRep)
}

void SetMessageReadRep::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  _cached_size_ = 0;
}

SetMessageReadRep::~SetMessageReadRep() {
  // @@protoc_insertion_point(destructor:ttmall.SetMessageReadRep)
  SharedDtor();
}

void SetMessageReadRep::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetMessageReadRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMessageReadRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetMessageReadRep& SetMessageReadRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetMessageReadRep* SetMessageReadRep::New(::google::protobuf::Arena* arena) const {
  SetMessageReadRep* n = new SetMessageReadRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMessageReadRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetMessageReadRep)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
}

bool SetMessageReadRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetMessageReadRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetMessageReadRep.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetMessageReadRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetMessageReadRep)
  return false;
#undef DO_
}

void SetMessageReadRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetMessageReadRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetMessageReadRep.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SetMessageReadRep)
}

::google::protobuf::uint8* SetMessageReadRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetMessageReadRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetMessageReadRep.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetMessageReadRep)
  return target;
}

size_t SetMessageReadRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetMessageReadRep)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMessageReadRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetMessageReadRep)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMessageReadRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMessageReadRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetMessageReadRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetMessageReadRep)
    MergeFrom(*source);
  }
}

void SetMessageReadRep::MergeFrom(const SetMessageReadRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetMessageReadRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void SetMessageReadRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetMessageReadRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMessageReadRep::CopyFrom(const SetMessageReadRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetMessageReadRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMessageReadRep::IsInitialized() const {
  return true;
}

void SetMessageReadRep::Swap(SetMessageReadRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMessageReadRep::InternalSwap(SetMessageReadRep* other) {
  id_.Swap(&other->id_);
  std::swap(count_, other->count_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMessageReadRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMessageReadRep

// string id = 1;
void SetMessageReadRep::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetMessageReadRep::id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetMessageReadRep.id)
  return id_.GetNoArena();
}
void SetMessageReadRep::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetMessageReadRep.id)
}
#if LANG_CXX11
void SetMessageReadRep::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetMessageReadRep.id)
}
#endif
void SetMessageReadRep::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetMessageReadRep.id)
}
void SetMessageReadRep::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetMessageReadRep.id)
}
::std::string* SetMessageReadRep::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetMessageReadRep.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMessageReadRep::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetMessageReadRep.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMessageReadRep::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetMessageReadRep.id)
}

// int32 count = 2;
void SetMessageReadRep::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 SetMessageReadRep::count() const {
  // @@protoc_insertion_point(field_get:ttmall.SetMessageReadRep.count)
  return count_;
}
void SetMessageReadRep::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.SetMessageReadRep.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNewMessageReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNewMessageReq::GetNewMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetNewMessageReq)
}
GetNewMessageReq::GetNewMessageReq(const GetNewMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetNewMessageReq)
}

void GetNewMessageReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetNewMessageReq::~GetNewMessageReq() {
  // @@protoc_insertion_point(destructor:ttmall.GetNewMessageReq)
  SharedDtor();
}

void GetNewMessageReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetNewMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewMessageReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNewMessageReq& GetNewMessageReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetNewMessageReq* GetNewMessageReq::New(::google::protobuf::Arena* arena) const {
  GetNewMessageReq* n = new GetNewMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNewMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetNewMessageReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetNewMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetNewMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetNewMessageReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetNewMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetNewMessageReq)
  return false;
#undef DO_
}

void GetNewMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetNewMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetNewMessageReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetNewMessageReq)
}

::google::protobuf::uint8* GetNewMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetNewMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetNewMessageReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetNewMessageReq)
  return target;
}

size_t GetNewMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetNewMessageReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetNewMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNewMessageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNewMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetNewMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetNewMessageReq)
    MergeFrom(*source);
  }
}

void GetNewMessageReq::MergeFrom(const GetNewMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetNewMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void GetNewMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetNewMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewMessageReq::CopyFrom(const GetNewMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetNewMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewMessageReq::IsInitialized() const {
  return true;
}

void GetNewMessageReq::Swap(GetNewMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNewMessageReq::InternalSwap(GetNewMessageReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNewMessageReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNewMessageReq

// string token = 1;
void GetNewMessageReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetNewMessageReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetNewMessageReq.token)
  return token_.GetNoArena();
}
void GetNewMessageReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetNewMessageReq.token)
}
#if LANG_CXX11
void GetNewMessageReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetNewMessageReq.token)
}
#endif
void GetNewMessageReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetNewMessageReq.token)
}
void GetNewMessageReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetNewMessageReq.token)
}
::std::string* GetNewMessageReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetNewMessageReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetNewMessageReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetNewMessageReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetNewMessageReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetNewMessageReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNewMessageRep::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNewMessageRep::GetNewMessageRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetNewMessageRep)
}
GetNewMessageRep::GetNewMessageRep(const GetNewMessageRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:ttmall.GetNewMessageRep)
}

void GetNewMessageRep::SharedCtor() {
  count_ = 0;
  _cached_size_ = 0;
}

GetNewMessageRep::~GetNewMessageRep() {
  // @@protoc_insertion_point(destructor:ttmall.GetNewMessageRep)
  SharedDtor();
}

void GetNewMessageRep::SharedDtor() {
}

void GetNewMessageRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewMessageRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetNewMessageRep& GetNewMessageRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetNewMessageRep* GetNewMessageRep::New(::google::protobuf::Arena* arena) const {
  GetNewMessageRep* n = new GetNewMessageRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNewMessageRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetNewMessageRep)
  count_ = 0;
}

bool GetNewMessageRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetNewMessageRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetNewMessageRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetNewMessageRep)
  return false;
#undef DO_
}

void GetNewMessageRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetNewMessageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetNewMessageRep)
}

::google::protobuf::uint8* GetNewMessageRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetNewMessageRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetNewMessageRep)
  return target;
}

size_t GetNewMessageRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetNewMessageRep)
  size_t total_size = 0;

  // int32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewMessageRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetNewMessageRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetNewMessageRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNewMessageRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetNewMessageRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetNewMessageRep)
    MergeFrom(*source);
  }
}

void GetNewMessageRep::MergeFrom(const GetNewMessageRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetNewMessageRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
}

void GetNewMessageRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetNewMessageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewMessageRep::CopyFrom(const GetNewMessageRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetNewMessageRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewMessageRep::IsInitialized() const {
  return true;
}

void GetNewMessageRep::Swap(GetNewMessageRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNewMessageRep::InternalSwap(GetNewMessageRep* other) {
  std::swap(count_, other->count_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNewMessageRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNewMessageRep

// int32 count = 1;
void GetNewMessageRep::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 GetNewMessageRep::count() const {
  // @@protoc_insertion_point(field_get:ttmall.GetNewMessageRep.count)
  return count_;
}
void GetNewMessageRep::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.GetNewMessageRep.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordInfo::kLngFieldNumber;
const int CoordInfo::kLatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordInfo::CoordInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.CoordInfo)
}
CoordInfo::CoordInfo(const CoordInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lng_, &from.lng_,
    reinterpret_cast<char*>(&lat_) -
    reinterpret_cast<char*>(&lng_) + sizeof(lat_));
  // @@protoc_insertion_point(copy_constructor:ttmall.CoordInfo)
}

void CoordInfo::SharedCtor() {
  ::memset(&lng_, 0, reinterpret_cast<char*>(&lat_) -
    reinterpret_cast<char*>(&lng_) + sizeof(lat_));
  _cached_size_ = 0;
}

CoordInfo::~CoordInfo() {
  // @@protoc_insertion_point(destructor:ttmall.CoordInfo)
  SharedDtor();
}

void CoordInfo::SharedDtor() {
}

void CoordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoordInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoordInfo& CoordInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

CoordInfo* CoordInfo::New(::google::protobuf::Arena* arena) const {
  CoordInfo* n = new CoordInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CoordInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.CoordInfo)
  ::memset(&lng_, 0, reinterpret_cast<char*>(&lat_) -
    reinterpret_cast<char*>(&lng_) + sizeof(lat_));
}

bool CoordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.CoordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double lng = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lng_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.CoordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.CoordInfo)
  return false;
#undef DO_
}

void CoordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.CoordInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lng = 1;
  if (this->lng() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lng(), output);
  }

  // double lat = 2;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lat(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.CoordInfo)
}

::google::protobuf::uint8* CoordInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.CoordInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lng = 1;
  if (this->lng() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->lng(), target);
  }

  // double lat = 2;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lat(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.CoordInfo)
  return target;
}

size_t CoordInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.CoordInfo)
  size_t total_size = 0;

  // double lng = 1;
  if (this->lng() != 0) {
    total_size += 1 + 8;
  }

  // double lat = 2;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoordInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.CoordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoordInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.CoordInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.CoordInfo)
    MergeFrom(*source);
  }
}

void CoordInfo::MergeFrom(const CoordInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.CoordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lng() != 0) {
    set_lng(from.lng());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
}

void CoordInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.CoordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordInfo::CopyFrom(const CoordInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.CoordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordInfo::IsInitialized() const {
  return true;
}

void CoordInfo::Swap(CoordInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordInfo::InternalSwap(CoordInfo* other) {
  std::swap(lng_, other->lng_);
  std::swap(lat_, other->lat_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CoordInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CoordInfo

// double lng = 1;
void CoordInfo::clear_lng() {
  lng_ = 0;
}
double CoordInfo::lng() const {
  // @@protoc_insertion_point(field_get:ttmall.CoordInfo.lng)
  return lng_;
}
void CoordInfo::set_lng(double value) {
  
  lng_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CoordInfo.lng)
}

// double lat = 2;
void CoordInfo::clear_lat() {
  lat_ = 0;
}
double CoordInfo::lat() const {
  // @@protoc_insertion_point(field_get:ttmall.CoordInfo.lat)
  return lat_;
}
void CoordInfo::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CoordInfo.lat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionInfo::kIdFieldNumber;
const int RegionInfo::kNameFieldNumber;
const int RegionInfo::kParentFieldNumber;
const int RegionInfo::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionInfo::RegionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.RegionInfo)
}
RegionInfo::RegionInfo(const RegionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.RegionInfo)
}

void RegionInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegionInfo::~RegionInfo() {
  // @@protoc_insertion_point(destructor:ttmall.RegionInfo)
  SharedDtor();
}

void RegionInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionInfo& RegionInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegionInfo* RegionInfo::New(::google::protobuf::Arena* arena) const {
  RegionInfo* n = new RegionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.RegionInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RegionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.RegionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegionInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegionInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegionInfo.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RegionInfo.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.RegionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.RegionInfo)
  return false;
#undef DO_
}

void RegionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.RegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegionInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegionInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegionInfo.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->parent(), output);
  }

  // string code = 4;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegionInfo.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.RegionInfo)
}

::google::protobuf::uint8* RegionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.RegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegionInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegionInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegionInfo.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->parent(), target);
  }

  // string code = 4;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RegionInfo.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.RegionInfo)
  return target;
}

size_t RegionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.RegionInfo)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parent = 3;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string code = 4;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.RegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.RegionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.RegionInfo)
    MergeFrom(*source);
  }
}

void RegionInfo::MergeFrom(const RegionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.RegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void RegionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.RegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionInfo::CopyFrom(const RegionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.RegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionInfo::IsInitialized() const {
  return true;
}

void RegionInfo::Swap(RegionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionInfo::InternalSwap(RegionInfo* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  parent_.Swap(&other->parent_);
  code_.Swap(&other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionInfo

// string id = 1;
void RegionInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.RegionInfo.id)
  return id_.GetNoArena();
}
void RegionInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegionInfo.id)
}
#if LANG_CXX11
void RegionInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegionInfo.id)
}
#endif
void RegionInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegionInfo.id)
}
void RegionInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegionInfo.id)
}
::std::string* RegionInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegionInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.RegionInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegionInfo.id)
}

// string name = 2;
void RegionInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.RegionInfo.name)
  return name_.GetNoArena();
}
void RegionInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegionInfo.name)
}
#if LANG_CXX11
void RegionInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegionInfo.name)
}
#endif
void RegionInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegionInfo.name)
}
void RegionInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegionInfo.name)
}
::std::string* RegionInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegionInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.RegionInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegionInfo.name)
}

// string parent = 3;
void RegionInfo::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::parent() const {
  // @@protoc_insertion_point(field_get:ttmall.RegionInfo.parent)
  return parent_.GetNoArena();
}
void RegionInfo::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegionInfo.parent)
}
#if LANG_CXX11
void RegionInfo::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegionInfo.parent)
}
#endif
void RegionInfo::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegionInfo.parent)
}
void RegionInfo::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegionInfo.parent)
}
::std::string* RegionInfo::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegionInfo.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_parent() {
  // @@protoc_insertion_point(field_release:ttmall.RegionInfo.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegionInfo.parent)
}

// string code = 4;
void RegionInfo::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::code() const {
  // @@protoc_insertion_point(field_get:ttmall.RegionInfo.code)
  return code_.GetNoArena();
}
void RegionInfo::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RegionInfo.code)
}
#if LANG_CXX11
void RegionInfo::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RegionInfo.code)
}
#endif
void RegionInfo::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RegionInfo.code)
}
void RegionInfo::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RegionInfo.code)
}
::std::string* RegionInfo::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RegionInfo.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.RegionInfo.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RegionInfo.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageInfo::kSmallFieldNumber;
const int ImageInfo::kBigFieldNumber;
const int ImageInfo::kMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageInfo::ImageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ImageInfo)
}
ImageInfo::ImageInfo(const ImageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  small_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.small().size() > 0) {
    small_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.small_);
  }
  big_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.big().size() > 0) {
    big_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_);
  }
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5().size() > 0) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ImageInfo)
}

void ImageInfo::SharedCtor() {
  small_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ImageInfo::~ImageInfo() {
  // @@protoc_insertion_point(destructor:ttmall.ImageInfo)
  SharedDtor();
}

void ImageInfo::SharedDtor() {
  small_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageInfo& ImageInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImageInfo* ImageInfo::New(::google::protobuf::Arena* arena) const {
  ImageInfo* n = new ImageInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ImageInfo)
  small_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ImageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ImageInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string small = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_small()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->small().data(), this->small().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ImageInfo.small"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string big = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_big()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->big().data(), this->big().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ImageInfo.big"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string md5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->md5().data(), this->md5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ImageInfo.md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ImageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ImageInfo)
  return false;
#undef DO_
}

void ImageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ImageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string small = 1;
  if (this->small().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->small().data(), this->small().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ImageInfo.small");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->small(), output);
  }

  // string big = 2;
  if (this->big().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big().data(), this->big().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ImageInfo.big");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->big(), output);
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ImageInfo.md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->md5(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ImageInfo)
}

::google::protobuf::uint8* ImageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ImageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string small = 1;
  if (this->small().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->small().data(), this->small().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ImageInfo.small");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->small(), target);
  }

  // string big = 2;
  if (this->big().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big().data(), this->big().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ImageInfo.big");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->big(), target);
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ImageInfo.md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->md5(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ImageInfo)
  return target;
}

size_t ImageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ImageInfo)
  size_t total_size = 0;

  // string small = 1;
  if (this->small().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->small());
  }

  // string big = 2;
  if (this->big().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->big());
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->md5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ImageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ImageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ImageInfo)
    MergeFrom(*source);
  }
}

void ImageInfo::MergeFrom(const ImageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ImageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.small().size() > 0) {

    small_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.small_);
  }
  if (from.big().size() > 0) {

    big_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_);
  }
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
}

void ImageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ImageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageInfo::CopyFrom(const ImageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ImageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageInfo::IsInitialized() const {
  return true;
}

void ImageInfo::Swap(ImageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageInfo::InternalSwap(ImageInfo* other) {
  small_.Swap(&other->small_);
  big_.Swap(&other->big_);
  md5_.Swap(&other->md5_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageInfo

// string small = 1;
void ImageInfo::clear_small() {
  small_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ImageInfo::small() const {
  // @@protoc_insertion_point(field_get:ttmall.ImageInfo.small)
  return small_.GetNoArena();
}
void ImageInfo::set_small(const ::std::string& value) {
  
  small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ImageInfo.small)
}
#if LANG_CXX11
void ImageInfo::set_small(::std::string&& value) {
  
  small_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ImageInfo.small)
}
#endif
void ImageInfo::set_small(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ImageInfo.small)
}
void ImageInfo::set_small(const char* value, size_t size) {
  
  small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ImageInfo.small)
}
::std::string* ImageInfo::mutable_small() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ImageInfo.small)
  return small_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ImageInfo::release_small() {
  // @@protoc_insertion_point(field_release:ttmall.ImageInfo.small)
  
  return small_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImageInfo::set_allocated_small(::std::string* small) {
  if (small != NULL) {
    
  } else {
    
  }
  small_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), small);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ImageInfo.small)
}

// string big = 2;
void ImageInfo::clear_big() {
  big_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ImageInfo::big() const {
  // @@protoc_insertion_point(field_get:ttmall.ImageInfo.big)
  return big_.GetNoArena();
}
void ImageInfo::set_big(const ::std::string& value) {
  
  big_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ImageInfo.big)
}
#if LANG_CXX11
void ImageInfo::set_big(::std::string&& value) {
  
  big_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ImageInfo.big)
}
#endif
void ImageInfo::set_big(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  big_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ImageInfo.big)
}
void ImageInfo::set_big(const char* value, size_t size) {
  
  big_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ImageInfo.big)
}
::std::string* ImageInfo::mutable_big() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ImageInfo.big)
  return big_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ImageInfo::release_big() {
  // @@protoc_insertion_point(field_release:ttmall.ImageInfo.big)
  
  return big_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImageInfo::set_allocated_big(::std::string* big) {
  if (big != NULL) {
    
  } else {
    
  }
  big_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), big);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ImageInfo.big)
}

// string md5 = 3;
void ImageInfo::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ImageInfo::md5() const {
  // @@protoc_insertion_point(field_get:ttmall.ImageInfo.md5)
  return md5_.GetNoArena();
}
void ImageInfo::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ImageInfo.md5)
}
#if LANG_CXX11
void ImageInfo::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ImageInfo.md5)
}
#endif
void ImageInfo::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ImageInfo.md5)
}
void ImageInfo::set_md5(const char* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ImageInfo.md5)
}
::std::string* ImageInfo::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ImageInfo.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ImageInfo::release_md5() {
  // @@protoc_insertion_point(field_release:ttmall.ImageInfo.md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImageInfo::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ImageInfo.md5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CouponInfo::kIdFieldNumber;
const int CouponInfo::kNameFieldNumber;
const int CouponInfo::kAmountFieldNumber;
const int CouponInfo::kDiscountFieldNumber;
const int CouponInfo::kExpTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CouponInfo::CouponInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.CouponInfo)
}
CouponInfo::CouponInfo(const CouponInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&amount_, &from.amount_,
    reinterpret_cast<char*>(&exp_time_) -
    reinterpret_cast<char*>(&amount_) + sizeof(exp_time_));
  // @@protoc_insertion_point(copy_constructor:ttmall.CouponInfo)
}

void CouponInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, reinterpret_cast<char*>(&exp_time_) -
    reinterpret_cast<char*>(&amount_) + sizeof(exp_time_));
  _cached_size_ = 0;
}

CouponInfo::~CouponInfo() {
  // @@protoc_insertion_point(destructor:ttmall.CouponInfo)
  SharedDtor();
}

void CouponInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CouponInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CouponInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CouponInfo& CouponInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

CouponInfo* CouponInfo::New(::google::protobuf::Arena* arena) const {
  CouponInfo* n = new CouponInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CouponInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.CouponInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, reinterpret_cast<char*>(&exp_time_) -
    reinterpret_cast<char*>(&amount_) + sizeof(exp_time_));
}

bool CouponInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.CouponInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CouponInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CouponInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 discount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 exp_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.CouponInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.CouponInfo)
  return false;
#undef DO_
}

void CouponInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.CouponInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CouponInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CouponInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 amount = 3;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }

  // int32 discount = 4;
  if (this->discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->discount(), output);
  }

  // int64 exp_time = 5;
  if (this->exp_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->exp_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.CouponInfo)
}

::google::protobuf::uint8* CouponInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.CouponInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CouponInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CouponInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 amount = 3;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }

  // int32 discount = 4;
  if (this->discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->discount(), target);
  }

  // int64 exp_time = 5;
  if (this->exp_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->exp_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.CouponInfo)
  return target;
}

size_t CouponInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.CouponInfo)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  // int32 discount = 4;
  if (this->discount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->discount());
  }

  // int64 exp_time = 5;
  if (this->exp_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exp_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CouponInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.CouponInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CouponInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CouponInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.CouponInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.CouponInfo)
    MergeFrom(*source);
  }
}

void CouponInfo::MergeFrom(const CouponInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.CouponInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.discount() != 0) {
    set_discount(from.discount());
  }
  if (from.exp_time() != 0) {
    set_exp_time(from.exp_time());
  }
}

void CouponInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.CouponInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CouponInfo::CopyFrom(const CouponInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.CouponInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CouponInfo::IsInitialized() const {
  return true;
}

void CouponInfo::Swap(CouponInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CouponInfo::InternalSwap(CouponInfo* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(amount_, other->amount_);
  std::swap(discount_, other->discount_);
  std::swap(exp_time_, other->exp_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CouponInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CouponInfo

// string id = 1;
void CouponInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CouponInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.CouponInfo.id)
  return id_.GetNoArena();
}
void CouponInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CouponInfo.id)
}
#if LANG_CXX11
void CouponInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CouponInfo.id)
}
#endif
void CouponInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CouponInfo.id)
}
void CouponInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CouponInfo.id)
}
::std::string* CouponInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CouponInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CouponInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.CouponInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CouponInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CouponInfo.id)
}

// string name = 2;
void CouponInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CouponInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.CouponInfo.name)
  return name_.GetNoArena();
}
void CouponInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CouponInfo.name)
}
#if LANG_CXX11
void CouponInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CouponInfo.name)
}
#endif
void CouponInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CouponInfo.name)
}
void CouponInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CouponInfo.name)
}
::std::string* CouponInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CouponInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CouponInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.CouponInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CouponInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CouponInfo.name)
}

// int32 amount = 3;
void CouponInfo::clear_amount() {
  amount_ = 0;
}
::google::protobuf::int32 CouponInfo::amount() const {
  // @@protoc_insertion_point(field_get:ttmall.CouponInfo.amount)
  return amount_;
}
void CouponInfo::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CouponInfo.amount)
}

// int32 discount = 4;
void CouponInfo::clear_discount() {
  discount_ = 0;
}
::google::protobuf::int32 CouponInfo::discount() const {
  // @@protoc_insertion_point(field_get:ttmall.CouponInfo.discount)
  return discount_;
}
void CouponInfo::set_discount(::google::protobuf::int32 value) {
  
  discount_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CouponInfo.discount)
}

// int64 exp_time = 5;
void CouponInfo::clear_exp_time() {
  exp_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CouponInfo::exp_time() const {
  // @@protoc_insertion_point(field_get:ttmall.CouponInfo.exp_time)
  return exp_time_;
}
void CouponInfo::set_exp_time(::google::protobuf::int64 value) {
  
  exp_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CouponInfo.exp_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CarInfo::kIdFieldNumber;
const int CarInfo::kNameFieldNumber;
const int CarInfo::kModelFieldNumber;
const int CarInfo::kLengthFieldNumber;
const int CarInfo::kLoadFieldNumber;
const int CarInfo::kCapacityFieldNumber;
const int CarInfo::kColorFieldNumber;
const int CarInfo::kMarkFieldNumber;
const int CarInfo::kPhotosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CarInfo::CarInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.CarInfo)
}
CarInfo::CarInfo(const CarInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      photos_(from.photos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  length_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.length().size() > 0) {
    length_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.length_);
  }
  load_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.load().size() > 0) {
    load_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.load_);
  }
  capacity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.capacity().size() > 0) {
    capacity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.capacity_);
  }
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.color().size() > 0) {
    color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
  }
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mark().size() > 0) {
    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.CarInfo)
}

void CarInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capacity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CarInfo::~CarInfo() {
  // @@protoc_insertion_point(destructor:ttmall.CarInfo)
  SharedDtor();
}

void CarInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capacity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CarInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CarInfo& CarInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

CarInfo* CarInfo::New(::google::protobuf::Arena* arena) const {
  CarInfo* n = new CarInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CarInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.CarInfo)
  photos_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capacity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.CarInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CarInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CarInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), this->model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CarInfo.model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_length()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->length().data(), this->length().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CarInfo.length"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string load = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_load()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->load().data(), this->load().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CarInfo.load"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string capacity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_capacity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->capacity().data(), this->capacity().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CarInfo.capacity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string color = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->color().data(), this->color().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CarInfo.color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mark = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mark().data(), this->mark().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CarInfo.mark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.ImageInfo photos = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_photos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.CarInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.CarInfo)
  return false;
#undef DO_
}

void CarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.CarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->model(), output);
  }

  // string length = 4;
  if (this->length().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->length().data(), this->length().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.length");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->length(), output);
  }

  // string load = 5;
  if (this->load().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load().data(), this->load().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.load");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->load(), output);
  }

  // string capacity = 6;
  if (this->capacity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->capacity().data(), this->capacity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.capacity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->capacity(), output);
  }

  // string color = 7;
  if (this->color().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->color(), output);
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.mark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mark(), output);
  }

  // repeated .ttmall.ImageInfo photos = 9;
  for (unsigned int i = 0, n = this->photos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->photos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.CarInfo)
}

::google::protobuf::uint8* CarInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.CarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->model(), target);
  }

  // string length = 4;
  if (this->length().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->length().data(), this->length().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.length");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->length(), target);
  }

  // string load = 5;
  if (this->load().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load().data(), this->load().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.load");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->load(), target);
  }

  // string capacity = 6;
  if (this->capacity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->capacity().data(), this->capacity().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.capacity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->capacity(), target);
  }

  // string color = 7;
  if (this->color().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), this->color().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->color(), target);
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CarInfo.mark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mark(), target);
  }

  // repeated .ttmall.ImageInfo photos = 9;
  for (unsigned int i = 0, n = this->photos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->photos(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.CarInfo)
  return target;
}

size_t CarInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.CarInfo)
  size_t total_size = 0;

  // repeated .ttmall.ImageInfo photos = 9;
  {
    unsigned int count = this->photos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->photos(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string model = 3;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // string length = 4;
  if (this->length().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->length());
  }

  // string load = 5;
  if (this->load().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->load());
  }

  // string capacity = 6;
  if (this->capacity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->capacity());
  }

  // string color = 7;
  if (this->color().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->color());
  }

  // string mark = 8;
  if (this->mark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mark());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CarInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.CarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CarInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CarInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.CarInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.CarInfo)
    MergeFrom(*source);
  }
}

void CarInfo::MergeFrom(const CarInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.CarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  photos_.MergeFrom(from.photos_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.length().size() > 0) {

    length_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.length_);
  }
  if (from.load().size() > 0) {

    load_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.load_);
  }
  if (from.capacity().size() > 0) {

    capacity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.capacity_);
  }
  if (from.color().size() > 0) {

    color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
  }
  if (from.mark().size() > 0) {

    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
}

void CarInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.CarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarInfo::CopyFrom(const CarInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.CarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarInfo::IsInitialized() const {
  return true;
}

void CarInfo::Swap(CarInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CarInfo::InternalSwap(CarInfo* other) {
  photos_.InternalSwap(&other->photos_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  model_.Swap(&other->model_);
  length_.Swap(&other->length_);
  load_.Swap(&other->load_);
  capacity_.Swap(&other->capacity_);
  color_.Swap(&other->color_);
  mark_.Swap(&other->mark_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CarInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CarInfo

// string id = 1;
void CarInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CarInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.id)
  return id_.GetNoArena();
}
void CarInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CarInfo.id)
}
#if LANG_CXX11
void CarInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CarInfo.id)
}
#endif
void CarInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CarInfo.id)
}
void CarInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CarInfo.id)
}
::std::string* CarInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CarInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.CarInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CarInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CarInfo.id)
}

// string name = 2;
void CarInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CarInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.name)
  return name_.GetNoArena();
}
void CarInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CarInfo.name)
}
#if LANG_CXX11
void CarInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CarInfo.name)
}
#endif
void CarInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CarInfo.name)
}
void CarInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CarInfo.name)
}
::std::string* CarInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CarInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.CarInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CarInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CarInfo.name)
}

// string model = 3;
void CarInfo::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CarInfo::model() const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.model)
  return model_.GetNoArena();
}
void CarInfo::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CarInfo.model)
}
#if LANG_CXX11
void CarInfo::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CarInfo.model)
}
#endif
void CarInfo::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CarInfo.model)
}
void CarInfo::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CarInfo.model)
}
::std::string* CarInfo::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CarInfo::release_model() {
  // @@protoc_insertion_point(field_release:ttmall.CarInfo.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CarInfo::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CarInfo.model)
}

// string length = 4;
void CarInfo::clear_length() {
  length_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CarInfo::length() const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.length)
  return length_.GetNoArena();
}
void CarInfo::set_length(const ::std::string& value) {
  
  length_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CarInfo.length)
}
#if LANG_CXX11
void CarInfo::set_length(::std::string&& value) {
  
  length_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CarInfo.length)
}
#endif
void CarInfo::set_length(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  length_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CarInfo.length)
}
void CarInfo::set_length(const char* value, size_t size) {
  
  length_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CarInfo.length)
}
::std::string* CarInfo::mutable_length() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.length)
  return length_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CarInfo::release_length() {
  // @@protoc_insertion_point(field_release:ttmall.CarInfo.length)
  
  return length_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CarInfo::set_allocated_length(::std::string* length) {
  if (length != NULL) {
    
  } else {
    
  }
  length_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), length);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CarInfo.length)
}

// string load = 5;
void CarInfo::clear_load() {
  load_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CarInfo::load() const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.load)
  return load_.GetNoArena();
}
void CarInfo::set_load(const ::std::string& value) {
  
  load_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CarInfo.load)
}
#if LANG_CXX11
void CarInfo::set_load(::std::string&& value) {
  
  load_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CarInfo.load)
}
#endif
void CarInfo::set_load(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  load_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CarInfo.load)
}
void CarInfo::set_load(const char* value, size_t size) {
  
  load_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CarInfo.load)
}
::std::string* CarInfo::mutable_load() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.load)
  return load_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CarInfo::release_load() {
  // @@protoc_insertion_point(field_release:ttmall.CarInfo.load)
  
  return load_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CarInfo::set_allocated_load(::std::string* load) {
  if (load != NULL) {
    
  } else {
    
  }
  load_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), load);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CarInfo.load)
}

// string capacity = 6;
void CarInfo::clear_capacity() {
  capacity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CarInfo::capacity() const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.capacity)
  return capacity_.GetNoArena();
}
void CarInfo::set_capacity(const ::std::string& value) {
  
  capacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CarInfo.capacity)
}
#if LANG_CXX11
void CarInfo::set_capacity(::std::string&& value) {
  
  capacity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CarInfo.capacity)
}
#endif
void CarInfo::set_capacity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  capacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CarInfo.capacity)
}
void CarInfo::set_capacity(const char* value, size_t size) {
  
  capacity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CarInfo.capacity)
}
::std::string* CarInfo::mutable_capacity() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.capacity)
  return capacity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CarInfo::release_capacity() {
  // @@protoc_insertion_point(field_release:ttmall.CarInfo.capacity)
  
  return capacity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CarInfo::set_allocated_capacity(::std::string* capacity) {
  if (capacity != NULL) {
    
  } else {
    
  }
  capacity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), capacity);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CarInfo.capacity)
}

// string color = 7;
void CarInfo::clear_color() {
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CarInfo::color() const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.color)
  return color_.GetNoArena();
}
void CarInfo::set_color(const ::std::string& value) {
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CarInfo.color)
}
#if LANG_CXX11
void CarInfo::set_color(::std::string&& value) {
  
  color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CarInfo.color)
}
#endif
void CarInfo::set_color(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CarInfo.color)
}
void CarInfo::set_color(const char* value, size_t size) {
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CarInfo.color)
}
::std::string* CarInfo::mutable_color() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CarInfo::release_color() {
  // @@protoc_insertion_point(field_release:ttmall.CarInfo.color)
  
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CarInfo::set_allocated_color(::std::string* color) {
  if (color != NULL) {
    
  } else {
    
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CarInfo.color)
}

// string mark = 8;
void CarInfo::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CarInfo::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.mark)
  return mark_.GetNoArena();
}
void CarInfo::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CarInfo.mark)
}
#if LANG_CXX11
void CarInfo::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CarInfo.mark)
}
#endif
void CarInfo::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CarInfo.mark)
}
void CarInfo::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CarInfo.mark)
}
::std::string* CarInfo::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CarInfo::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.CarInfo.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CarInfo::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CarInfo.mark)
}

// repeated .ttmall.ImageInfo photos = 9;
int CarInfo::photos_size() const {
  return photos_.size();
}
void CarInfo::clear_photos() {
  photos_.Clear();
}
const ::ttmall::ImageInfo& CarInfo::photos(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.CarInfo.photos)
  return photos_.Get(index);
}
::ttmall::ImageInfo* CarInfo::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.CarInfo.photos)
  return photos_.Mutable(index);
}
::ttmall::ImageInfo* CarInfo::add_photos() {
  // @@protoc_insertion_point(field_add:ttmall.CarInfo.photos)
  return photos_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::ImageInfo >*
CarInfo::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.CarInfo.photos)
  return &photos_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::ImageInfo >&
CarInfo::photos() const {
  // @@protoc_insertion_point(field_list:ttmall.CarInfo.photos)
  return photos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddressInfo::kIdFieldNumber;
const int AddressInfo::kNameFieldNumber;
const int AddressInfo::kProvinceFieldNumber;
const int AddressInfo::kCityFieldNumber;
const int AddressInfo::kAreaFieldNumber;
const int AddressInfo::kAddrFieldNumber;
const int AddressInfo::kContactFieldNumber;
const int AddressInfo::kMobileFieldNumber;
const int AddressInfo::kCoordFieldNumber;
const int AddressInfo::kDefaultFieldNumber;
const int AddressInfo::kRegionsFieldNumber;
const int AddressInfo::kIsPassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddressInfo::AddressInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AddressInfo)
}
AddressInfo::AddressInfo(const AddressInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      regions_(from.regions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.province().size() > 0) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.area().size() > 0) {
    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr().size() > 0) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contact().size() > 0) {
    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.has_coord()) {
    coord_ = new ::ttmall::CoordInfo(*from.coord_);
  } else {
    coord_ = NULL;
  }
  ::memcpy(&default__, &from.default__,
    reinterpret_cast<char*>(&is_pass_) -
    reinterpret_cast<char*>(&default__) + sizeof(is_pass_));
  // @@protoc_insertion_point(copy_constructor:ttmall.AddressInfo)
}

void AddressInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&coord_, 0, reinterpret_cast<char*>(&is_pass_) -
    reinterpret_cast<char*>(&coord_) + sizeof(is_pass_));
  _cached_size_ = 0;
}

AddressInfo::~AddressInfo() {
  // @@protoc_insertion_point(destructor:ttmall.AddressInfo)
  SharedDtor();
}

void AddressInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete coord_;
  }
}

void AddressInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddressInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddressInfo& AddressInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddressInfo* AddressInfo::New(::google::protobuf::Arena* arena) const {
  AddressInfo* n = new AddressInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddressInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AddressInfo)
  regions_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) {
    delete coord_;
  }
  coord_ = NULL;
  ::memset(&default__, 0, reinterpret_cast<char*>(&is_pass_) -
    reinterpret_cast<char*>(&default__) + sizeof(is_pass_));
}

bool AddressInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AddressInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string province = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.province"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string city = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string area = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->area().data(), this->area().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.area"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contact = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contact().data(), this->contact().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.contact"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.CoordInfo coord = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool default = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string regions = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_regions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regions(this->regions_size() - 1).data(),
            this->regions(this->regions_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddressInfo.regions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_pass = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_pass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AddressInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AddressInfo)
  return false;
#undef DO_
}

void AddressInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AddressInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string province = 3;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->province(), output);
  }

  // string city = 4;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->city(), output);
  }

  // string area = 5;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->area(), output);
  }

  // string addr = 6;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->addr(), output);
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.contact");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->contact(), output);
  }

  // string mobile = 8;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mobile(), output);
  }

  // .ttmall.CoordInfo coord = 9;
  if (this->has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->coord_, output);
  }

  // bool default = 10;
  if (this->default_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->default_(), output);
  }

  // repeated string regions = 11;
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regions(i).data(), this->regions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.regions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->regions(i), output);
  }

  // bool is_pass = 12;
  if (this->is_pass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_pass(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AddressInfo)
}

::google::protobuf::uint8* AddressInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AddressInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string province = 3;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->province(), target);
  }

  // string city = 4;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->city(), target);
  }

  // string area = 5;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->area(), target);
  }

  // string addr = 6;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->addr(), target);
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.contact");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->contact(), target);
  }

  // string mobile = 8;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mobile(), target);
  }

  // .ttmall.CoordInfo coord = 9;
  if (this->has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->coord_, deterministic, target);
  }

  // bool default = 10;
  if (this->default_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->default_(), target);
  }

  // repeated string regions = 11;
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regions(i).data(), this->regions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddressInfo.regions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->regions(i), target);
  }

  // bool is_pass = 12;
  if (this->is_pass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_pass(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AddressInfo)
  return target;
}

size_t AddressInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AddressInfo)
  size_t total_size = 0;

  // repeated string regions = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->regions_size());
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->regions(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string province = 3;
  if (this->province().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->province());
  }

  // string city = 4;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // string area = 5;
  if (this->area().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area());
  }

  // string addr = 6;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contact());
  }

  // string mobile = 8;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // .ttmall.CoordInfo coord = 9;
  if (this->has_coord()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->coord_);
  }

  // bool default = 10;
  if (this->default_() != 0) {
    total_size += 1 + 1;
  }

  // bool is_pass = 12;
  if (this->is_pass() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddressInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AddressInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AddressInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddressInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AddressInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AddressInfo)
    MergeFrom(*source);
  }
}

void AddressInfo::MergeFrom(const AddressInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AddressInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regions_.MergeFrom(from.regions_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.province().size() > 0) {

    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.area().size() > 0) {

    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  if (from.contact().size() > 0) {

    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.has_coord()) {
    mutable_coord()->::ttmall::CoordInfo::MergeFrom(from.coord());
  }
  if (from.default_() != 0) {
    set_default_(from.default_());
  }
  if (from.is_pass() != 0) {
    set_is_pass(from.is_pass());
  }
}

void AddressInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AddressInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddressInfo::CopyFrom(const AddressInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AddressInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressInfo::IsInitialized() const {
  return true;
}

void AddressInfo::Swap(AddressInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddressInfo::InternalSwap(AddressInfo* other) {
  regions_.InternalSwap(&other->regions_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  area_.Swap(&other->area_);
  addr_.Swap(&other->addr_);
  contact_.Swap(&other->contact_);
  mobile_.Swap(&other->mobile_);
  std::swap(coord_, other->coord_);
  std::swap(default__, other->default__);
  std::swap(is_pass_, other->is_pass_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddressInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddressInfo

// string id = 1;
void AddressInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.id)
  return id_.GetNoArena();
}
void AddressInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.id)
}
#if LANG_CXX11
void AddressInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddressInfo.id)
}
#endif
void AddressInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.id)
}
void AddressInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.id)
}
::std::string* AddressInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.id)
}

// string name = 2;
void AddressInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.name)
  return name_.GetNoArena();
}
void AddressInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.name)
}
#if LANG_CXX11
void AddressInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddressInfo.name)
}
#endif
void AddressInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.name)
}
void AddressInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.name)
}
::std::string* AddressInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.name)
}

// string province = 3;
void AddressInfo::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressInfo::province() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.province)
  return province_.GetNoArena();
}
void AddressInfo::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.province)
}
#if LANG_CXX11
void AddressInfo::set_province(::std::string&& value) {
  
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddressInfo.province)
}
#endif
void AddressInfo::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.province)
}
void AddressInfo::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.province)
}
::std::string* AddressInfo::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressInfo::release_province() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressInfo::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.province)
}

// string city = 4;
void AddressInfo::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressInfo::city() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.city)
  return city_.GetNoArena();
}
void AddressInfo::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.city)
}
#if LANG_CXX11
void AddressInfo::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddressInfo.city)
}
#endif
void AddressInfo::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.city)
}
void AddressInfo::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.city)
}
::std::string* AddressInfo::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressInfo::release_city() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressInfo::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.city)
}

// string area = 5;
void AddressInfo::clear_area() {
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressInfo::area() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.area)
  return area_.GetNoArena();
}
void AddressInfo::set_area(const ::std::string& value) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.area)
}
#if LANG_CXX11
void AddressInfo::set_area(::std::string&& value) {
  
  area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddressInfo.area)
}
#endif
void AddressInfo::set_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.area)
}
void AddressInfo::set_area(const char* value, size_t size) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.area)
}
::std::string* AddressInfo::mutable_area() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.area)
  return area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressInfo::release_area() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.area)
  
  return area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressInfo::set_allocated_area(::std::string* area) {
  if (area != NULL) {
    
  } else {
    
  }
  area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.area)
}

// string addr = 6;
void AddressInfo::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressInfo::addr() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.addr)
  return addr_.GetNoArena();
}
void AddressInfo::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.addr)
}
#if LANG_CXX11
void AddressInfo::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddressInfo.addr)
}
#endif
void AddressInfo::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.addr)
}
void AddressInfo::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.addr)
}
::std::string* AddressInfo::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressInfo::release_addr() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressInfo::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.addr)
}

// string contact = 7;
void AddressInfo::clear_contact() {
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressInfo::contact() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.contact)
  return contact_.GetNoArena();
}
void AddressInfo::set_contact(const ::std::string& value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.contact)
}
#if LANG_CXX11
void AddressInfo::set_contact(::std::string&& value) {
  
  contact_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddressInfo.contact)
}
#endif
void AddressInfo::set_contact(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.contact)
}
void AddressInfo::set_contact(const char* value, size_t size) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.contact)
}
::std::string* AddressInfo::mutable_contact() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.contact)
  return contact_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressInfo::release_contact() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.contact)
  
  return contact_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressInfo::set_allocated_contact(::std::string* contact) {
  if (contact != NULL) {
    
  } else {
    
  }
  contact_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.contact)
}

// string mobile = 8;
void AddressInfo::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddressInfo::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.mobile)
  return mobile_.GetNoArena();
}
void AddressInfo::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.mobile)
}
#if LANG_CXX11
void AddressInfo::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddressInfo.mobile)
}
#endif
void AddressInfo::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.mobile)
}
void AddressInfo::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.mobile)
}
::std::string* AddressInfo::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddressInfo::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddressInfo::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.mobile)
}

// .ttmall.CoordInfo coord = 9;
bool AddressInfo::has_coord() const {
  return this != internal_default_instance() && coord_ != NULL;
}
void AddressInfo::clear_coord() {
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
}
const ::ttmall::CoordInfo& AddressInfo::coord() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.coord)
  return coord_ != NULL ? *coord_
                         : *::ttmall::CoordInfo::internal_default_instance();
}
::ttmall::CoordInfo* AddressInfo::mutable_coord() {
  
  if (coord_ == NULL) {
    coord_ = new ::ttmall::CoordInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.coord)
  return coord_;
}
::ttmall::CoordInfo* AddressInfo::release_coord() {
  // @@protoc_insertion_point(field_release:ttmall.AddressInfo.coord)
  
  ::ttmall::CoordInfo* temp = coord_;
  coord_ = NULL;
  return temp;
}
void AddressInfo::set_allocated_coord(::ttmall::CoordInfo* coord) {
  delete coord_;
  coord_ = coord;
  if (coord) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddressInfo.coord)
}

// bool default = 10;
void AddressInfo::clear_default_() {
  default__ = false;
}
bool AddressInfo::default_() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.default)
  return default__;
}
void AddressInfo::set_default_(bool value) {
  
  default__ = value;
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.default)
}

// repeated string regions = 11;
int AddressInfo::regions_size() const {
  return regions_.size();
}
void AddressInfo::clear_regions() {
  regions_.Clear();
}
const ::std::string& AddressInfo::regions(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.regions)
  return regions_.Get(index);
}
::std::string* AddressInfo::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.AddressInfo.regions)
  return regions_.Mutable(index);
}
void AddressInfo::set_regions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.regions)
  regions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AddressInfo::set_regions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.regions)
  regions_.Mutable(index)->assign(std::move(value));
}
#endif
void AddressInfo::set_regions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.AddressInfo.regions)
}
void AddressInfo::set_regions(int index, const char* value, size_t size) {
  regions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddressInfo.regions)
}
::std::string* AddressInfo::add_regions() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.AddressInfo.regions)
  return regions_.Add();
}
void AddressInfo::add_regions(const ::std::string& value) {
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.AddressInfo.regions)
}
#if LANG_CXX11
void AddressInfo::add_regions(::std::string&& value) {
  regions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.AddressInfo.regions)
}
#endif
void AddressInfo::add_regions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  regions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.AddressInfo.regions)
}
void AddressInfo::add_regions(const char* value, size_t size) {
  regions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.AddressInfo.regions)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddressInfo::regions() const {
  // @@protoc_insertion_point(field_list:ttmall.AddressInfo.regions)
  return regions_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AddressInfo::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.AddressInfo.regions)
  return &regions_;
}

// bool is_pass = 12;
void AddressInfo::clear_is_pass() {
  is_pass_ = false;
}
bool AddressInfo::is_pass() const {
  // @@protoc_insertion_point(field_get:ttmall.AddressInfo.is_pass)
  return is_pass_;
}
void AddressInfo::set_is_pass(bool value) {
  
  is_pass_ = value;
  // @@protoc_insertion_point(field_set:ttmall.AddressInfo.is_pass)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WareInfo::kIdFieldNumber;
const int WareInfo::kNameFieldNumber;
const int WareInfo::kProvinceFieldNumber;
const int WareInfo::kCityFieldNumber;
const int WareInfo::kAreaFieldNumber;
const int WareInfo::kAddrFieldNumber;
const int WareInfo::kContactFieldNumber;
const int WareInfo::kMobileFieldNumber;
const int WareInfo::kCoordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WareInfo::WareInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.WareInfo)
}
WareInfo::WareInfo(const WareInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.province().size() > 0) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.area().size() > 0) {
    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr().size() > 0) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contact().size() > 0) {
    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.has_coord()) {
    coord_ = new ::ttmall::CoordInfo(*from.coord_);
  } else {
    coord_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.WareInfo)
}

void WareInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coord_ = NULL;
  _cached_size_ = 0;
}

WareInfo::~WareInfo() {
  // @@protoc_insertion_point(destructor:ttmall.WareInfo)
  SharedDtor();
}

void WareInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete coord_;
  }
}

void WareInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WareInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WareInfo& WareInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

WareInfo* WareInfo::New(::google::protobuf::Arena* arena) const {
  WareInfo* n = new WareInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.WareInfo)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) {
    delete coord_;
  }
  coord_ = NULL;
}

bool WareInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.WareInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.WareInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.WareInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string province = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.WareInfo.province"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string city = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.WareInfo.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string area = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->area().data(), this->area().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.WareInfo.area"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.WareInfo.addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contact = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contact().data(), this->contact().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.WareInfo.contact"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.WareInfo.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.CoordInfo coord = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.WareInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.WareInfo)
  return false;
#undef DO_
}

void WareInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.WareInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string province = 3;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->province(), output);
  }

  // string city = 4;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->city(), output);
  }

  // string area = 5;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->area(), output);
  }

  // string addr = 6;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->addr(), output);
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.contact");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->contact(), output);
  }

  // string mobile = 8;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mobile(), output);
  }

  // .ttmall.CoordInfo coord = 9;
  if (this->has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->coord_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.WareInfo)
}

::google::protobuf::uint8* WareInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.WareInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string province = 3;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->province(), target);
  }

  // string city = 4;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->city(), target);
  }

  // string area = 5;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->area(), target);
  }

  // string addr = 6;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->addr(), target);
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.contact");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->contact(), target);
  }

  // string mobile = 8;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.WareInfo.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mobile(), target);
  }

  // .ttmall.CoordInfo coord = 9;
  if (this->has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->coord_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.WareInfo)
  return target;
}

size_t WareInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.WareInfo)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string province = 3;
  if (this->province().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->province());
  }

  // string city = 4;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // string area = 5;
  if (this->area().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area());
  }

  // string addr = 6;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contact());
  }

  // string mobile = 8;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // .ttmall.CoordInfo coord = 9;
  if (this->has_coord()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->coord_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WareInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.WareInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WareInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WareInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.WareInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.WareInfo)
    MergeFrom(*source);
  }
}

void WareInfo::MergeFrom(const WareInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.WareInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.province().size() > 0) {

    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.area().size() > 0) {

    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  if (from.contact().size() > 0) {

    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.has_coord()) {
    mutable_coord()->::ttmall::CoordInfo::MergeFrom(from.coord());
  }
}

void WareInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.WareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WareInfo::CopyFrom(const WareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.WareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WareInfo::IsInitialized() const {
  return true;
}

void WareInfo::Swap(WareInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WareInfo::InternalSwap(WareInfo* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  area_.Swap(&other->area_);
  addr_.Swap(&other->addr_);
  contact_.Swap(&other->contact_);
  mobile_.Swap(&other->mobile_);
  std::swap(coord_, other->coord_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WareInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WareInfo

// string id = 1;
void WareInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WareInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.id)
  return id_.GetNoArena();
}
void WareInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.WareInfo.id)
}
#if LANG_CXX11
void WareInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.WareInfo.id)
}
#endif
void WareInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.WareInfo.id)
}
void WareInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.WareInfo.id)
}
::std::string* WareInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WareInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WareInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.id)
}

// string name = 2;
void WareInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WareInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.name)
  return name_.GetNoArena();
}
void WareInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.WareInfo.name)
}
#if LANG_CXX11
void WareInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.WareInfo.name)
}
#endif
void WareInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.WareInfo.name)
}
void WareInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.WareInfo.name)
}
::std::string* WareInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WareInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WareInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.name)
}

// string province = 3;
void WareInfo::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WareInfo::province() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.province)
  return province_.GetNoArena();
}
void WareInfo::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.WareInfo.province)
}
#if LANG_CXX11
void WareInfo::set_province(::std::string&& value) {
  
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.WareInfo.province)
}
#endif
void WareInfo::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.WareInfo.province)
}
void WareInfo::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.WareInfo.province)
}
::std::string* WareInfo::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WareInfo::release_province() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WareInfo::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.province)
}

// string city = 4;
void WareInfo::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WareInfo::city() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.city)
  return city_.GetNoArena();
}
void WareInfo::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.WareInfo.city)
}
#if LANG_CXX11
void WareInfo::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.WareInfo.city)
}
#endif
void WareInfo::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.WareInfo.city)
}
void WareInfo::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.WareInfo.city)
}
::std::string* WareInfo::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WareInfo::release_city() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WareInfo::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.city)
}

// string area = 5;
void WareInfo::clear_area() {
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WareInfo::area() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.area)
  return area_.GetNoArena();
}
void WareInfo::set_area(const ::std::string& value) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.WareInfo.area)
}
#if LANG_CXX11
void WareInfo::set_area(::std::string&& value) {
  
  area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.WareInfo.area)
}
#endif
void WareInfo::set_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.WareInfo.area)
}
void WareInfo::set_area(const char* value, size_t size) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.WareInfo.area)
}
::std::string* WareInfo::mutable_area() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.area)
  return area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WareInfo::release_area() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.area)
  
  return area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WareInfo::set_allocated_area(::std::string* area) {
  if (area != NULL) {
    
  } else {
    
  }
  area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area);
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.area)
}

// string addr = 6;
void WareInfo::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WareInfo::addr() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.addr)
  return addr_.GetNoArena();
}
void WareInfo::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.WareInfo.addr)
}
#if LANG_CXX11
void WareInfo::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.WareInfo.addr)
}
#endif
void WareInfo::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.WareInfo.addr)
}
void WareInfo::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.WareInfo.addr)
}
::std::string* WareInfo::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WareInfo::release_addr() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WareInfo::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.addr)
}

// string contact = 7;
void WareInfo::clear_contact() {
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WareInfo::contact() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.contact)
  return contact_.GetNoArena();
}
void WareInfo::set_contact(const ::std::string& value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.WareInfo.contact)
}
#if LANG_CXX11
void WareInfo::set_contact(::std::string&& value) {
  
  contact_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.WareInfo.contact)
}
#endif
void WareInfo::set_contact(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.WareInfo.contact)
}
void WareInfo::set_contact(const char* value, size_t size) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.WareInfo.contact)
}
::std::string* WareInfo::mutable_contact() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.contact)
  return contact_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WareInfo::release_contact() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.contact)
  
  return contact_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WareInfo::set_allocated_contact(::std::string* contact) {
  if (contact != NULL) {
    
  } else {
    
  }
  contact_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact);
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.contact)
}

// string mobile = 8;
void WareInfo::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WareInfo::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.mobile)
  return mobile_.GetNoArena();
}
void WareInfo::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.WareInfo.mobile)
}
#if LANG_CXX11
void WareInfo::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.WareInfo.mobile)
}
#endif
void WareInfo::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.WareInfo.mobile)
}
void WareInfo::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.WareInfo.mobile)
}
::std::string* WareInfo::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WareInfo::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WareInfo::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.mobile)
}

// .ttmall.CoordInfo coord = 9;
bool WareInfo::has_coord() const {
  return this != internal_default_instance() && coord_ != NULL;
}
void WareInfo::clear_coord() {
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
}
const ::ttmall::CoordInfo& WareInfo::coord() const {
  // @@protoc_insertion_point(field_get:ttmall.WareInfo.coord)
  return coord_ != NULL ? *coord_
                         : *::ttmall::CoordInfo::internal_default_instance();
}
::ttmall::CoordInfo* WareInfo::mutable_coord() {
  
  if (coord_ == NULL) {
    coord_ = new ::ttmall::CoordInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.WareInfo.coord)
  return coord_;
}
::ttmall::CoordInfo* WareInfo::release_coord() {
  // @@protoc_insertion_point(field_release:ttmall.WareInfo.coord)
  
  ::ttmall::CoordInfo* temp = coord_;
  coord_ = NULL;
  return temp;
}
void WareInfo::set_allocated_coord(::ttmall::CoordInfo* coord) {
  delete coord_;
  coord_ = coord;
  if (coord) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.WareInfo.coord)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserType::kIdFieldNumber;
const int UserType::kCodeFieldNumber;
const int UserType::kNameFieldNumber;
const int UserType::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserType::UserType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UserType)
}
UserType::UserType(const UserType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UserType)
}

void UserType::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserType::~UserType() {
  // @@protoc_insertion_point(destructor:ttmall.UserType)
  SharedDtor();
}

void UserType::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserType::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserType& UserType::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserType* UserType::New(::google::protobuf::Arena* arena) const {
  UserType* n = new UserType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserType::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UserType)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UserType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UserType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserType.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserType.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserType.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), this->parent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserType.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UserType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UserType)
  return false;
#undef DO_
}

void UserType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UserType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserType.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserType.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserType.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UserType)
}

::google::protobuf::uint8* UserType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UserType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserType.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserType.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserType.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), this->parent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserType.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UserType)
  return target;
}

size_t UserType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UserType)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parent = 4;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UserType)
  GOOGLE_DCHECK_NE(&from, this);
  const UserType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UserType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UserType)
    MergeFrom(*source);
  }
}

void UserType::MergeFrom(const UserType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UserType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void UserType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UserType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserType::CopyFrom(const UserType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UserType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserType::IsInitialized() const {
  return true;
}

void UserType::Swap(UserType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserType::InternalSwap(UserType* other) {
  id_.Swap(&other->id_);
  code_.Swap(&other->code_);
  name_.Swap(&other->name_);
  parent_.Swap(&other->parent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserType::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserType

// string id = 1;
void UserType::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserType::id() const {
  // @@protoc_insertion_point(field_get:ttmall.UserType.id)
  return id_.GetNoArena();
}
void UserType::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserType.id)
}
#if LANG_CXX11
void UserType::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserType.id)
}
#endif
void UserType::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserType.id)
}
void UserType::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserType.id)
}
::std::string* UserType::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserType.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserType::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.UserType.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserType::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserType.id)
}

// string code = 2;
void UserType::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserType::code() const {
  // @@protoc_insertion_point(field_get:ttmall.UserType.code)
  return code_.GetNoArena();
}
void UserType::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserType.code)
}
#if LANG_CXX11
void UserType::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserType.code)
}
#endif
void UserType::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserType.code)
}
void UserType::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserType.code)
}
::std::string* UserType::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserType.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserType::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.UserType.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserType::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserType.code)
}

// string name = 3;
void UserType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserType::name() const {
  // @@protoc_insertion_point(field_get:ttmall.UserType.name)
  return name_.GetNoArena();
}
void UserType::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserType.name)
}
#if LANG_CXX11
void UserType::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserType.name)
}
#endif
void UserType::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserType.name)
}
void UserType::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserType.name)
}
::std::string* UserType::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserType::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.UserType.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserType.name)
}

// string parent = 4;
void UserType::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserType::parent() const {
  // @@protoc_insertion_point(field_get:ttmall.UserType.parent)
  return parent_.GetNoArena();
}
void UserType::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserType.parent)
}
#if LANG_CXX11
void UserType::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserType.parent)
}
#endif
void UserType::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserType.parent)
}
void UserType::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserType.parent)
}
::std::string* UserType::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserType.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserType::release_parent() {
  // @@protoc_insertion_point(field_release:ttmall.UserType.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserType::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserType.parent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kIdFieldNumber;
const int UserInfo::kNameFieldNumber;
const int UserInfo::kAvatarFieldNumber;
const int UserInfo::kOwnerFieldNumber;
const int UserInfo::kTypeFieldNumber;
const int UserInfo::kImagesFieldNumber;
const int UserInfo::kMobileFieldNumber;
const int UserInfo::kLoginTimeFieldNumber;
const int UserInfo::kRegTimeFieldNumber;
const int UserInfo::kBalanceFieldNumber;
const int UserInfo::kCouponNumFieldNumber;
const int UserInfo::kIsPassFieldNumber;
const int UserInfo::kAddressFieldNumber;
const int UserInfo::kLevelFieldNumber;
const int UserInfo::kTypesFieldNumber;
const int UserInfo::kDisabledFieldNumber;
const int UserInfo::kDeliverTimeFieldNumber;
const int UserInfo::kMarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      images_(from.images_),
      types_(from.types_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner().size() > 0) {
    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  deliver_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deliver_time().size() > 0) {
    deliver_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliver_time_);
  }
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mark().size() > 0) {
    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.has_avatar()) {
    avatar_ = new ::ttmall::ImageInfo(*from.avatar_);
  } else {
    avatar_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::ttmall::AddressInfo(*from.address_);
  } else {
    address_ = NULL;
  }
  ::memcpy(&login_time_, &from.login_time_,
    reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&login_time_) + sizeof(disabled_));
  // @@protoc_insertion_point(copy_constructor:ttmall.UserInfo)
}

void UserInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&avatar_, 0, reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&avatar_) + sizeof(disabled_));
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:ttmall.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete avatar_;
  }
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UserInfo)
  images_.Clear();
  types_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && avatar_ != NULL) {
    delete avatar_;
  }
  avatar_ = NULL;
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  ::memset(&login_time_, 0, reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&login_time_) + sizeof(disabled_));
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.ImageInfo avatar = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner().data(), this->owner().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserInfo.owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserInfo.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.ImageInfo images = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserInfo.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 login_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &login_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 reg_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reg_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 balance = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 coupon_num = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coupon_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_pass = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_pass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.AddressInfo address = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string types = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->types(this->types_size() - 1).data(),
            this->types(this->types_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserInfo.types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deliver_time = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliver_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deliver_time().data(), this->deliver_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserInfo.deliver_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mark = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mark().data(), this->mark().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserInfo.mark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .ttmall.ImageInfo avatar = 3;
  if (this->has_avatar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->avatar_, output);
  }

  // string owner = 4;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->owner(), output);
  }

  // string type = 5;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->type(), output);
  }

  // repeated .ttmall.ImageInfo images = 6;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->images(i), output);
  }

  // string mobile = 7;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->mobile(), output);
  }

  // int64 login_time = 8;
  if (this->login_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->login_time(), output);
  }

  // int64 reg_time = 9;
  if (this->reg_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->reg_time(), output);
  }

  // int32 balance = 10;
  if (this->balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->balance(), output);
  }

  // int32 coupon_num = 11;
  if (this->coupon_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->coupon_num(), output);
  }

  // bool is_pass = 12;
  if (this->is_pass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_pass(), output);
  }

  // .ttmall.AddressInfo address = 13;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->address_, output);
  }

  // int32 level = 14;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->level(), output);
  }

  // repeated string types = 15;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->types(i).data(), this->types(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->types(i), output);
  }

  // bool disabled = 16;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->disabled(), output);
  }

  // string deliver_time = 17;
  if (this->deliver_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_time().data(), this->deliver_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.deliver_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->deliver_time(), output);
  }

  // string mark = 18;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.mark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->mark(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .ttmall.ImageInfo avatar = 3;
  if (this->has_avatar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->avatar_, deterministic, target);
  }

  // string owner = 4;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->owner(), target);
  }

  // string type = 5;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->type(), target);
  }

  // repeated .ttmall.ImageInfo images = 6;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->images(i), deterministic, target);
  }

  // string mobile = 7;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->mobile(), target);
  }

  // int64 login_time = 8;
  if (this->login_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->login_time(), target);
  }

  // int64 reg_time = 9;
  if (this->reg_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->reg_time(), target);
  }

  // int32 balance = 10;
  if (this->balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->balance(), target);
  }

  // int32 coupon_num = 11;
  if (this->coupon_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->coupon_num(), target);
  }

  // bool is_pass = 12;
  if (this->is_pass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_pass(), target);
  }

  // .ttmall.AddressInfo address = 13;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->address_, deterministic, target);
  }

  // int32 level = 14;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->level(), target);
  }

  // repeated string types = 15;
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->types(i).data(), this->types(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->types(i), target);
  }

  // bool disabled = 16;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->disabled(), target);
  }

  // string deliver_time = 17;
  if (this->deliver_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_time().data(), this->deliver_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.deliver_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->deliver_time(), target);
  }

  // string mark = 18;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserInfo.mark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->mark(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UserInfo)
  size_t total_size = 0;

  // repeated .ttmall.ImageInfo images = 6;
  {
    unsigned int count = this->images_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->images(i));
    }
  }

  // repeated string types = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->types_size());
  for (int i = 0, n = this->types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->types(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string owner = 4;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  // string type = 5;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string mobile = 7;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // string deliver_time = 17;
  if (this->deliver_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deliver_time());
  }

  // string mark = 18;
  if (this->mark().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mark());
  }

  // .ttmall.ImageInfo avatar = 3;
  if (this->has_avatar()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->avatar_);
  }

  // .ttmall.AddressInfo address = 13;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  // int64 login_time = 8;
  if (this->login_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->login_time());
  }

  // int64 reg_time = 9;
  if (this->reg_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reg_time());
  }

  // int32 balance = 10;
  if (this->balance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->balance());
  }

  // int32 coupon_num = 11;
  if (this->coupon_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->coupon_num());
  }

  // int32 level = 14;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // bool is_pass = 12;
  if (this->is_pass() != 0) {
    total_size += 1 + 1;
  }

  // bool disabled = 16;
  if (this->disabled() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  types_.MergeFrom(from.types_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.owner().size() > 0) {

    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.deliver_time().size() > 0) {

    deliver_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliver_time_);
  }
  if (from.mark().size() > 0) {

    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.has_avatar()) {
    mutable_avatar()->::ttmall::ImageInfo::MergeFrom(from.avatar());
  }
  if (from.has_address()) {
    mutable_address()->::ttmall::AddressInfo::MergeFrom(from.address());
  }
  if (from.login_time() != 0) {
    set_login_time(from.login_time());
  }
  if (from.reg_time() != 0) {
    set_reg_time(from.reg_time());
  }
  if (from.balance() != 0) {
    set_balance(from.balance());
  }
  if (from.coupon_num() != 0) {
    set_coupon_num(from.coupon_num());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.is_pass() != 0) {
    set_is_pass(from.is_pass());
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  images_.InternalSwap(&other->images_);
  types_.InternalSwap(&other->types_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  owner_.Swap(&other->owner_);
  type_.Swap(&other->type_);
  mobile_.Swap(&other->mobile_);
  deliver_time_.Swap(&other->deliver_time_);
  mark_.Swap(&other->mark_);
  std::swap(avatar_, other->avatar_);
  std::swap(address_, other->address_);
  std::swap(login_time_, other->login_time_);
  std::swap(reg_time_, other->reg_time_);
  std::swap(balance_, other->balance_);
  std::swap(coupon_num_, other->coupon_num_);
  std::swap(level_, other->level_);
  std::swap(is_pass_, other->is_pass_);
  std::swap(disabled_, other->disabled_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// string id = 1;
void UserInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.id)
  return id_.GetNoArena();
}
void UserInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.id)
}
#if LANG_CXX11
void UserInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserInfo.id)
}
#endif
void UserInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserInfo.id)
}
void UserInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserInfo.id)
}
::std::string* UserInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.id)
}

// string name = 2;
void UserInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::name() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.name)
  return name_.GetNoArena();
}
void UserInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.name)
}
#if LANG_CXX11
void UserInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserInfo.name)
}
#endif
void UserInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserInfo.name)
}
void UserInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserInfo.name)
}
::std::string* UserInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.name)
}

// .ttmall.ImageInfo avatar = 3;
bool UserInfo::has_avatar() const {
  return this != internal_default_instance() && avatar_ != NULL;
}
void UserInfo::clear_avatar() {
  if (GetArenaNoVirtual() == NULL && avatar_ != NULL) delete avatar_;
  avatar_ = NULL;
}
const ::ttmall::ImageInfo& UserInfo::avatar() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.avatar)
  return avatar_ != NULL ? *avatar_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
::ttmall::ImageInfo* UserInfo::mutable_avatar() {
  
  if (avatar_ == NULL) {
    avatar_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.avatar)
  return avatar_;
}
::ttmall::ImageInfo* UserInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.avatar)
  
  ::ttmall::ImageInfo* temp = avatar_;
  avatar_ = NULL;
  return temp;
}
void UserInfo::set_allocated_avatar(::ttmall::ImageInfo* avatar) {
  delete avatar_;
  avatar_ = avatar;
  if (avatar) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.avatar)
}

// string owner = 4;
void UserInfo::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::owner() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.owner)
  return owner_.GetNoArena();
}
void UserInfo::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.owner)
}
#if LANG_CXX11
void UserInfo::set_owner(::std::string&& value) {
  
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserInfo.owner)
}
#endif
void UserInfo::set_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserInfo.owner)
}
void UserInfo::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserInfo.owner)
}
::std::string* UserInfo::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_owner() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.owner)
}

// string type = 5;
void UserInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::type() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.type)
  return type_.GetNoArena();
}
void UserInfo::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.type)
}
#if LANG_CXX11
void UserInfo::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserInfo.type)
}
#endif
void UserInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserInfo.type)
}
void UserInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserInfo.type)
}
::std::string* UserInfo::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.type)
}

// repeated .ttmall.ImageInfo images = 6;
int UserInfo::images_size() const {
  return images_.size();
}
void UserInfo::clear_images() {
  images_.Clear();
}
const ::ttmall::ImageInfo& UserInfo::images(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.images)
  return images_.Get(index);
}
::ttmall::ImageInfo* UserInfo::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.images)
  return images_.Mutable(index);
}
::ttmall::ImageInfo* UserInfo::add_images() {
  // @@protoc_insertion_point(field_add:ttmall.UserInfo.images)
  return images_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::ImageInfo >*
UserInfo::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.UserInfo.images)
  return &images_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::ImageInfo >&
UserInfo::images() const {
  // @@protoc_insertion_point(field_list:ttmall.UserInfo.images)
  return images_;
}

// string mobile = 7;
void UserInfo::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.mobile)
  return mobile_.GetNoArena();
}
void UserInfo::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.mobile)
}
#if LANG_CXX11
void UserInfo::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserInfo.mobile)
}
#endif
void UserInfo::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserInfo.mobile)
}
void UserInfo::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserInfo.mobile)
}
::std::string* UserInfo::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.mobile)
}

// int64 login_time = 8;
void UserInfo::clear_login_time() {
  login_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UserInfo::login_time() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.login_time)
  return login_time_;
}
void UserInfo::set_login_time(::google::protobuf::int64 value) {
  
  login_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.login_time)
}

// int64 reg_time = 9;
void UserInfo::clear_reg_time() {
  reg_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UserInfo::reg_time() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.reg_time)
  return reg_time_;
}
void UserInfo::set_reg_time(::google::protobuf::int64 value) {
  
  reg_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.reg_time)
}

// int32 balance = 10;
void UserInfo::clear_balance() {
  balance_ = 0;
}
::google::protobuf::int32 UserInfo::balance() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.balance)
  return balance_;
}
void UserInfo::set_balance(::google::protobuf::int32 value) {
  
  balance_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.balance)
}

// int32 coupon_num = 11;
void UserInfo::clear_coupon_num() {
  coupon_num_ = 0;
}
::google::protobuf::int32 UserInfo::coupon_num() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.coupon_num)
  return coupon_num_;
}
void UserInfo::set_coupon_num(::google::protobuf::int32 value) {
  
  coupon_num_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.coupon_num)
}

// bool is_pass = 12;
void UserInfo::clear_is_pass() {
  is_pass_ = false;
}
bool UserInfo::is_pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.is_pass)
  return is_pass_;
}
void UserInfo::set_is_pass(bool value) {
  
  is_pass_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.is_pass)
}

// .ttmall.AddressInfo address = 13;
bool UserInfo::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void UserInfo::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::ttmall::AddressInfo& UserInfo::address() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.address)
  return address_ != NULL ? *address_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
::ttmall::AddressInfo* UserInfo::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.address)
  return address_;
}
::ttmall::AddressInfo* UserInfo::release_address() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.address)
  
  ::ttmall::AddressInfo* temp = address_;
  address_ = NULL;
  return temp;
}
void UserInfo::set_allocated_address(::ttmall::AddressInfo* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.address)
}

// int32 level = 14;
void UserInfo::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 UserInfo::level() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.level)
  return level_;
}
void UserInfo::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.level)
}

// repeated string types = 15;
int UserInfo::types_size() const {
  return types_.size();
}
void UserInfo::clear_types() {
  types_.Clear();
}
const ::std::string& UserInfo::types(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.types)
  return types_.Get(index);
}
::std::string* UserInfo::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.types)
  return types_.Mutable(index);
}
void UserInfo::set_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.types)
  types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void UserInfo::set_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.types)
  types_.Mutable(index)->assign(std::move(value));
}
#endif
void UserInfo::set_types(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.UserInfo.types)
}
void UserInfo::set_types(int index, const char* value, size_t size) {
  types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserInfo.types)
}
::std::string* UserInfo::add_types() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.UserInfo.types)
  return types_.Add();
}
void UserInfo::add_types(const ::std::string& value) {
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.UserInfo.types)
}
#if LANG_CXX11
void UserInfo::add_types(::std::string&& value) {
  types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.UserInfo.types)
}
#endif
void UserInfo::add_types(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.UserInfo.types)
}
void UserInfo::add_types(const char* value, size_t size) {
  types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.UserInfo.types)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UserInfo::types() const {
  // @@protoc_insertion_point(field_list:ttmall.UserInfo.types)
  return types_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UserInfo::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.UserInfo.types)
  return &types_;
}

// bool disabled = 16;
void UserInfo::clear_disabled() {
  disabled_ = false;
}
bool UserInfo::disabled() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.disabled)
  return disabled_;
}
void UserInfo::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.disabled)
}

// string deliver_time = 17;
void UserInfo::clear_deliver_time() {
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.deliver_time)
  return deliver_time_.GetNoArena();
}
void UserInfo::set_deliver_time(const ::std::string& value) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.deliver_time)
}
#if LANG_CXX11
void UserInfo::set_deliver_time(::std::string&& value) {
  
  deliver_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserInfo.deliver_time)
}
#endif
void UserInfo::set_deliver_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserInfo.deliver_time)
}
void UserInfo::set_deliver_time(const char* value, size_t size) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserInfo.deliver_time)
}
::std::string* UserInfo::mutable_deliver_time() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.deliver_time)
  return deliver_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.deliver_time)
  
  return deliver_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_deliver_time(::std::string* deliver_time) {
  if (deliver_time != NULL) {
    
  } else {
    
  }
  deliver_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliver_time);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.deliver_time)
}

// string mark = 18;
void UserInfo::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.UserInfo.mark)
  return mark_.GetNoArena();
}
void UserInfo::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserInfo.mark)
}
#if LANG_CXX11
void UserInfo::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserInfo.mark)
}
#endif
void UserInfo::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserInfo.mark)
}
void UserInfo::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserInfo.mark)
}
::std::string* UserInfo::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserInfo.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.UserInfo.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserInfo.mark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexReq::IndexReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.IndexReq)
}
IndexReq::IndexReq(const IndexReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.IndexReq)
}

void IndexReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

IndexReq::~IndexReq() {
  // @@protoc_insertion_point(destructor:ttmall.IndexReq)
  SharedDtor();
}

void IndexReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IndexReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexReq& IndexReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexReq* IndexReq::New(::google::protobuf::Arena* arena) const {
  IndexReq* n = new IndexReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.IndexReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool IndexReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.IndexReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.IndexReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.IndexReq)
  return false;
#undef DO_
}

void IndexReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.IndexReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.IndexReq)
}

::google::protobuf::uint8* IndexReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.IndexReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.IndexReq)
  return target;
}

size_t IndexReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.IndexReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.IndexReq)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.IndexReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.IndexReq)
    MergeFrom(*source);
  }
}

void IndexReq::MergeFrom(const IndexReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.IndexReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void IndexReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.IndexReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexReq::CopyFrom(const IndexReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.IndexReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexReq::IsInitialized() const {
  return true;
}

void IndexReq::Swap(IndexReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexReq::InternalSwap(IndexReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexReq

// string token = 1;
void IndexReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexReq.token)
  return token_.GetNoArena();
}
void IndexReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexReq.token)
}
#if LANG_CXX11
void IndexReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexReq.token)
}
#endif
void IndexReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexReq.token)
}
void IndexReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexReq.token)
}
::std::string* IndexReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.IndexReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexType::kIdFieldNumber;
const int IndexType::kNameFieldNumber;
const int IndexType::kIconMFieldNumber;
const int IndexType::kIconSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexType::IndexType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.IndexType)
}
IndexType::IndexType(const IndexType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_icon_m()) {
    icon_m_ = new ::ttmall::ImageInfo(*from.icon_m_);
  } else {
    icon_m_ = NULL;
  }
  if (from.has_icon_s()) {
    icon_s_ = new ::ttmall::ImageInfo(*from.icon_s_);
  } else {
    icon_s_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.IndexType)
}

void IndexType::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&icon_m_, 0, reinterpret_cast<char*>(&icon_s_) -
    reinterpret_cast<char*>(&icon_m_) + sizeof(icon_s_));
  _cached_size_ = 0;
}

IndexType::~IndexType() {
  // @@protoc_insertion_point(destructor:ttmall.IndexType)
  SharedDtor();
}

void IndexType::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete icon_m_;
  }
  if (this != internal_default_instance()) {
    delete icon_s_;
  }
}

void IndexType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexType::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexType& IndexType::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexType* IndexType::New(::google::protobuf::Arena* arena) const {
  IndexType* n = new IndexType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexType::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.IndexType)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && icon_m_ != NULL) {
    delete icon_m_;
  }
  icon_m_ = NULL;
  if (GetArenaNoVirtual() == NULL && icon_s_ != NULL) {
    delete icon_s_;
  }
  icon_s_ = NULL;
}

bool IndexType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.IndexType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexType.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexType.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.ImageInfo icon_m = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_icon_m()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.ImageInfo icon_s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_icon_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.IndexType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.IndexType)
  return false;
#undef DO_
}

void IndexType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.IndexType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexType.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .ttmall.ImageInfo icon_m = 3;
  if (this->has_icon_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->icon_m_, output);
  }

  // .ttmall.ImageInfo icon_s = 4;
  if (this->has_icon_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->icon_s_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.IndexType)
}

::google::protobuf::uint8* IndexType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.IndexType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexType.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexType.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .ttmall.ImageInfo icon_m = 3;
  if (this->has_icon_m()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->icon_m_, deterministic, target);
  }

  // .ttmall.ImageInfo icon_s = 4;
  if (this->has_icon_s()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->icon_s_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.IndexType)
  return target;
}

size_t IndexType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.IndexType)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .ttmall.ImageInfo icon_m = 3;
  if (this->has_icon_m()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->icon_m_);
  }

  // .ttmall.ImageInfo icon_s = 4;
  if (this->has_icon_s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->icon_s_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.IndexType)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.IndexType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.IndexType)
    MergeFrom(*source);
  }
}

void IndexType::MergeFrom(const IndexType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.IndexType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_icon_m()) {
    mutable_icon_m()->::ttmall::ImageInfo::MergeFrom(from.icon_m());
  }
  if (from.has_icon_s()) {
    mutable_icon_s()->::ttmall::ImageInfo::MergeFrom(from.icon_s());
  }
}

void IndexType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.IndexType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexType::CopyFrom(const IndexType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.IndexType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexType::IsInitialized() const {
  return true;
}

void IndexType::Swap(IndexType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexType::InternalSwap(IndexType* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(icon_m_, other->icon_m_);
  std::swap(icon_s_, other->icon_s_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexType::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexType

// string id = 1;
void IndexType::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexType::id() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexType.id)
  return id_.GetNoArena();
}
void IndexType::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexType.id)
}
#if LANG_CXX11
void IndexType::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexType.id)
}
#endif
void IndexType::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexType.id)
}
void IndexType::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexType.id)
}
::std::string* IndexType::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexType.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexType::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.IndexType.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexType::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexType.id)
}

// string name = 2;
void IndexType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexType::name() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexType.name)
  return name_.GetNoArena();
}
void IndexType::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexType.name)
}
#if LANG_CXX11
void IndexType::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexType.name)
}
#endif
void IndexType::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexType.name)
}
void IndexType::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexType.name)
}
::std::string* IndexType::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexType::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.IndexType.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexType.name)
}

// .ttmall.ImageInfo icon_m = 3;
bool IndexType::has_icon_m() const {
  return this != internal_default_instance() && icon_m_ != NULL;
}
void IndexType::clear_icon_m() {
  if (GetArenaNoVirtual() == NULL && icon_m_ != NULL) delete icon_m_;
  icon_m_ = NULL;
}
const ::ttmall::ImageInfo& IndexType::icon_m() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexType.icon_m)
  return icon_m_ != NULL ? *icon_m_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
::ttmall::ImageInfo* IndexType::mutable_icon_m() {
  
  if (icon_m_ == NULL) {
    icon_m_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.IndexType.icon_m)
  return icon_m_;
}
::ttmall::ImageInfo* IndexType::release_icon_m() {
  // @@protoc_insertion_point(field_release:ttmall.IndexType.icon_m)
  
  ::ttmall::ImageInfo* temp = icon_m_;
  icon_m_ = NULL;
  return temp;
}
void IndexType::set_allocated_icon_m(::ttmall::ImageInfo* icon_m) {
  delete icon_m_;
  icon_m_ = icon_m;
  if (icon_m) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexType.icon_m)
}

// .ttmall.ImageInfo icon_s = 4;
bool IndexType::has_icon_s() const {
  return this != internal_default_instance() && icon_s_ != NULL;
}
void IndexType::clear_icon_s() {
  if (GetArenaNoVirtual() == NULL && icon_s_ != NULL) delete icon_s_;
  icon_s_ = NULL;
}
const ::ttmall::ImageInfo& IndexType::icon_s() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexType.icon_s)
  return icon_s_ != NULL ? *icon_s_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
::ttmall::ImageInfo* IndexType::mutable_icon_s() {
  
  if (icon_s_ == NULL) {
    icon_s_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.IndexType.icon_s)
  return icon_s_;
}
::ttmall::ImageInfo* IndexType::release_icon_s() {
  // @@protoc_insertion_point(field_release:ttmall.IndexType.icon_s)
  
  ::ttmall::ImageInfo* temp = icon_s_;
  icon_s_ = NULL;
  return temp;
}
void IndexType::set_allocated_icon_s(::ttmall::ImageInfo* icon_s) {
  delete icon_s_;
  icon_s_ = icon_s;
  if (icon_s) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexType.icon_s)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexAd::kIdFieldNumber;
const int IndexAd::kTitleFieldNumber;
const int IndexAd::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexAd::IndexAd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.IndexAd)
}
IndexAd::IndexAd(const IndexAd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_image()) {
    image_ = new ::ttmall::ImageInfo(*from.image_);
  } else {
    image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.IndexAd)
}

void IndexAd::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ = NULL;
  _cached_size_ = 0;
}

IndexAd::~IndexAd() {
  // @@protoc_insertion_point(destructor:ttmall.IndexAd)
  SharedDtor();
}

void IndexAd::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete image_;
  }
}

void IndexAd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexAd::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexAd& IndexAd::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexAd* IndexAd::New(::google::protobuf::Arena* arena) const {
  IndexAd* n = new IndexAd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexAd::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.IndexAd)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
}

bool IndexAd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.IndexAd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAd.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAd.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.ImageInfo image = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.IndexAd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.IndexAd)
  return false;
#undef DO_
}

void IndexAd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.IndexAd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAd.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAd.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // .ttmall.ImageInfo image = 3;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->image_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.IndexAd)
}

::google::protobuf::uint8* IndexAd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.IndexAd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAd.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAd.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // .ttmall.ImageInfo image = 3;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->image_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.IndexAd)
  return target;
}

size_t IndexAd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.IndexAd)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // .ttmall.ImageInfo image = 3;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->image_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexAd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.IndexAd)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexAd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexAd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.IndexAd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.IndexAd)
    MergeFrom(*source);
  }
}

void IndexAd::MergeFrom(const IndexAd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.IndexAd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_image()) {
    mutable_image()->::ttmall::ImageInfo::MergeFrom(from.image());
  }
}

void IndexAd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.IndexAd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexAd::CopyFrom(const IndexAd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.IndexAd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexAd::IsInitialized() const {
  return true;
}

void IndexAd::Swap(IndexAd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexAd::InternalSwap(IndexAd* other) {
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  std::swap(image_, other->image_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexAd::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexAd

// string id = 1;
void IndexAd::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAd::id() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAd.id)
  return id_.GetNoArena();
}
void IndexAd::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAd.id)
}
#if LANG_CXX11
void IndexAd::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAd.id)
}
#endif
void IndexAd::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAd.id)
}
void IndexAd::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAd.id)
}
::std::string* IndexAd::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAd.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAd::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAd.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAd::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAd.id)
}

// string title = 2;
void IndexAd::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAd::title() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAd.title)
  return title_.GetNoArena();
}
void IndexAd::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAd.title)
}
#if LANG_CXX11
void IndexAd::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAd.title)
}
#endif
void IndexAd::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAd.title)
}
void IndexAd::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAd.title)
}
::std::string* IndexAd::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAd.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAd::release_title() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAd.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAd::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAd.title)
}

// .ttmall.ImageInfo image = 3;
bool IndexAd::has_image() const {
  return this != internal_default_instance() && image_ != NULL;
}
void IndexAd::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) delete image_;
  image_ = NULL;
}
const ::ttmall::ImageInfo& IndexAd::image() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAd.image)
  return image_ != NULL ? *image_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
::ttmall::ImageInfo* IndexAd::mutable_image() {
  
  if (image_ == NULL) {
    image_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAd.image)
  return image_;
}
::ttmall::ImageInfo* IndexAd::release_image() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAd.image)
  
  ::ttmall::ImageInfo* temp = image_;
  image_ = NULL;
  return temp;
}
void IndexAd::set_allocated_image(::ttmall::ImageInfo* image) {
  delete image_;
  image_ = image;
  if (image) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAd.image)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexAdGroup::kTypeFieldNumber;
const int IndexAdGroup::kNameFieldNumber;
const int IndexAdGroup::kDescFieldNumber;
const int IndexAdGroup::kAdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexAdGroup::IndexAdGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.IndexAdGroup)
}
IndexAdGroup::IndexAdGroup(const IndexAdGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ads_(from.ads_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ttmall.IndexAdGroup)
}

void IndexAdGroup::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

IndexAdGroup::~IndexAdGroup() {
  // @@protoc_insertion_point(destructor:ttmall.IndexAdGroup)
  SharedDtor();
}

void IndexAdGroup::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IndexAdGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexAdGroup::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexAdGroup& IndexAdGroup::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexAdGroup* IndexAdGroup::New(::google::protobuf::Arena* arena) const {
  IndexAdGroup* n = new IndexAdGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexAdGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.IndexAdGroup)
  ads_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool IndexAdGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.IndexAdGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.AdPosition type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ttmall::AdPosition >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAdGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAdGroup.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.IndexAd ads = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ads()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.IndexAdGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.IndexAdGroup)
  return false;
#undef DO_
}

void IndexAdGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.IndexAdGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AdPosition type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdGroup.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->desc(), output);
  }

  // repeated .ttmall.IndexAd ads = 4;
  for (unsigned int i = 0, n = this->ads_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->ads(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.IndexAdGroup)
}

::google::protobuf::uint8* IndexAdGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.IndexAdGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AdPosition type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdGroup.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->desc(), target);
  }

  // repeated .ttmall.IndexAd ads = 4;
  for (unsigned int i = 0, n = this->ads_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->ads(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.IndexAdGroup)
  return target;
}

size_t IndexAdGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.IndexAdGroup)
  size_t total_size = 0;

  // repeated .ttmall.IndexAd ads = 4;
  {
    unsigned int count = this->ads_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ads(i));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // .ttmall.AdPosition type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexAdGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.IndexAdGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexAdGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexAdGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.IndexAdGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.IndexAdGroup)
    MergeFrom(*source);
  }
}

void IndexAdGroup::MergeFrom(const IndexAdGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.IndexAdGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ads_.MergeFrom(from.ads_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void IndexAdGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.IndexAdGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexAdGroup::CopyFrom(const IndexAdGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.IndexAdGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexAdGroup::IsInitialized() const {
  return true;
}

void IndexAdGroup::Swap(IndexAdGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexAdGroup::InternalSwap(IndexAdGroup* other) {
  ads_.InternalSwap(&other->ads_);
  name_.Swap(&other->name_);
  desc_.Swap(&other->desc_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexAdGroup::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexAdGroup

// .ttmall.AdPosition type = 1;
void IndexAdGroup::clear_type() {
  type_ = 0;
}
::ttmall::AdPosition IndexAdGroup::type() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdGroup.type)
  return static_cast< ::ttmall::AdPosition >(type_);
}
void IndexAdGroup::set_type(::ttmall::AdPosition value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.IndexAdGroup.type)
}

// string name = 2;
void IndexAdGroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAdGroup::name() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdGroup.name)
  return name_.GetNoArena();
}
void IndexAdGroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAdGroup.name)
}
#if LANG_CXX11
void IndexAdGroup::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAdGroup.name)
}
#endif
void IndexAdGroup::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAdGroup.name)
}
void IndexAdGroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAdGroup.name)
}
::std::string* IndexAdGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdGroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAdGroup::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAdGroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAdGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAdGroup.name)
}

// string desc = 3;
void IndexAdGroup::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAdGroup::desc() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdGroup.desc)
  return desc_.GetNoArena();
}
void IndexAdGroup::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAdGroup.desc)
}
#if LANG_CXX11
void IndexAdGroup::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAdGroup.desc)
}
#endif
void IndexAdGroup::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAdGroup.desc)
}
void IndexAdGroup::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAdGroup.desc)
}
::std::string* IndexAdGroup::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdGroup.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAdGroup::release_desc() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAdGroup.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAdGroup::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAdGroup.desc)
}

// repeated .ttmall.IndexAd ads = 4;
int IndexAdGroup::ads_size() const {
  return ads_.size();
}
void IndexAdGroup::clear_ads() {
  ads_.Clear();
}
const ::ttmall::IndexAd& IndexAdGroup::ads(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdGroup.ads)
  return ads_.Get(index);
}
::ttmall::IndexAd* IndexAdGroup::mutable_ads(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdGroup.ads)
  return ads_.Mutable(index);
}
::ttmall::IndexAd* IndexAdGroup::add_ads() {
  // @@protoc_insertion_point(field_add:ttmall.IndexAdGroup.ads)
  return ads_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::IndexAd >*
IndexAdGroup::mutable_ads() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.IndexAdGroup.ads)
  return &ads_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::IndexAd >&
IndexAdGroup::ads() const {
  // @@protoc_insertion_point(field_list:ttmall.IndexAdGroup.ads)
  return ads_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

IndexRep::IndexRep_GroupsEntry::IndexRep_GroupsEntry() {}
IndexRep::IndexRep_GroupsEntry::IndexRep_GroupsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata IndexRep::IndexRep_GroupsEntry::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[38];
}
void IndexRep::IndexRep_GroupsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void IndexRep::IndexRep_GroupsEntry::MergeFrom(const IndexRep_GroupsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexRep::kTypesFieldNumber;
const int IndexRep::kGroupsFieldNumber;
const int IndexRep::kMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexRep::IndexRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.IndexRep)
}
IndexRep::IndexRep(const IndexRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      types_(from.types_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groups_.MergeFrom(from.groups_);
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5().size() > 0) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.IndexRep)
}

void IndexRep::SharedCtor() {
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

IndexRep::~IndexRep() {
  // @@protoc_insertion_point(destructor:ttmall.IndexRep)
  SharedDtor();
}

void IndexRep::SharedDtor() {
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IndexRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexRep& IndexRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexRep* IndexRep::New(::google::protobuf::Arena* arena) const {
  IndexRep* n = new IndexRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.IndexRep)
  types_.Clear();
  groups_.Clear();
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool IndexRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.IndexRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.IndexType types = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .ttmall.IndexAdGroup> groups = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          IndexRep_GroupsEntry::Parser< ::google::protobuf::internal::MapField<
              IndexRep_GroupsEntry,
              ::google::protobuf::int32, ::ttmall::IndexAdGroup,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup > > parser(&groups_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string md5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->md5().data(), this->md5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexRep.md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.IndexRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.IndexRep)
  return false;
#undef DO_
}

void IndexRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.IndexRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.IndexType types = 1;
  for (unsigned int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->types(i), output);
  }

  // map<int32, .ttmall.IndexAdGroup> groups = 2;
  if (!this->groups().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->groups().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->groups().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::const_iterator
          it = this->groups().begin();
          it != this->groups().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<IndexRep_GroupsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(groups_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<IndexRep_GroupsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::const_iterator
          it = this->groups().begin();
          it != this->groups().end(); ++it) {
        entry.reset(groups_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexRep.md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->md5(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.IndexRep)
}

::google::protobuf::uint8* IndexRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.IndexRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.IndexType types = 1;
  for (unsigned int i = 0, n = this->types_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->types(i), deterministic, target);
  }

  // map<int32, .ttmall.IndexAdGroup> groups = 2;
  if (!this->groups().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->groups().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->groups().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::const_iterator
          it = this->groups().begin();
          it != this->groups().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<IndexRep_GroupsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(groups_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<IndexRep_GroupsEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::const_iterator
          it = this->groups().begin();
          it != this->groups().end(); ++it) {
        entry.reset(groups_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexRep.md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->md5(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.IndexRep)
  return target;
}

size_t IndexRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.IndexRep)
  size_t total_size = 0;

  // repeated .ttmall.IndexType types = 1;
  {
    unsigned int count = this->types_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->types(i));
    }
  }

  // map<int32, .ttmall.IndexAdGroup> groups = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->groups_size());
  {
    ::google::protobuf::scoped_ptr<IndexRep_GroupsEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >::const_iterator
        it = this->groups().begin();
        it != this->groups().end(); ++it) {
      entry.reset(groups_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->md5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.IndexRep)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.IndexRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.IndexRep)
    MergeFrom(*source);
  }
}

void IndexRep::MergeFrom(const IndexRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.IndexRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  types_.MergeFrom(from.types_);
  groups_.MergeFrom(from.groups_);
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
}

void IndexRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.IndexRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexRep::CopyFrom(const IndexRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.IndexRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexRep::IsInitialized() const {
  return true;
}

void IndexRep::Swap(IndexRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexRep::InternalSwap(IndexRep* other) {
  types_.InternalSwap(&other->types_);
  groups_.Swap(&other->groups_);
  md5_.Swap(&other->md5_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexRep

// repeated .ttmall.IndexType types = 1;
int IndexRep::types_size() const {
  return types_.size();
}
void IndexRep::clear_types() {
  types_.Clear();
}
const ::ttmall::IndexType& IndexRep::types(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.IndexRep.types)
  return types_.Get(index);
}
::ttmall::IndexType* IndexRep::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.IndexRep.types)
  return types_.Mutable(index);
}
::ttmall::IndexType* IndexRep::add_types() {
  // @@protoc_insertion_point(field_add:ttmall.IndexRep.types)
  return types_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::IndexType >*
IndexRep::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.IndexRep.types)
  return &types_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::IndexType >&
IndexRep::types() const {
  // @@protoc_insertion_point(field_list:ttmall.IndexRep.types)
  return types_;
}

// map<int32, .ttmall.IndexAdGroup> groups = 2;
int IndexRep::groups_size() const {
  return groups_.size();
}
void IndexRep::clear_groups() {
  groups_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >&
IndexRep::groups() const {
  // @@protoc_insertion_point(field_map:ttmall.IndexRep.groups)
  return groups_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::ttmall::IndexAdGroup >*
IndexRep::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_map:ttmall.IndexRep.groups)
  return groups_.MutableMap();
}

// string md5 = 3;
void IndexRep::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexRep::md5() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexRep.md5)
  return md5_.GetNoArena();
}
void IndexRep::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexRep.md5)
}
#if LANG_CXX11
void IndexRep::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexRep.md5)
}
#endif
void IndexRep::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexRep.md5)
}
void IndexRep::set_md5(const char* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexRep.md5)
}
::std::string* IndexRep::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexRep.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexRep::release_md5() {
  // @@protoc_insertion_point(field_release:ttmall.IndexRep.md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexRep::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexRep.md5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListRegionsReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRegionsReq::ListRegionsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListRegionsReq)
}
ListRegionsReq::ListRegionsReq(const ListRegionsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListRegionsReq)
}

void ListRegionsReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListRegionsReq::~ListRegionsReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListRegionsReq)
  SharedDtor();
}

void ListRegionsReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListRegionsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListRegionsReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRegionsReq& ListRegionsReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListRegionsReq* ListRegionsReq::New(::google::protobuf::Arena* arena) const {
  ListRegionsReq* n = new ListRegionsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListRegionsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListRegionsReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListRegionsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListRegionsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListRegionsReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListRegionsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListRegionsReq)
  return false;
#undef DO_
}

void ListRegionsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListRegionsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListRegionsReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListRegionsReq)
}

::google::protobuf::uint8* ListRegionsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListRegionsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListRegionsReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListRegionsReq)
  return target;
}

size_t ListRegionsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListRegionsReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListRegionsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListRegionsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRegionsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRegionsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListRegionsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListRegionsReq)
    MergeFrom(*source);
  }
}

void ListRegionsReq::MergeFrom(const ListRegionsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListRegionsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListRegionsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListRegionsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRegionsReq::CopyFrom(const ListRegionsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListRegionsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRegionsReq::IsInitialized() const {
  return true;
}

void ListRegionsReq::Swap(ListRegionsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRegionsReq::InternalSwap(ListRegionsReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListRegionsReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListRegionsReq

// string token = 1;
void ListRegionsReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListRegionsReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListRegionsReq.token)
  return token_.GetNoArena();
}
void ListRegionsReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListRegionsReq.token)
}
#if LANG_CXX11
void ListRegionsReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListRegionsReq.token)
}
#endif
void ListRegionsReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListRegionsReq.token)
}
void ListRegionsReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListRegionsReq.token)
}
::std::string* ListRegionsReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListRegionsReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListRegionsReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListRegionsReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListRegionsReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListRegionsReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListRegionsRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRegionsRep::ListRegionsRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListRegionsRep)
}
ListRegionsRep::ListRegionsRep(const ListRegionsRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListRegionsRep)
}

void ListRegionsRep::SharedCtor() {
  _cached_size_ = 0;
}

ListRegionsRep::~ListRegionsRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListRegionsRep)
  SharedDtor();
}

void ListRegionsRep::SharedDtor() {
}

void ListRegionsRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListRegionsRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRegionsRep& ListRegionsRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListRegionsRep* ListRegionsRep::New(::google::protobuf::Arena* arena) const {
  ListRegionsRep* n = new ListRegionsRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListRegionsRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListRegionsRep)
  items_.Clear();
}

bool ListRegionsRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListRegionsRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.RegionInfo Items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListRegionsRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListRegionsRep)
  return false;
#undef DO_
}

void ListRegionsRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListRegionsRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.RegionInfo Items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListRegionsRep)
}

::google::protobuf::uint8* ListRegionsRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListRegionsRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.RegionInfo Items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListRegionsRep)
  return target;
}

size_t ListRegionsRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListRegionsRep)
  size_t total_size = 0;

  // repeated .ttmall.RegionInfo Items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListRegionsRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListRegionsRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRegionsRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRegionsRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListRegionsRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListRegionsRep)
    MergeFrom(*source);
  }
}

void ListRegionsRep::MergeFrom(const ListRegionsRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListRegionsRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListRegionsRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListRegionsRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRegionsRep::CopyFrom(const ListRegionsRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListRegionsRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRegionsRep::IsInitialized() const {
  return true;
}

void ListRegionsRep::Swap(ListRegionsRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRegionsRep::InternalSwap(ListRegionsRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListRegionsRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListRegionsRep

// repeated .ttmall.RegionInfo Items = 1;
int ListRegionsRep::items_size() const {
  return items_.size();
}
void ListRegionsRep::clear_items() {
  items_.Clear();
}
const ::ttmall::RegionInfo& ListRegionsRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListRegionsRep.Items)
  return items_.Get(index);
}
::ttmall::RegionInfo* ListRegionsRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListRegionsRep.Items)
  return items_.Mutable(index);
}
::ttmall::RegionInfo* ListRegionsRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListRegionsRep.Items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::RegionInfo >*
ListRegionsRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListRegionsRep.Items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::RegionInfo >&
ListRegionsRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListRegionsRep.Items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCarReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCarReq::ListCarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListCarReq)
}
ListCarReq::ListCarReq(const ListCarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListCarReq)
}

void ListCarReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListCarReq::~ListCarReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListCarReq)
  SharedDtor();
}

void ListCarReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCarReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCarReq& ListCarReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCarReq* ListCarReq::New(::google::protobuf::Arena* arena) const {
  ListCarReq* n = new ListCarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListCarReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListCarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListCarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListCarReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListCarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListCarReq)
  return false;
#undef DO_
}

void ListCarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListCarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListCarReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListCarReq)
}

::google::protobuf::uint8* ListCarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListCarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListCarReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListCarReq)
  return target;
}

size_t ListCarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListCarReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListCarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListCarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListCarReq)
    MergeFrom(*source);
  }
}

void ListCarReq::MergeFrom(const ListCarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListCarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListCarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListCarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCarReq::CopyFrom(const ListCarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListCarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCarReq::IsInitialized() const {
  return true;
}

void ListCarReq::Swap(ListCarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCarReq::InternalSwap(ListCarReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCarReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCarReq

// string token = 1;
void ListCarReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListCarReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListCarReq.token)
  return token_.GetNoArena();
}
void ListCarReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListCarReq.token)
}
#if LANG_CXX11
void ListCarReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListCarReq.token)
}
#endif
void ListCarReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListCarReq.token)
}
void ListCarReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListCarReq.token)
}
::std::string* ListCarReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListCarReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListCarReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListCarReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListCarReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListCarReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCarRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCarRep::ListCarRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListCarRep)
}
ListCarRep::ListCarRep(const ListCarRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListCarRep)
}

void ListCarRep::SharedCtor() {
  _cached_size_ = 0;
}

ListCarRep::~ListCarRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListCarRep)
  SharedDtor();
}

void ListCarRep::SharedDtor() {
}

void ListCarRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCarRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCarRep& ListCarRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCarRep* ListCarRep::New(::google::protobuf::Arena* arena) const {
  ListCarRep* n = new ListCarRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCarRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListCarRep)
  items_.Clear();
}

bool ListCarRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListCarRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.CarInfo Items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListCarRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListCarRep)
  return false;
#undef DO_
}

void ListCarRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListCarRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.CarInfo Items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListCarRep)
}

::google::protobuf::uint8* ListCarRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListCarRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.CarInfo Items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListCarRep)
  return target;
}

size_t ListCarRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListCarRep)
  size_t total_size = 0;

  // repeated .ttmall.CarInfo Items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCarRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListCarRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCarRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCarRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListCarRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListCarRep)
    MergeFrom(*source);
  }
}

void ListCarRep::MergeFrom(const ListCarRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListCarRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListCarRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListCarRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCarRep::CopyFrom(const ListCarRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListCarRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCarRep::IsInitialized() const {
  return true;
}

void ListCarRep::Swap(ListCarRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCarRep::InternalSwap(ListCarRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCarRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCarRep

// repeated .ttmall.CarInfo Items = 1;
int ListCarRep::items_size() const {
  return items_.size();
}
void ListCarRep::clear_items() {
  items_.Clear();
}
const ::ttmall::CarInfo& ListCarRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListCarRep.Items)
  return items_.Get(index);
}
::ttmall::CarInfo* ListCarRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListCarRep.Items)
  return items_.Mutable(index);
}
::ttmall::CarInfo* ListCarRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListCarRep.Items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::CarInfo >*
ListCarRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListCarRep.Items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::CarInfo >&
ListCarRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListCarRep.Items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendAuthReq::kMobileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendAuthReq::SendAuthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SendAuthReq)
}
SendAuthReq::SendAuthReq(const SendAuthReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SendAuthReq)
}

void SendAuthReq::SharedCtor() {
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SendAuthReq::~SendAuthReq() {
  // @@protoc_insertion_point(destructor:ttmall.SendAuthReq)
  SharedDtor();
}

void SendAuthReq::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendAuthReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendAuthReq& SendAuthReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendAuthReq* SendAuthReq::New(::google::protobuf::Arena* arena) const {
  SendAuthReq* n = new SendAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SendAuthReq)
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SendAuthReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SendAuthReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SendAuthReq.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SendAuthReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SendAuthReq)
  return false;
#undef DO_
}

void SendAuthReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SendAuthReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SendAuthReq.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SendAuthReq)
}

::google::protobuf::uint8* SendAuthReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SendAuthReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SendAuthReq.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SendAuthReq)
  return target;
}

size_t SendAuthReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SendAuthReq)
  size_t total_size = 0;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendAuthReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SendAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SendAuthReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendAuthReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SendAuthReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SendAuthReq)
    MergeFrom(*source);
  }
}

void SendAuthReq::MergeFrom(const SendAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SendAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
}

void SendAuthReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SendAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendAuthReq::CopyFrom(const SendAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SendAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendAuthReq::IsInitialized() const {
  return true;
}

void SendAuthReq::Swap(SendAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendAuthReq::InternalSwap(SendAuthReq* other) {
  mobile_.Swap(&other->mobile_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendAuthReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendAuthReq

// string mobile = 1;
void SendAuthReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendAuthReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.SendAuthReq.mobile)
  return mobile_.GetNoArena();
}
void SendAuthReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SendAuthReq.mobile)
}
#if LANG_CXX11
void SendAuthReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SendAuthReq.mobile)
}
#endif
void SendAuthReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SendAuthReq.mobile)
}
void SendAuthReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SendAuthReq.mobile)
}
::std::string* SendAuthReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SendAuthReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAuthReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.SendAuthReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAuthReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SendAuthReq.mobile)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendAuthRep::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendAuthRep::SendAuthRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SendAuthRep)
}
SendAuthRep::SendAuthRep(const SendAuthRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SendAuthRep)
}

void SendAuthRep::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SendAuthRep::~SendAuthRep() {
  // @@protoc_insertion_point(destructor:ttmall.SendAuthRep)
  SharedDtor();
}

void SendAuthRep::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendAuthRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendAuthRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendAuthRep& SendAuthRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendAuthRep* SendAuthRep::New(::google::protobuf::Arena* arena) const {
  SendAuthRep* n = new SendAuthRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendAuthRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SendAuthRep)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SendAuthRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SendAuthRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SendAuthRep.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SendAuthRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SendAuthRep)
  return false;
#undef DO_
}

void SendAuthRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SendAuthRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SendAuthRep.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SendAuthRep)
}

::google::protobuf::uint8* SendAuthRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SendAuthRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SendAuthRep.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SendAuthRep)
  return target;
}

size_t SendAuthRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SendAuthRep)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendAuthRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SendAuthRep)
  GOOGLE_DCHECK_NE(&from, this);
  const SendAuthRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendAuthRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SendAuthRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SendAuthRep)
    MergeFrom(*source);
  }
}

void SendAuthRep::MergeFrom(const SendAuthRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SendAuthRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void SendAuthRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SendAuthRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendAuthRep::CopyFrom(const SendAuthRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SendAuthRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendAuthRep::IsInitialized() const {
  return true;
}

void SendAuthRep::Swap(SendAuthRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendAuthRep::InternalSwap(SendAuthRep* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendAuthRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendAuthRep

// string token = 1;
void SendAuthRep::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendAuthRep::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SendAuthRep.token)
  return token_.GetNoArena();
}
void SendAuthRep::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SendAuthRep.token)
}
#if LANG_CXX11
void SendAuthRep::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SendAuthRep.token)
}
#endif
void SendAuthRep::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SendAuthRep.token)
}
void SendAuthRep::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SendAuthRep.token)
}
::std::string* SendAuthRep::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SendAuthRep.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAuthRep::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SendAuthRep.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAuthRep::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SendAuthRep.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublicInfoReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublicInfoReq::PublicInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.PublicInfoReq)
}
PublicInfoReq::PublicInfoReq(const PublicInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.PublicInfoReq)
}

void PublicInfoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PublicInfoReq::~PublicInfoReq() {
  // @@protoc_insertion_point(destructor:ttmall.PublicInfoReq)
  SharedDtor();
}

void PublicInfoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PublicInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PublicInfoReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublicInfoReq& PublicInfoReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

PublicInfoReq* PublicInfoReq::New(::google::protobuf::Arena* arena) const {
  PublicInfoReq* n = new PublicInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PublicInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.PublicInfoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PublicInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.PublicInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PublicInfoReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.PublicInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.PublicInfoReq)
  return false;
#undef DO_
}

void PublicInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.PublicInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.PublicInfoReq)
}

::google::protobuf::uint8* PublicInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.PublicInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.PublicInfoReq)
  return target;
}

size_t PublicInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.PublicInfoReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PublicInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.PublicInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublicInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.PublicInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.PublicInfoReq)
    MergeFrom(*source);
  }
}

void PublicInfoReq::MergeFrom(const PublicInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.PublicInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void PublicInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.PublicInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicInfoReq::CopyFrom(const PublicInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.PublicInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicInfoReq::IsInitialized() const {
  return true;
}

void PublicInfoReq::Swap(PublicInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublicInfoReq::InternalSwap(PublicInfoReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PublicInfoReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PublicInfoReq

// string token = 1;
void PublicInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PublicInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.PublicInfoReq.token)
  return token_.GetNoArena();
}
void PublicInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PublicInfoReq.token)
}
#if LANG_CXX11
void PublicInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PublicInfoReq.token)
}
#endif
void PublicInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PublicInfoReq.token)
}
void PublicInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PublicInfoReq.token)
}
::std::string* PublicInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PublicInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PublicInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.PublicInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PublicInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PublicInfoReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublicInfoRep::kShopTypesFieldNumber;
const int PublicInfoRep::kDeliverTimesFieldNumber;
const int PublicInfoRep::kClauseUrlFieldNumber;
const int PublicInfoRep::kRuleUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublicInfoRep::PublicInfoRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.PublicInfoRep)
}
PublicInfoRep::PublicInfoRep(const PublicInfoRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shop_types_(from.shop_types_),
      deliver_times_(from.deliver_times_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clause_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clause_url().size() > 0) {
    clause_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clause_url_);
  }
  rule_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rule_url().size() > 0) {
    rule_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_url_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.PublicInfoRep)
}

void PublicInfoRep::SharedCtor() {
  clause_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PublicInfoRep::~PublicInfoRep() {
  // @@protoc_insertion_point(destructor:ttmall.PublicInfoRep)
  SharedDtor();
}

void PublicInfoRep::SharedDtor() {
  clause_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PublicInfoRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PublicInfoRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublicInfoRep& PublicInfoRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

PublicInfoRep* PublicInfoRep::New(::google::protobuf::Arena* arena) const {
  PublicInfoRep* n = new PublicInfoRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PublicInfoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.PublicInfoRep)
  shop_types_.Clear();
  deliver_times_.Clear();
  clause_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PublicInfoRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.PublicInfoRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string shop_types = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_shop_types()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shop_types(this->shop_types_size() - 1).data(),
            this->shop_types(this->shop_types_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PublicInfoRep.shop_types"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string deliver_times = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_deliver_times()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deliver_times(this->deliver_times_size() - 1).data(),
            this->deliver_times(this->deliver_times_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PublicInfoRep.deliver_times"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clause_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clause_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clause_url().data(), this->clause_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PublicInfoRep.clause_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rule_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rule_url().data(), this->rule_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.PublicInfoRep.rule_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.PublicInfoRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.PublicInfoRep)
  return false;
#undef DO_
}

void PublicInfoRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.PublicInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string shop_types = 1;
  for (int i = 0, n = this->shop_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shop_types(i).data(), this->shop_types(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoRep.shop_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->shop_types(i), output);
  }

  // repeated string deliver_times = 2;
  for (int i = 0, n = this->deliver_times_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_times(i).data(), this->deliver_times(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoRep.deliver_times");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->deliver_times(i), output);
  }

  // string clause_url = 3;
  if (this->clause_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clause_url().data(), this->clause_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoRep.clause_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clause_url(), output);
  }

  // string rule_url = 4;
  if (this->rule_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rule_url().data(), this->rule_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoRep.rule_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rule_url(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.PublicInfoRep)
}

::google::protobuf::uint8* PublicInfoRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.PublicInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string shop_types = 1;
  for (int i = 0, n = this->shop_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shop_types(i).data(), this->shop_types(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoRep.shop_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->shop_types(i), target);
  }

  // repeated string deliver_times = 2;
  for (int i = 0, n = this->deliver_times_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_times(i).data(), this->deliver_times(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoRep.deliver_times");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->deliver_times(i), target);
  }

  // string clause_url = 3;
  if (this->clause_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clause_url().data(), this->clause_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoRep.clause_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clause_url(), target);
  }

  // string rule_url = 4;
  if (this->rule_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rule_url().data(), this->rule_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.PublicInfoRep.rule_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rule_url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.PublicInfoRep)
  return target;
}

size_t PublicInfoRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.PublicInfoRep)
  size_t total_size = 0;

  // repeated string shop_types = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->shop_types_size());
  for (int i = 0, n = this->shop_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->shop_types(i));
  }

  // repeated string deliver_times = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->deliver_times_size());
  for (int i = 0, n = this->deliver_times_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->deliver_times(i));
  }

  // string clause_url = 3;
  if (this->clause_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clause_url());
  }

  // string rule_url = 4;
  if (this->rule_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rule_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PublicInfoRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.PublicInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicInfoRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublicInfoRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.PublicInfoRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.PublicInfoRep)
    MergeFrom(*source);
  }
}

void PublicInfoRep::MergeFrom(const PublicInfoRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.PublicInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shop_types_.MergeFrom(from.shop_types_);
  deliver_times_.MergeFrom(from.deliver_times_);
  if (from.clause_url().size() > 0) {

    clause_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clause_url_);
  }
  if (from.rule_url().size() > 0) {

    rule_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_url_);
  }
}

void PublicInfoRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.PublicInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicInfoRep::CopyFrom(const PublicInfoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.PublicInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicInfoRep::IsInitialized() const {
  return true;
}

void PublicInfoRep::Swap(PublicInfoRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublicInfoRep::InternalSwap(PublicInfoRep* other) {
  shop_types_.InternalSwap(&other->shop_types_);
  deliver_times_.InternalSwap(&other->deliver_times_);
  clause_url_.Swap(&other->clause_url_);
  rule_url_.Swap(&other->rule_url_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PublicInfoRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PublicInfoRep

// repeated string shop_types = 1;
int PublicInfoRep::shop_types_size() const {
  return shop_types_.size();
}
void PublicInfoRep::clear_shop_types() {
  shop_types_.Clear();
}
const ::std::string& PublicInfoRep::shop_types(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.PublicInfoRep.shop_types)
  return shop_types_.Get(index);
}
::std::string* PublicInfoRep::mutable_shop_types(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.PublicInfoRep.shop_types)
  return shop_types_.Mutable(index);
}
void PublicInfoRep::set_shop_types(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.PublicInfoRep.shop_types)
  shop_types_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void PublicInfoRep::set_shop_types(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.PublicInfoRep.shop_types)
  shop_types_.Mutable(index)->assign(std::move(value));
}
#endif
void PublicInfoRep::set_shop_types(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  shop_types_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.PublicInfoRep.shop_types)
}
void PublicInfoRep::set_shop_types(int index, const char* value, size_t size) {
  shop_types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.PublicInfoRep.shop_types)
}
::std::string* PublicInfoRep::add_shop_types() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.PublicInfoRep.shop_types)
  return shop_types_.Add();
}
void PublicInfoRep::add_shop_types(const ::std::string& value) {
  shop_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.PublicInfoRep.shop_types)
}
#if LANG_CXX11
void PublicInfoRep::add_shop_types(::std::string&& value) {
  shop_types_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.PublicInfoRep.shop_types)
}
#endif
void PublicInfoRep::add_shop_types(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  shop_types_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.PublicInfoRep.shop_types)
}
void PublicInfoRep::add_shop_types(const char* value, size_t size) {
  shop_types_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.PublicInfoRep.shop_types)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PublicInfoRep::shop_types() const {
  // @@protoc_insertion_point(field_list:ttmall.PublicInfoRep.shop_types)
  return shop_types_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PublicInfoRep::mutable_shop_types() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.PublicInfoRep.shop_types)
  return &shop_types_;
}

// repeated string deliver_times = 2;
int PublicInfoRep::deliver_times_size() const {
  return deliver_times_.size();
}
void PublicInfoRep::clear_deliver_times() {
  deliver_times_.Clear();
}
const ::std::string& PublicInfoRep::deliver_times(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.PublicInfoRep.deliver_times)
  return deliver_times_.Get(index);
}
::std::string* PublicInfoRep::mutable_deliver_times(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.PublicInfoRep.deliver_times)
  return deliver_times_.Mutable(index);
}
void PublicInfoRep::set_deliver_times(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.PublicInfoRep.deliver_times)
  deliver_times_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void PublicInfoRep::set_deliver_times(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.PublicInfoRep.deliver_times)
  deliver_times_.Mutable(index)->assign(std::move(value));
}
#endif
void PublicInfoRep::set_deliver_times(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  deliver_times_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.PublicInfoRep.deliver_times)
}
void PublicInfoRep::set_deliver_times(int index, const char* value, size_t size) {
  deliver_times_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.PublicInfoRep.deliver_times)
}
::std::string* PublicInfoRep::add_deliver_times() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.PublicInfoRep.deliver_times)
  return deliver_times_.Add();
}
void PublicInfoRep::add_deliver_times(const ::std::string& value) {
  deliver_times_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.PublicInfoRep.deliver_times)
}
#if LANG_CXX11
void PublicInfoRep::add_deliver_times(::std::string&& value) {
  deliver_times_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.PublicInfoRep.deliver_times)
}
#endif
void PublicInfoRep::add_deliver_times(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  deliver_times_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.PublicInfoRep.deliver_times)
}
void PublicInfoRep::add_deliver_times(const char* value, size_t size) {
  deliver_times_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.PublicInfoRep.deliver_times)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PublicInfoRep::deliver_times() const {
  // @@protoc_insertion_point(field_list:ttmall.PublicInfoRep.deliver_times)
  return deliver_times_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PublicInfoRep::mutable_deliver_times() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.PublicInfoRep.deliver_times)
  return &deliver_times_;
}

// string clause_url = 3;
void PublicInfoRep::clear_clause_url() {
  clause_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PublicInfoRep::clause_url() const {
  // @@protoc_insertion_point(field_get:ttmall.PublicInfoRep.clause_url)
  return clause_url_.GetNoArena();
}
void PublicInfoRep::set_clause_url(const ::std::string& value) {
  
  clause_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PublicInfoRep.clause_url)
}
#if LANG_CXX11
void PublicInfoRep::set_clause_url(::std::string&& value) {
  
  clause_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PublicInfoRep.clause_url)
}
#endif
void PublicInfoRep::set_clause_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clause_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PublicInfoRep.clause_url)
}
void PublicInfoRep::set_clause_url(const char* value, size_t size) {
  
  clause_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PublicInfoRep.clause_url)
}
::std::string* PublicInfoRep::mutable_clause_url() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PublicInfoRep.clause_url)
  return clause_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PublicInfoRep::release_clause_url() {
  // @@protoc_insertion_point(field_release:ttmall.PublicInfoRep.clause_url)
  
  return clause_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PublicInfoRep::set_allocated_clause_url(::std::string* clause_url) {
  if (clause_url != NULL) {
    
  } else {
    
  }
  clause_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clause_url);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PublicInfoRep.clause_url)
}

// string rule_url = 4;
void PublicInfoRep::clear_rule_url() {
  rule_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PublicInfoRep::rule_url() const {
  // @@protoc_insertion_point(field_get:ttmall.PublicInfoRep.rule_url)
  return rule_url_.GetNoArena();
}
void PublicInfoRep::set_rule_url(const ::std::string& value) {
  
  rule_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.PublicInfoRep.rule_url)
}
#if LANG_CXX11
void PublicInfoRep::set_rule_url(::std::string&& value) {
  
  rule_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.PublicInfoRep.rule_url)
}
#endif
void PublicInfoRep::set_rule_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rule_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.PublicInfoRep.rule_url)
}
void PublicInfoRep::set_rule_url(const char* value, size_t size) {
  
  rule_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.PublicInfoRep.rule_url)
}
::std::string* PublicInfoRep::mutable_rule_url() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.PublicInfoRep.rule_url)
  return rule_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PublicInfoRep::release_rule_url() {
  // @@protoc_insertion_point(field_release:ttmall.PublicInfoRep.rule_url)
  
  return rule_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PublicInfoRep::set_allocated_rule_url(::std::string* rule_url) {
  if (rule_url != NULL) {
    
  } else {
    
  }
  rule_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rule_url);
  // @@protoc_insertion_point(field_set_allocated:ttmall.PublicInfoRep.rule_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUserTypeReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUserTypeReq::ListUserTypeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListUserTypeReq)
}
ListUserTypeReq::ListUserTypeReq(const ListUserTypeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListUserTypeReq)
}

void ListUserTypeReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListUserTypeReq::~ListUserTypeReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListUserTypeReq)
  SharedDtor();
}

void ListUserTypeReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListUserTypeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListUserTypeReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUserTypeReq& ListUserTypeReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListUserTypeReq* ListUserTypeReq::New(::google::protobuf::Arena* arena) const {
  ListUserTypeReq* n = new ListUserTypeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListUserTypeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListUserTypeReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListUserTypeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListUserTypeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListUserTypeReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListUserTypeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListUserTypeReq)
  return false;
#undef DO_
}

void ListUserTypeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListUserTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListUserTypeReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListUserTypeReq)
}

::google::protobuf::uint8* ListUserTypeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListUserTypeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListUserTypeReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListUserTypeReq)
  return target;
}

size_t ListUserTypeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListUserTypeReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListUserTypeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListUserTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUserTypeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUserTypeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListUserTypeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListUserTypeReq)
    MergeFrom(*source);
  }
}

void ListUserTypeReq::MergeFrom(const ListUserTypeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListUserTypeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListUserTypeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListUserTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUserTypeReq::CopyFrom(const ListUserTypeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListUserTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUserTypeReq::IsInitialized() const {
  return true;
}

void ListUserTypeReq::Swap(ListUserTypeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUserTypeReq::InternalSwap(ListUserTypeReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListUserTypeReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListUserTypeReq

// string token = 1;
void ListUserTypeReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListUserTypeReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserTypeReq.token)
  return token_.GetNoArena();
}
void ListUserTypeReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListUserTypeReq.token)
}
#if LANG_CXX11
void ListUserTypeReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListUserTypeReq.token)
}
#endif
void ListUserTypeReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListUserTypeReq.token)
}
void ListUserTypeReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListUserTypeReq.token)
}
::std::string* ListUserTypeReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListUserTypeReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListUserTypeReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListUserTypeReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListUserTypeReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListUserTypeReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUserTypeRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUserTypeRep::ListUserTypeRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListUserTypeRep)
}
ListUserTypeRep::ListUserTypeRep(const ListUserTypeRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListUserTypeRep)
}

void ListUserTypeRep::SharedCtor() {
  _cached_size_ = 0;
}

ListUserTypeRep::~ListUserTypeRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListUserTypeRep)
  SharedDtor();
}

void ListUserTypeRep::SharedDtor() {
}

void ListUserTypeRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListUserTypeRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUserTypeRep& ListUserTypeRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListUserTypeRep* ListUserTypeRep::New(::google::protobuf::Arena* arena) const {
  ListUserTypeRep* n = new ListUserTypeRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListUserTypeRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListUserTypeRep)
  items_.Clear();
}

bool ListUserTypeRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListUserTypeRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.UserType items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListUserTypeRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListUserTypeRep)
  return false;
#undef DO_
}

void ListUserTypeRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListUserTypeRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.UserType items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListUserTypeRep)
}

::google::protobuf::uint8* ListUserTypeRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListUserTypeRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.UserType items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListUserTypeRep)
  return target;
}

size_t ListUserTypeRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListUserTypeRep)
  size_t total_size = 0;

  // repeated .ttmall.UserType items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListUserTypeRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListUserTypeRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUserTypeRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUserTypeRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListUserTypeRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListUserTypeRep)
    MergeFrom(*source);
  }
}

void ListUserTypeRep::MergeFrom(const ListUserTypeRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListUserTypeRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListUserTypeRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListUserTypeRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUserTypeRep::CopyFrom(const ListUserTypeRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListUserTypeRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUserTypeRep::IsInitialized() const {
  return true;
}

void ListUserTypeRep::Swap(ListUserTypeRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUserTypeRep::InternalSwap(ListUserTypeRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListUserTypeRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListUserTypeRep

// repeated .ttmall.UserType items = 1;
int ListUserTypeRep::items_size() const {
  return items_.size();
}
void ListUserTypeRep::clear_items() {
  items_.Clear();
}
const ::ttmall::UserType& ListUserTypeRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserTypeRep.items)
  return items_.Get(index);
}
::ttmall::UserType* ListUserTypeRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListUserTypeRep.items)
  return items_.Mutable(index);
}
::ttmall::UserType* ListUserTypeRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListUserTypeRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::UserType >*
ListUserTypeRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListUserTypeRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::UserType >&
ListUserTypeRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListUserTypeRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexAdInfoReq::kTokenFieldNumber;
const int IndexAdInfoReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexAdInfoReq::IndexAdInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.IndexAdInfoReq)
}
IndexAdInfoReq::IndexAdInfoReq(const IndexAdInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.IndexAdInfoReq)
}

void IndexAdInfoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

IndexAdInfoReq::~IndexAdInfoReq() {
  // @@protoc_insertion_point(destructor:ttmall.IndexAdInfoReq)
  SharedDtor();
}

void IndexAdInfoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IndexAdInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexAdInfoReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexAdInfoReq& IndexAdInfoReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexAdInfoReq* IndexAdInfoReq::New(::google::protobuf::Arena* arena) const {
  IndexAdInfoReq* n = new IndexAdInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexAdInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.IndexAdInfoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool IndexAdInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.IndexAdInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAdInfoReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAdInfoReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.IndexAdInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.IndexAdInfoReq)
  return false;
#undef DO_
}

void IndexAdInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.IndexAdInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.IndexAdInfoReq)
}

::google::protobuf::uint8* IndexAdInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.IndexAdInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.IndexAdInfoReq)
  return target;
}

size_t IndexAdInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.IndexAdInfoReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexAdInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.IndexAdInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexAdInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexAdInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.IndexAdInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.IndexAdInfoReq)
    MergeFrom(*source);
  }
}

void IndexAdInfoReq::MergeFrom(const IndexAdInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.IndexAdInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void IndexAdInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.IndexAdInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexAdInfoReq::CopyFrom(const IndexAdInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.IndexAdInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexAdInfoReq::IsInitialized() const {
  return true;
}

void IndexAdInfoReq::Swap(IndexAdInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexAdInfoReq::InternalSwap(IndexAdInfoReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexAdInfoReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexAdInfoReq

// string token = 1;
void IndexAdInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAdInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdInfoReq.token)
  return token_.GetNoArena();
}
void IndexAdInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAdInfoReq.token)
}
#if LANG_CXX11
void IndexAdInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAdInfoReq.token)
}
#endif
void IndexAdInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAdInfoReq.token)
}
void IndexAdInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAdInfoReq.token)
}
::std::string* IndexAdInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAdInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAdInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAdInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAdInfoReq.token)
}

// string id = 2;
void IndexAdInfoReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAdInfoReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdInfoReq.id)
  return id_.GetNoArena();
}
void IndexAdInfoReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAdInfoReq.id)
}
#if LANG_CXX11
void IndexAdInfoReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAdInfoReq.id)
}
#endif
void IndexAdInfoReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAdInfoReq.id)
}
void IndexAdInfoReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAdInfoReq.id)
}
::std::string* IndexAdInfoReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdInfoReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAdInfoReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAdInfoReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAdInfoReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAdInfoReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IndexAdInfoRep::kIdFieldNumber;
const int IndexAdInfoRep::kTitleFieldNumber;
const int IndexAdInfoRep::kDescFieldNumber;
const int IndexAdInfoRep::kBannerFieldNumber;
const int IndexAdInfoRep::kGoodsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexAdInfoRep::IndexAdInfoRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.IndexAdInfoRep)
}
IndexAdInfoRep::IndexAdInfoRep(const IndexAdInfoRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      goods_(from.goods_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_banner()) {
    banner_ = new ::ttmall::ImageInfo(*from.banner_);
  } else {
    banner_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.IndexAdInfoRep)
}

void IndexAdInfoRep::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  banner_ = NULL;
  _cached_size_ = 0;
}

IndexAdInfoRep::~IndexAdInfoRep() {
  // @@protoc_insertion_point(destructor:ttmall.IndexAdInfoRep)
  SharedDtor();
}

void IndexAdInfoRep::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete banner_;
  }
}

void IndexAdInfoRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IndexAdInfoRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexAdInfoRep& IndexAdInfoRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

IndexAdInfoRep* IndexAdInfoRep::New(::google::protobuf::Arena* arena) const {
  IndexAdInfoRep* n = new IndexAdInfoRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IndexAdInfoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.IndexAdInfoRep)
  goods_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && banner_ != NULL) {
    delete banner_;
  }
  banner_ = NULL;
}

bool IndexAdInfoRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.IndexAdInfoRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAdInfoRep.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAdInfoRep.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.IndexAdInfoRep.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.ImageInfo banner = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_banner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.GoodsInfo goods = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.IndexAdInfoRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.IndexAdInfoRep)
  return false;
#undef DO_
}

void IndexAdInfoRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.IndexAdInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoRep.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoRep.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoRep.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->desc(), output);
  }

  // .ttmall.ImageInfo banner = 4;
  if (this->has_banner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->banner_, output);
  }

  // repeated .ttmall.GoodsInfo goods = 5;
  for (unsigned int i = 0, n = this->goods_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->goods(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.IndexAdInfoRep)
}

::google::protobuf::uint8* IndexAdInfoRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.IndexAdInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoRep.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoRep.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.IndexAdInfoRep.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->desc(), target);
  }

  // .ttmall.ImageInfo banner = 4;
  if (this->has_banner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->banner_, deterministic, target);
  }

  // repeated .ttmall.GoodsInfo goods = 5;
  for (unsigned int i = 0, n = this->goods_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->goods(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.IndexAdInfoRep)
  return target;
}

size_t IndexAdInfoRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.IndexAdInfoRep)
  size_t total_size = 0;

  // repeated .ttmall.GoodsInfo goods = 5;
  {
    unsigned int count = this->goods_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string desc = 3;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // .ttmall.ImageInfo banner = 4;
  if (this->has_banner()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->banner_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IndexAdInfoRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.IndexAdInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexAdInfoRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexAdInfoRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.IndexAdInfoRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.IndexAdInfoRep)
    MergeFrom(*source);
  }
}

void IndexAdInfoRep::MergeFrom(const IndexAdInfoRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.IndexAdInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  goods_.MergeFrom(from.goods_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_banner()) {
    mutable_banner()->::ttmall::ImageInfo::MergeFrom(from.banner());
  }
}

void IndexAdInfoRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.IndexAdInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexAdInfoRep::CopyFrom(const IndexAdInfoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.IndexAdInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexAdInfoRep::IsInitialized() const {
  return true;
}

void IndexAdInfoRep::Swap(IndexAdInfoRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexAdInfoRep::InternalSwap(IndexAdInfoRep* other) {
  goods_.InternalSwap(&other->goods_);
  id_.Swap(&other->id_);
  title_.Swap(&other->title_);
  desc_.Swap(&other->desc_);
  std::swap(banner_, other->banner_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IndexAdInfoRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IndexAdInfoRep

// string id = 1;
void IndexAdInfoRep::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAdInfoRep::id() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdInfoRep.id)
  return id_.GetNoArena();
}
void IndexAdInfoRep::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAdInfoRep.id)
}
#if LANG_CXX11
void IndexAdInfoRep::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAdInfoRep.id)
}
#endif
void IndexAdInfoRep::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAdInfoRep.id)
}
void IndexAdInfoRep::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAdInfoRep.id)
}
::std::string* IndexAdInfoRep::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdInfoRep.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAdInfoRep::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAdInfoRep.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAdInfoRep::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAdInfoRep.id)
}

// string title = 2;
void IndexAdInfoRep::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAdInfoRep::title() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdInfoRep.title)
  return title_.GetNoArena();
}
void IndexAdInfoRep::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAdInfoRep.title)
}
#if LANG_CXX11
void IndexAdInfoRep::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAdInfoRep.title)
}
#endif
void IndexAdInfoRep::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAdInfoRep.title)
}
void IndexAdInfoRep::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAdInfoRep.title)
}
::std::string* IndexAdInfoRep::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdInfoRep.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAdInfoRep::release_title() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAdInfoRep.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAdInfoRep::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAdInfoRep.title)
}

// string desc = 3;
void IndexAdInfoRep::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IndexAdInfoRep::desc() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdInfoRep.desc)
  return desc_.GetNoArena();
}
void IndexAdInfoRep::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.IndexAdInfoRep.desc)
}
#if LANG_CXX11
void IndexAdInfoRep::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.IndexAdInfoRep.desc)
}
#endif
void IndexAdInfoRep::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.IndexAdInfoRep.desc)
}
void IndexAdInfoRep::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.IndexAdInfoRep.desc)
}
::std::string* IndexAdInfoRep::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdInfoRep.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IndexAdInfoRep::release_desc() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAdInfoRep.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IndexAdInfoRep::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAdInfoRep.desc)
}

// .ttmall.ImageInfo banner = 4;
bool IndexAdInfoRep::has_banner() const {
  return this != internal_default_instance() && banner_ != NULL;
}
void IndexAdInfoRep::clear_banner() {
  if (GetArenaNoVirtual() == NULL && banner_ != NULL) delete banner_;
  banner_ = NULL;
}
const ::ttmall::ImageInfo& IndexAdInfoRep::banner() const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdInfoRep.banner)
  return banner_ != NULL ? *banner_
                         : *::ttmall::ImageInfo::internal_default_instance();
}
::ttmall::ImageInfo* IndexAdInfoRep::mutable_banner() {
  
  if (banner_ == NULL) {
    banner_ = new ::ttmall::ImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdInfoRep.banner)
  return banner_;
}
::ttmall::ImageInfo* IndexAdInfoRep::release_banner() {
  // @@protoc_insertion_point(field_release:ttmall.IndexAdInfoRep.banner)
  
  ::ttmall::ImageInfo* temp = banner_;
  banner_ = NULL;
  return temp;
}
void IndexAdInfoRep::set_allocated_banner(::ttmall::ImageInfo* banner) {
  delete banner_;
  banner_ = banner;
  if (banner) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.IndexAdInfoRep.banner)
}

// repeated .ttmall.GoodsInfo goods = 5;
int IndexAdInfoRep::goods_size() const {
  return goods_.size();
}
void IndexAdInfoRep::clear_goods() {
  goods_.Clear();
}
const ::ttmall::GoodsInfo& IndexAdInfoRep::goods(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.IndexAdInfoRep.goods)
  return goods_.Get(index);
}
::ttmall::GoodsInfo* IndexAdInfoRep::mutable_goods(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.IndexAdInfoRep.goods)
  return goods_.Mutable(index);
}
::ttmall::GoodsInfo* IndexAdInfoRep::add_goods() {
  // @@protoc_insertion_point(field_add:ttmall.IndexAdInfoRep.goods)
  return goods_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >*
IndexAdInfoRep::mutable_goods() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.IndexAdInfoRep.goods)
  return &goods_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::GoodsInfo >&
IndexAdInfoRep::goods() const {
  // @@protoc_insertion_point(field_list:ttmall.IndexAdInfoRep.goods)
  return goods_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDeviceIdReq::kTokenFieldNumber;
const int SetDeviceIdReq::kDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDeviceIdReq::SetDeviceIdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetDeviceIdReq)
}
SetDeviceIdReq::SetDeviceIdReq(const SetDeviceIdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_id().size() > 0) {
    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SetDeviceIdReq)
}

void SetDeviceIdReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetDeviceIdReq::~SetDeviceIdReq() {
  // @@protoc_insertion_point(destructor:ttmall.SetDeviceIdReq)
  SharedDtor();
}

void SetDeviceIdReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetDeviceIdReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDeviceIdReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDeviceIdReq& SetDeviceIdReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDeviceIdReq* SetDeviceIdReq::New(::google::protobuf::Arena* arena) const {
  SetDeviceIdReq* n = new SetDeviceIdReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDeviceIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetDeviceIdReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SetDeviceIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetDeviceIdReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetDeviceIdReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_id().data(), this->device_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetDeviceIdReq.device_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetDeviceIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetDeviceIdReq)
  return false;
#undef DO_
}

void SetDeviceIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetDeviceIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetDeviceIdReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string device_id = 2;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetDeviceIdReq.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SetDeviceIdReq)
}

::google::protobuf::uint8* SetDeviceIdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetDeviceIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetDeviceIdReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string device_id = 2;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetDeviceIdReq.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetDeviceIdReq)
  return target;
}

size_t SetDeviceIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetDeviceIdReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string device_id = 2;
  if (this->device_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDeviceIdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetDeviceIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDeviceIdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDeviceIdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetDeviceIdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetDeviceIdReq)
    MergeFrom(*source);
  }
}

void SetDeviceIdReq::MergeFrom(const SetDeviceIdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetDeviceIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.device_id().size() > 0) {

    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
}

void SetDeviceIdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetDeviceIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDeviceIdReq::CopyFrom(const SetDeviceIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetDeviceIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDeviceIdReq::IsInitialized() const {
  return true;
}

void SetDeviceIdReq::Swap(SetDeviceIdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDeviceIdReq::InternalSwap(SetDeviceIdReq* other) {
  token_.Swap(&other->token_);
  device_id_.Swap(&other->device_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetDeviceIdReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDeviceIdReq

// string token = 1;
void SetDeviceIdReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetDeviceIdReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SetDeviceIdReq.token)
  return token_.GetNoArena();
}
void SetDeviceIdReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetDeviceIdReq.token)
}
#if LANG_CXX11
void SetDeviceIdReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetDeviceIdReq.token)
}
#endif
void SetDeviceIdReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetDeviceIdReq.token)
}
void SetDeviceIdReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetDeviceIdReq.token)
}
::std::string* SetDeviceIdReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetDeviceIdReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDeviceIdReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SetDeviceIdReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDeviceIdReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetDeviceIdReq.token)
}

// string device_id = 2;
void SetDeviceIdReq::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetDeviceIdReq::device_id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetDeviceIdReq.device_id)
  return device_id_.GetNoArena();
}
void SetDeviceIdReq::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetDeviceIdReq.device_id)
}
#if LANG_CXX11
void SetDeviceIdReq::set_device_id(::std::string&& value) {
  
  device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetDeviceIdReq.device_id)
}
#endif
void SetDeviceIdReq::set_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetDeviceIdReq.device_id)
}
void SetDeviceIdReq::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetDeviceIdReq.device_id)
}
::std::string* SetDeviceIdReq::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetDeviceIdReq.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDeviceIdReq::release_device_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetDeviceIdReq.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDeviceIdReq::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetDeviceIdReq.device_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDeviceIdRep::SetDeviceIdRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetDeviceIdRep)
}
SetDeviceIdRep::SetDeviceIdRep(const SetDeviceIdRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.SetDeviceIdRep)
}

void SetDeviceIdRep::SharedCtor() {
  _cached_size_ = 0;
}

SetDeviceIdRep::~SetDeviceIdRep() {
  // @@protoc_insertion_point(destructor:ttmall.SetDeviceIdRep)
  SharedDtor();
}

void SetDeviceIdRep::SharedDtor() {
}

void SetDeviceIdRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDeviceIdRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDeviceIdRep& SetDeviceIdRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDeviceIdRep* SetDeviceIdRep::New(::google::protobuf::Arena* arena) const {
  SetDeviceIdRep* n = new SetDeviceIdRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDeviceIdRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetDeviceIdRep)
}

bool SetDeviceIdRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetDeviceIdRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetDeviceIdRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetDeviceIdRep)
  return false;
#undef DO_
}

void SetDeviceIdRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetDeviceIdRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:ttmall.SetDeviceIdRep)
}

::google::protobuf::uint8* SetDeviceIdRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetDeviceIdRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetDeviceIdRep)
  return target;
}

size_t SetDeviceIdRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetDeviceIdRep)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDeviceIdRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetDeviceIdRep)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDeviceIdRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDeviceIdRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetDeviceIdRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetDeviceIdRep)
    MergeFrom(*source);
  }
}

void SetDeviceIdRep::MergeFrom(const SetDeviceIdRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetDeviceIdRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetDeviceIdRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetDeviceIdRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDeviceIdRep::CopyFrom(const SetDeviceIdRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetDeviceIdRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDeviceIdRep::IsInitialized() const {
  return true;
}

void SetDeviceIdRep::Swap(SetDeviceIdRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDeviceIdRep::InternalSwap(SetDeviceIdRep* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetDeviceIdRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDeviceIdRep

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUpdateReq::kTypeFieldNumber;
const int CheckUpdateReq::kVersionFieldNumber;
const int CheckUpdateReq::kPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUpdateReq::CheckUpdateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.CheckUpdateReq)
}
CheckUpdateReq::CheckUpdateReq(const CheckUpdateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&platform_) -
    reinterpret_cast<char*>(&type_) + sizeof(platform_));
  // @@protoc_insertion_point(copy_constructor:ttmall.CheckUpdateReq)
}

void CheckUpdateReq::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&platform_) -
    reinterpret_cast<char*>(&type_) + sizeof(platform_));
  _cached_size_ = 0;
}

CheckUpdateReq::~CheckUpdateReq() {
  // @@protoc_insertion_point(destructor:ttmall.CheckUpdateReq)
  SharedDtor();
}

void CheckUpdateReq::SharedDtor() {
}

void CheckUpdateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckUpdateReq::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckUpdateReq& CheckUpdateReq::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckUpdateReq* CheckUpdateReq::New(::google::protobuf::Arena* arena) const {
  CheckUpdateReq* n = new CheckUpdateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckUpdateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.CheckUpdateReq)
  ::memset(&type_, 0, reinterpret_cast<char*>(&platform_) -
    reinterpret_cast<char*>(&type_) + sizeof(platform_));
}

bool CheckUpdateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.CheckUpdateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.UpdateType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ttmall::UpdateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.DevicePlatform platform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_platform(static_cast< ::ttmall::DevicePlatform >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.CheckUpdateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.CheckUpdateReq)
  return false;
#undef DO_
}

void CheckUpdateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.CheckUpdateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UpdateType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // .ttmall.DevicePlatform platform = 3;
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->platform(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.CheckUpdateReq)
}

::google::protobuf::uint8* CheckUpdateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.CheckUpdateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UpdateType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  // .ttmall.DevicePlatform platform = 3;
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->platform(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.CheckUpdateReq)
  return target;
}

size_t CheckUpdateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.CheckUpdateReq)
  size_t total_size = 0;

  // .ttmall.UpdateType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // .ttmall.DevicePlatform platform = 3;
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckUpdateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.CheckUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckUpdateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckUpdateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.CheckUpdateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.CheckUpdateReq)
    MergeFrom(*source);
  }
}

void CheckUpdateReq::MergeFrom(const CheckUpdateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.CheckUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.platform() != 0) {
    set_platform(from.platform());
  }
}

void CheckUpdateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.CheckUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUpdateReq::CopyFrom(const CheckUpdateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.CheckUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUpdateReq::IsInitialized() const {
  return true;
}

void CheckUpdateReq::Swap(CheckUpdateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUpdateReq::InternalSwap(CheckUpdateReq* other) {
  std::swap(type_, other->type_);
  std::swap(version_, other->version_);
  std::swap(platform_, other->platform_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckUpdateReq::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckUpdateReq

// .ttmall.UpdateType type = 1;
void CheckUpdateReq::clear_type() {
  type_ = 0;
}
::ttmall::UpdateType CheckUpdateReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.CheckUpdateReq.type)
  return static_cast< ::ttmall::UpdateType >(type_);
}
void CheckUpdateReq::set_type(::ttmall::UpdateType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CheckUpdateReq.type)
}

// int32 version = 2;
void CheckUpdateReq::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 CheckUpdateReq::version() const {
  // @@protoc_insertion_point(field_get:ttmall.CheckUpdateReq.version)
  return version_;
}
void CheckUpdateReq::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CheckUpdateReq.version)
}

// .ttmall.DevicePlatform platform = 3;
void CheckUpdateReq::clear_platform() {
  platform_ = 0;
}
::ttmall::DevicePlatform CheckUpdateReq::platform() const {
  // @@protoc_insertion_point(field_get:ttmall.CheckUpdateReq.platform)
  return static_cast< ::ttmall::DevicePlatform >(platform_);
}
void CheckUpdateReq::set_platform(::ttmall::DevicePlatform value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CheckUpdateReq.platform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUpdateRep::kVersionFieldNumber;
const int CheckUpdateRep::kUrlFieldNumber;
const int CheckUpdateRep::kHasUpdateFieldNumber;
const int CheckUpdateRep::kIsMustFieldNumber;
const int CheckUpdateRep::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUpdateRep::CheckUpdateRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.CheckUpdateRep)
}
CheckUpdateRep::CheckUpdateRep(const CheckUpdateRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  ::memcpy(&has_update_, &from.has_update_,
    reinterpret_cast<char*>(&is_must_) -
    reinterpret_cast<char*>(&has_update_) + sizeof(is_must_));
  // @@protoc_insertion_point(copy_constructor:ttmall.CheckUpdateRep)
}

void CheckUpdateRep::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&has_update_, 0, reinterpret_cast<char*>(&is_must_) -
    reinterpret_cast<char*>(&has_update_) + sizeof(is_must_));
  _cached_size_ = 0;
}

CheckUpdateRep::~CheckUpdateRep() {
  // @@protoc_insertion_point(destructor:ttmall.CheckUpdateRep)
  SharedDtor();
}

void CheckUpdateRep::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckUpdateRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckUpdateRep::descriptor() {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckUpdateRep& CheckUpdateRep::default_instance() {
  protobuf_public_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckUpdateRep* CheckUpdateRep::New(::google::protobuf::Arena* arena) const {
  CheckUpdateRep* n = new CheckUpdateRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckUpdateRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.CheckUpdateRep)
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&has_update_, 0, reinterpret_cast<char*>(&is_must_) -
    reinterpret_cast<char*>(&has_update_) + sizeof(is_must_));
}

bool CheckUpdateRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.CheckUpdateRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CheckUpdateRep.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CheckUpdateRep.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has_update = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_must = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_must_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CheckUpdateRep.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.CheckUpdateRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.CheckUpdateRep)
  return false;
#undef DO_
}

void CheckUpdateRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.CheckUpdateRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CheckUpdateRep.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CheckUpdateRep.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // bool has_update = 3;
  if (this->has_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_update(), output);
  }

  // bool is_must = 4;
  if (this->is_must() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_must(), output);
  }

  // string desc = 5;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CheckUpdateRep.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desc(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.CheckUpdateRep)
}

::google::protobuf::uint8* CheckUpdateRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.CheckUpdateRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CheckUpdateRep.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CheckUpdateRep.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // bool has_update = 3;
  if (this->has_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_update(), target);
  }

  // bool is_must = 4;
  if (this->is_must() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_must(), target);
  }

  // string desc = 5;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CheckUpdateRep.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desc(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.CheckUpdateRep)
  return target;
}

size_t CheckUpdateRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.CheckUpdateRep)
  size_t total_size = 0;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string desc = 5;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // bool has_update = 3;
  if (this->has_update() != 0) {
    total_size += 1 + 1;
  }

  // bool is_must = 4;
  if (this->is_must() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckUpdateRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.CheckUpdateRep)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckUpdateRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckUpdateRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.CheckUpdateRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.CheckUpdateRep)
    MergeFrom(*source);
  }
}

void CheckUpdateRep::MergeFrom(const CheckUpdateRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.CheckUpdateRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_update() != 0) {
    set_has_update(from.has_update());
  }
  if (from.is_must() != 0) {
    set_is_must(from.is_must());
  }
}

void CheckUpdateRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.CheckUpdateRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUpdateRep::CopyFrom(const CheckUpdateRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.CheckUpdateRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUpdateRep::IsInitialized() const {
  return true;
}

void CheckUpdateRep::Swap(CheckUpdateRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUpdateRep::InternalSwap(CheckUpdateRep* other) {
  version_.Swap(&other->version_);
  url_.Swap(&other->url_);
  desc_.Swap(&other->desc_);
  std::swap(has_update_, other->has_update_);
  std::swap(is_must_, other->is_must_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckUpdateRep::GetMetadata() const {
  protobuf_public_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckUpdateRep

// string version = 1;
void CheckUpdateRep::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateRep::version() const {
  // @@protoc_insertion_point(field_get:ttmall.CheckUpdateRep.version)
  return version_.GetNoArena();
}
void CheckUpdateRep::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CheckUpdateRep.version)
}
#if LANG_CXX11
void CheckUpdateRep::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CheckUpdateRep.version)
}
#endif
void CheckUpdateRep::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CheckUpdateRep.version)
}
void CheckUpdateRep::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CheckUpdateRep.version)
}
::std::string* CheckUpdateRep::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CheckUpdateRep.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateRep::release_version() {
  // @@protoc_insertion_point(field_release:ttmall.CheckUpdateRep.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRep::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CheckUpdateRep.version)
}

// string url = 2;
void CheckUpdateRep::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateRep::url() const {
  // @@protoc_insertion_point(field_get:ttmall.CheckUpdateRep.url)
  return url_.GetNoArena();
}
void CheckUpdateRep::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CheckUpdateRep.url)
}
#if LANG_CXX11
void CheckUpdateRep::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CheckUpdateRep.url)
}
#endif
void CheckUpdateRep::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CheckUpdateRep.url)
}
void CheckUpdateRep::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CheckUpdateRep.url)
}
::std::string* CheckUpdateRep::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CheckUpdateRep.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateRep::release_url() {
  // @@protoc_insertion_point(field_release:ttmall.CheckUpdateRep.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRep::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CheckUpdateRep.url)
}

// bool has_update = 3;
void CheckUpdateRep::clear_has_update() {
  has_update_ = false;
}
bool CheckUpdateRep::has_update() const {
  // @@protoc_insertion_point(field_get:ttmall.CheckUpdateRep.has_update)
  return has_update_;
}
void CheckUpdateRep::set_has_update(bool value) {
  
  has_update_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CheckUpdateRep.has_update)
}

// bool is_must = 4;
void CheckUpdateRep::clear_is_must() {
  is_must_ = false;
}
bool CheckUpdateRep::is_must() const {
  // @@protoc_insertion_point(field_get:ttmall.CheckUpdateRep.is_must)
  return is_must_;
}
void CheckUpdateRep::set_is_must(bool value) {
  
  is_must_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CheckUpdateRep.is_must)
}

// string desc = 5;
void CheckUpdateRep::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUpdateRep::desc() const {
  // @@protoc_insertion_point(field_get:ttmall.CheckUpdateRep.desc)
  return desc_.GetNoArena();
}
void CheckUpdateRep::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CheckUpdateRep.desc)
}
#if LANG_CXX11
void CheckUpdateRep::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CheckUpdateRep.desc)
}
#endif
void CheckUpdateRep::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CheckUpdateRep.desc)
}
void CheckUpdateRep::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CheckUpdateRep.desc)
}
::std::string* CheckUpdateRep::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CheckUpdateRep.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUpdateRep::release_desc() {
  // @@protoc_insertion_point(field_release:ttmall.CheckUpdateRep.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUpdateRep::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CheckUpdateRep.desc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ttmall

// @@protoc_insertion_point(global_scope)
