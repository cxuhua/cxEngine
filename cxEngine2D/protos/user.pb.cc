// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "user.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ttmall {
class LoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq> {
} _LoginReq_default_instance_;
class LoginRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRep> {
} _LoginRep_default_instance_;
class OptCartReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OptCartReq> {
} _OptCartReq_default_instance_;
class CartGoodsInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CartGoodsInfo> {
} _CartGoodsInfo_default_instance_;
class ListCartReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCartReq> {
} _ListCartReq_default_instance_;
class ListCartRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCartRep> {
} _ListCartRep_default_instance_;
class ListAddressReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListAddressReq> {
} _ListAddressReq_default_instance_;
class ListAddressRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListAddressRep> {
} _ListAddressRep_default_instance_;
class ListCouponReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCouponReq> {
} _ListCouponReq_default_instance_;
class ListCouponRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListCouponRep> {
} _ListCouponRep_default_instance_;
class AddGoodsFavReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddGoodsFavReq> {
} _AddGoodsFavReq_default_instance_;
class AddGoodsFavRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddGoodsFavRep> {
} _AddGoodsFavRep_default_instance_;
class DelGoodsFavReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelGoodsFavReq> {
} _DelGoodsFavReq_default_instance_;
class DelGoodsFavRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelGoodsFavRep> {
} _DelGoodsFavRep_default_instance_;
class ListGoodsFavReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListGoodsFavReq> {
} _ListGoodsFavReq_default_instance_;
class UserFavInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserFavInfo> {
} _UserFavInfo_default_instance_;
class ListGoodsFavRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListGoodsFavRep> {
} _ListGoodsFavRep_default_instance_;
class ListUserOrderReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListUserOrderReq> {
} _ListUserOrderReq_default_instance_;
class ListUserOrderRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListUserOrderRep> {
} _ListUserOrderRep_default_instance_;
class UserRegisterReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserRegisterReq> {
} _UserRegisterReq_default_instance_;
class UserRegisterRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserRegisterRep> {
} _UserRegisterRep_default_instance_;
class AddUserAddressReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddUserAddressReq> {
} _AddUserAddressReq_default_instance_;
class AddUserAddressRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddUserAddressRep> {
} _AddUserAddressRep_default_instance_;
class SetDefaultAddrReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetDefaultAddrReq> {
} _SetDefaultAddrReq_default_instance_;
class SetDefaultAddrRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetDefaultAddrRep> {
} _SetDefaultAddrRep_default_instance_;
class DelUserAddrReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelUserAddrReq> {
} _DelUserAddrReq_default_instance_;
class DelUserAddrRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelUserAddrRep> {
} _DelUserAddrRep_default_instance_;
class CancelOrderReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelOrderReq> {
} _CancelOrderReq_default_instance_;
class CancelOrderRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelOrderRep> {
} _CancelOrderRep_default_instance_;
class HideOrderReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HideOrderReq> {
} _HideOrderReq_default_instance_;
class HideOrderRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HideOrderRep> {
} _HideOrderRep_default_instance_;
class RepeatOrderReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RepeatOrderReq> {
} _RepeatOrderReq_default_instance_;
class RepeatOrderRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RepeatOrderRep> {
} _RepeatOrderRep_default_instance_;
class GetUserInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoReq> {
} _GetUserInfoReq_default_instance_;
class GetUserInfoRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoRep> {
} _GetUserInfoRep_default_instance_;
class UpdateUserPassReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateUserPassReq> {
} _UpdateUserPassReq_default_instance_;
class UpdateUserPassRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateUserPassRep> {
} _UpdateUserPassRep_default_instance_;
class UpdateUserInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateUserInfoReq> {
} _UpdateUserInfoReq_default_instance_;
class UpdateUserInfoRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateUserInfoRep> {
} _UpdateUserInfoRep_default_instance_;
class UpdateUserMobileReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateUserMobileReq> {
} _UpdateUserMobileReq_default_instance_;
class UpdateUserMobileRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateUserMobileRep> {
} _UpdateUserMobileRep_default_instance_;
class GetOrderDeliveryInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOrderDeliveryInfoReq> {
} _GetOrderDeliveryInfoReq_default_instance_;
class OrderDeliveryInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OrderDeliveryInfo> {
} _OrderDeliveryInfo_default_instance_;
class GetOrderDeliveryInfoRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOrderDeliveryInfoRep> {
} _GetOrderDeliveryInfoRep_default_instance_;
class GetOrderInfoReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOrderInfoReq> {
} _GetOrderInfoReq_default_instance_;
class GetOrderInfoRepDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetOrderInfoRep> {
} _GetOrderInfoRep_default_instance_;

namespace protobuf_user_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[46];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, pass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRep, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptCartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptCartReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptCartReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptCartReq, goods_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptCartReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptCartReq, key_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptCartReq, is_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptCartReq, cart_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CartGoodsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CartGoodsInfo, cart_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CartGoodsInfo, key_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CartGoodsInfo, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CartGoodsInfo, goods_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CartGoodsInfo, key_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CartGoodsInfo, dis_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CartGoodsInfo, disabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCartReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCartRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCartRep, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCartRep, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCartRep, disables_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAddressReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAddressRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListAddressRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCouponReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCouponReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCouponRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListCouponRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGoodsFavReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGoodsFavReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGoodsFavReq, goods_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGoodsFavReq, key_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGoodsFavRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGoodsFavRep, fav_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelGoodsFavReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelGoodsFavReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelGoodsFavReq, goods_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelGoodsFavRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelGoodsFavRep, fav_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsFavReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsFavReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsFavReq, skip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsFavReq, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserFavInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserFavInfo, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserFavInfo, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserFavInfo, disabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsFavRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListGoodsFavRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserOrderReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserOrderReq, opt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserOrderReq, skip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserOrderReq, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserOrderRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListUserOrderRep, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, pass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, referee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, deliver_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterReq, mark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterRep, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterRep, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRegisterRep, is_pass_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, coord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressReq, default__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUserAddressRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDefaultAddrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDefaultAddrReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDefaultAddrReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDefaultAddrRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDefaultAddrRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelUserAddrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelUserAddrReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelUserAddrReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelUserAddrRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelUserAddrRep, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelOrderRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HideOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HideOrderReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HideOrderReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HideOrderRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HideOrderRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatOrderReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatOrderReq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatOrderRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepeatOrderRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserPassReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserPassReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserPassReq, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserPassReq, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserPassReq, pass_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserPassRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserPassRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserInfoReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserInfoReq, avatar_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserInfoRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserInfoRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserMobileReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserMobileReq, login_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserMobileReq, login_pass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserMobileReq, mobile_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserMobileReq, mobile_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserMobileRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateUserMobileRep, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderDeliveryInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderDeliveryInfoReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderDeliveryInfoReq, order_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDeliveryInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDeliveryInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDeliveryInfo, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDeliveryInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDeliveryInfo, driver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDeliveryInfo, sign_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderDeliveryInfoRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderDeliveryInfoRep, infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderInfoReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderInfoReq, order_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderInfoRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOrderInfoRep, info_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(LoginReq)},
  { 8, -1, sizeof(LoginRep)},
  { 15, -1, sizeof(OptCartReq)},
  { 27, -1, sizeof(CartGoodsInfo)},
  { 39, -1, sizeof(ListCartReq)},
  { 45, -1, sizeof(ListCartRep)},
  { 53, -1, sizeof(ListAddressReq)},
  { 59, -1, sizeof(ListAddressRep)},
  { 65, -1, sizeof(ListCouponReq)},
  { 71, -1, sizeof(ListCouponRep)},
  { 77, -1, sizeof(AddGoodsFavReq)},
  { 85, -1, sizeof(AddGoodsFavRep)},
  { 91, -1, sizeof(DelGoodsFavReq)},
  { 98, -1, sizeof(DelGoodsFavRep)},
  { 104, -1, sizeof(ListGoodsFavReq)},
  { 112, -1, sizeof(UserFavInfo)},
  { 120, -1, sizeof(ListGoodsFavRep)},
  { 126, -1, sizeof(ListUserOrderReq)},
  { 135, -1, sizeof(ListUserOrderRep)},
  { 141, -1, sizeof(UserRegisterReq)},
  { 157, -1, sizeof(UserRegisterRep)},
  { 165, -1, sizeof(AddUserAddressReq)},
  { 181, -1, sizeof(AddUserAddressRep)},
  { 187, -1, sizeof(SetDefaultAddrReq)},
  { 194, -1, sizeof(SetDefaultAddrRep)},
  { 200, -1, sizeof(DelUserAddrReq)},
  { 207, -1, sizeof(DelUserAddrRep)},
  { 213, -1, sizeof(CancelOrderReq)},
  { 220, -1, sizeof(CancelOrderRep)},
  { 226, -1, sizeof(HideOrderReq)},
  { 233, -1, sizeof(HideOrderRep)},
  { 239, -1, sizeof(RepeatOrderReq)},
  { 246, -1, sizeof(RepeatOrderRep)},
  { 252, -1, sizeof(GetUserInfoReq)},
  { 258, -1, sizeof(GetUserInfoRep)},
  { 264, -1, sizeof(UpdateUserPassReq)},
  { 273, -1, sizeof(UpdateUserPassRep)},
  { 279, -1, sizeof(UpdateUserInfoReq)},
  { 286, -1, sizeof(UpdateUserInfoRep)},
  { 292, -1, sizeof(UpdateUserMobileReq)},
  { 301, -1, sizeof(UpdateUserMobileRep)},
  { 307, -1, sizeof(GetOrderDeliveryInfoReq)},
  { 314, -1, sizeof(OrderDeliveryInfo)},
  { 324, -1, sizeof(GetOrderDeliveryInfoRep)},
  { 330, -1, sizeof(GetOrderInfoReq)},
  { 337, -1, sizeof(GetOrderInfoRep)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OptCartReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CartGoodsInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCartReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCartRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListAddressRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCouponReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListCouponRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddGoodsFavReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddGoodsFavRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelGoodsFavReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelGoodsFavRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListGoodsFavReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserFavInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListGoodsFavRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListUserOrderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ListUserOrderRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserRegisterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserRegisterRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddUserAddressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddUserAddressRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetDefaultAddrReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetDefaultAddrRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelUserAddrReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelUserAddrRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelOrderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelOrderRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HideOrderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HideOrderRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RepeatOrderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RepeatOrderRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetUserInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetUserInfoRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateUserPassReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateUserPassRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateUserInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateUserInfoRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateUserMobileReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateUserMobileRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOrderDeliveryInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrderDeliveryInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOrderDeliveryInfoRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOrderInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOrderInfoRep_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "user.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 46);
}

}  // namespace

void TableStruct::Shutdown() {
  _LoginReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LoginRep_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _OptCartReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CartGoodsInfo_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ListCartReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ListCartRep_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ListAddressReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ListAddressRep_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ListCouponReq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ListCouponRep_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _AddGoodsFavReq_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _AddGoodsFavRep_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _DelGoodsFavReq_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _DelGoodsFavRep_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _ListGoodsFavReq_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _UserFavInfo_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _ListGoodsFavRep_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _ListUserOrderReq_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _ListUserOrderRep_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _UserRegisterReq_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _UserRegisterRep_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _AddUserAddressReq_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _AddUserAddressRep_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _SetDefaultAddrReq_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _SetDefaultAddrRep_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _DelUserAddrReq_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _DelUserAddrRep_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CancelOrderReq_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CancelOrderRep_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _HideOrderReq_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _HideOrderRep_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _RepeatOrderReq_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _RepeatOrderRep_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _GetUserInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _GetUserInfoRep_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _UpdateUserPassReq_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _UpdateUserPassRep_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _UpdateUserInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _UpdateUserInfoRep_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _UpdateUserMobileReq_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _UpdateUserMobileRep_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _GetOrderDeliveryInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _OrderDeliveryInfo_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _GetOrderDeliveryInfoRep_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _GetOrderInfoReq_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _GetOrderInfoRep_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::ttmall::protobuf_order_2eproto::InitDefaults();
  ::ttmall::protobuf_public_2eproto::InitDefaults();
  ::ttmall::protobuf_driver_2eproto::InitDefaults();
  _LoginReq_default_instance_.DefaultConstruct();
  _LoginRep_default_instance_.DefaultConstruct();
  _OptCartReq_default_instance_.DefaultConstruct();
  _CartGoodsInfo_default_instance_.DefaultConstruct();
  _ListCartReq_default_instance_.DefaultConstruct();
  _ListCartRep_default_instance_.DefaultConstruct();
  _ListAddressReq_default_instance_.DefaultConstruct();
  _ListAddressRep_default_instance_.DefaultConstruct();
  _ListCouponReq_default_instance_.DefaultConstruct();
  _ListCouponRep_default_instance_.DefaultConstruct();
  _AddGoodsFavReq_default_instance_.DefaultConstruct();
  _AddGoodsFavRep_default_instance_.DefaultConstruct();
  _DelGoodsFavReq_default_instance_.DefaultConstruct();
  _DelGoodsFavRep_default_instance_.DefaultConstruct();
  _ListGoodsFavReq_default_instance_.DefaultConstruct();
  _UserFavInfo_default_instance_.DefaultConstruct();
  _ListGoodsFavRep_default_instance_.DefaultConstruct();
  _ListUserOrderReq_default_instance_.DefaultConstruct();
  _ListUserOrderRep_default_instance_.DefaultConstruct();
  _UserRegisterReq_default_instance_.DefaultConstruct();
  _UserRegisterRep_default_instance_.DefaultConstruct();
  _AddUserAddressReq_default_instance_.DefaultConstruct();
  _AddUserAddressRep_default_instance_.DefaultConstruct();
  _SetDefaultAddrReq_default_instance_.DefaultConstruct();
  _SetDefaultAddrRep_default_instance_.DefaultConstruct();
  _DelUserAddrReq_default_instance_.DefaultConstruct();
  _DelUserAddrRep_default_instance_.DefaultConstruct();
  _CancelOrderReq_default_instance_.DefaultConstruct();
  _CancelOrderRep_default_instance_.DefaultConstruct();
  _HideOrderReq_default_instance_.DefaultConstruct();
  _HideOrderRep_default_instance_.DefaultConstruct();
  _RepeatOrderReq_default_instance_.DefaultConstruct();
  _RepeatOrderRep_default_instance_.DefaultConstruct();
  _GetUserInfoReq_default_instance_.DefaultConstruct();
  _GetUserInfoRep_default_instance_.DefaultConstruct();
  _UpdateUserPassReq_default_instance_.DefaultConstruct();
  _UpdateUserPassRep_default_instance_.DefaultConstruct();
  _UpdateUserInfoReq_default_instance_.DefaultConstruct();
  _UpdateUserInfoRep_default_instance_.DefaultConstruct();
  _UpdateUserMobileReq_default_instance_.DefaultConstruct();
  _UpdateUserMobileRep_default_instance_.DefaultConstruct();
  _GetOrderDeliveryInfoReq_default_instance_.DefaultConstruct();
  _OrderDeliveryInfo_default_instance_.DefaultConstruct();
  _GetOrderDeliveryInfoRep_default_instance_.DefaultConstruct();
  _GetOrderInfoReq_default_instance_.DefaultConstruct();
  _GetOrderInfoRep_default_instance_.DefaultConstruct();
  _LoginRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::UserInfo*>(
      ::ttmall::UserInfo::internal_default_instance());
  _CartGoodsInfo_default_instance_.get_mutable()->goods_info_ = const_cast< ::ttmall::GoodsInfo*>(
      ::ttmall::GoodsInfo::internal_default_instance());
  _UserFavInfo_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::GoodsInfo*>(
      ::ttmall::GoodsInfo::internal_default_instance());
  _UserRegisterReq_default_instance_.get_mutable()->address_ = const_cast< ::ttmall::AddressInfo*>(
      ::ttmall::AddressInfo::internal_default_instance());
  _UserRegisterRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::UserInfo*>(
      ::ttmall::UserInfo::internal_default_instance());
  _AddUserAddressReq_default_instance_.get_mutable()->coord_ = const_cast< ::ttmall::CoordInfo*>(
      ::ttmall::CoordInfo::internal_default_instance());
  _AddUserAddressRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::AddressInfo*>(
      ::ttmall::AddressInfo::internal_default_instance());
  _SetDefaultAddrRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::AddressInfo*>(
      ::ttmall::AddressInfo::internal_default_instance());
  _CancelOrderRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::OrderInfo*>(
      ::ttmall::OrderInfo::internal_default_instance());
  _HideOrderRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::OrderInfo*>(
      ::ttmall::OrderInfo::internal_default_instance());
  _RepeatOrderRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::OrderInfo*>(
      ::ttmall::OrderInfo::internal_default_instance());
  _GetUserInfoRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::UserInfo*>(
      ::ttmall::UserInfo::internal_default_instance());
  _UpdateUserPassRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::UserInfo*>(
      ::ttmall::UserInfo::internal_default_instance());
  _UpdateUserInfoRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::UserInfo*>(
      ::ttmall::UserInfo::internal_default_instance());
  _UpdateUserMobileRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::UserInfo*>(
      ::ttmall::UserInfo::internal_default_instance());
  _OrderDeliveryInfo_default_instance_.get_mutable()->driver_ = const_cast< ::ttmall::DriverInfo*>(
      ::ttmall::DriverInfo::internal_default_instance());
  _GetOrderInfoRep_default_instance_.get_mutable()->info_ = const_cast< ::ttmall::OrderInfo*>(
      ::ttmall::OrderInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\nuser.proto\022\006ttmall\032\013order.proto\032\014publi"
      "c.proto\032\014driver.proto\":\n\010LoginReq\022\016\n\006mob"
      "ile\030\001 \001(\t\022\014\n\004pass\030\002 \001(\t\022\020\n\010platform\030\003 \001("
      "\t\"9\n\010LoginRep\022\r\n\005token\030\001 \001(\t\022\036\n\004info\030\002 \001"
      "(\0132\020.ttmall.UserInfo\"\226\001\n\nOptCartReq\022\r\n\005t"
      "oken\030\001 \001(\t\022!\n\004type\030\002 \001(\0162\023.ttmall.OptCar"
      "tType\022\020\n\010goods_id\030\003 \001(\t\022\016\n\006key_id\030\004 \001(\t\022"
      "\021\n\tkey_count\030\005 \001(\005\022\017\n\007is_list\030\006 \001(\010\022\020\n\010c"
      "art_ids\030\007 \003(\t\"\236\001\n\rCartGoodsInfo\022\017\n\007cart_"
      "id\030\001 \001(\t\022\021\n\tkey_count\030\002 \001(\005\022\016\n\006key_id\030\003 "
      "\001(\t\022%\n\ngoods_info\030\004 \001(\0132\021.ttmall.GoodsIn"
      "fo\022\017\n\007key_fee\030\005 \001(\005\022\017\n\007dis_fee\030\006 \001(\005\022\020\n\010"
      "disabled\030\007 \001(\010\"\034\n\013ListCartReq\022\r\n\005token\030\001"
      " \001(\t\"k\n\013ListCartRep\022\r\n\005count\030\001 \001(\005\022$\n\005it"
      "ems\030\002 \003(\0132\025.ttmall.CartGoodsInfo\022\'\n\010disa"
      "bles\030\003 \003(\0132\025.ttmall.CartGoodsInfo\"\037\n\016Lis"
      "tAddressReq\022\r\n\005token\030\001 \001(\t\"4\n\016ListAddres"
      "sRep\022\"\n\005Items\030\001 \003(\0132\023.ttmall.AddressInfo"
      "\"\036\n\rListCouponReq\022\r\n\005token\030\001 \001(\t\"2\n\rList"
      "CouponRep\022!\n\005Items\030\001 \003(\0132\022.ttmall.Coupon"
      "Info\"A\n\016AddGoodsFavReq\022\r\n\005token\030\001 \001(\t\022\020\n"
      "\010goods_id\030\002 \001(\t\022\016\n\006key_id\030\003 \001(\t\"#\n\016AddGo"
      "odsFavRep\022\021\n\tfav_count\030\001 \001(\005\"1\n\016DelGoods"
      "FavReq\022\r\n\005token\030\001 \001(\t\022\020\n\010goods_id\030\002 \001(\t\""
      "#\n\016DelGoodsFavRep\022\021\n\tfav_count\030\001 \001(\005\"=\n\017"
      "ListGoodsFavReq\022\r\n\005token\030\001 \001(\t\022\014\n\004skip\030\002"
      " \001(\005\022\r\n\005limit\030\003 \001(\005\"P\n\013UserFavInfo\022\016\n\006ke"
      "y_id\030\001 \001(\t\022\037\n\004info\030\002 \001(\0132\021.ttmall.GoodsI"
      "nfo\022\020\n\010disabled\030\003 \001(\010\"5\n\017ListGoodsFavRep"
      "\022\"\n\005items\030\001 \003(\0132\023.ttmall.UserFavInfo\"a\n\020"
      "ListUserOrderReq\022\r\n\005token\030\001 \001(\t\022!\n\003opt\030\002"
      " \001(\0162\024.ttmall.ListOrderOpt\022\014\n\004skip\030\003 \001(\005"
      "\022\r\n\005limit\030\004 \001(\005\"4\n\020ListUserOrderRep\022 \n\005i"
      "tems\030\001 \003(\0132\021.ttmall.OrderInfo\"\322\001\n\017UserRe"
      "gisterReq\022\r\n\005token\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r"
      "\n\005owner\030\003 \001(\t\022\014\n\004type\030\004 \001(\t\022\016\n\006mobile\030\005 "
      "\001(\t\022\014\n\004code\030\006 \001(\t\022\014\n\004pass\030\007 \001(\t\022\017\n\007refer"
      "ee\030\010 \001(\t\022\024\n\014deliver_time\030\t \001(\t\022$\n\007addres"
      "s\030\n \001(\0132\023.ttmall.AddressInfo\022\014\n\004mark\030\013 \001"
      "(\t\"Q\n\017UserRegisterRep\022\r\n\005token\030\001 \001(\t\022\036\n\004"
      "info\030\002 \001(\0132\020.ttmall.UserInfo\022\017\n\007is_pass\030"
      "\003 \001(\010\"\314\001\n\021AddUserAddressReq\022\r\n\005token\030\001 \001"
      "(\t\022\n\n\002id\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\020\n\010province"
      "\030\004 \001(\t\022\014\n\004city\030\005 \001(\t\022\014\n\004area\030\006 \001(\t\022\014\n\004ad"
      "dr\030\007 \001(\t\022\017\n\007contact\030\010 \001(\t\022\016\n\006mobile\030\t \001("
      "\t\022 \n\005coord\030\n \001(\0132\021.ttmall.CoordInfo\022\017\n\007d"
      "efault\030\013 \001(\010\"6\n\021AddUserAddressRep\022!\n\004inf"
      "o\030\001 \001(\0132\023.ttmall.AddressInfo\".\n\021SetDefau"
      "ltAddrReq\022\r\n\005token\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\"6\n\021"
      "SetDefaultAddrRep\022!\n\004info\030\001 \001(\0132\023.ttmall"
      ".AddressInfo\"+\n\016DelUserAddrReq\022\r\n\005token\030"
      "\001 \001(\t\022\n\n\002id\030\002 \001(\t\"\034\n\016DelUserAddrRep\022\n\n\002i"
      "d\030\001 \001(\t\"+\n\016CancelOrderReq\022\r\n\005token\030\001 \001(\t"
      "\022\n\n\002id\030\002 \001(\t\"1\n\016CancelOrderRep\022\037\n\004info\030\001"
      " \001(\0132\021.ttmall.OrderInfo\")\n\014HideOrderReq\022"
      "\r\n\005token\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\"/\n\014HideOrderR"
      "ep\022\037\n\004info\030\001 \001(\0132\021.ttmall.OrderInfo\"+\n\016R"
      "epeatOrderReq\022\r\n\005token\030\001 \001(\t\022\n\n\002id\030\002 \001(\t"
      "\"1\n\016RepeatOrderRep\022\037\n\004info\030\001 \001(\0132\021.ttmal"
      "l.OrderInfo\"\037\n\016GetUserInfoReq\022\r\n\005token\030\001"
      " \001(\t\"0\n\016GetUserInfoRep\022\036\n\004info\030\001 \001(\0132\020.t"
      "tmall.UserInfo\"N\n\021UpdateUserPassReq\022\r\n\005t"
      "oken\030\001 \001(\t\022\016\n\006mobile\030\002 \001(\t\022\014\n\004code\030\003 \001(\t"
      "\022\014\n\004pass\030\004 \001(\t\"3\n\021UpdateUserPassRep\022\036\n\004i"
      "nfo\030\001 \001(\0132\020.ttmall.UserInfo\"2\n\021UpdateUse"
      "rInfoReq\022\r\n\005token\030\001 \001(\t\022\016\n\006avatar\030\002 \001(\014\""
      "3\n\021UpdateUserInfoRep\022\036\n\004info\030\001 \001(\0132\020.ttm"
      "all.UserInfo\"i\n\023UpdateUserMobileReq\022\023\n\013l"
      "ogin_token\030\001 \001(\t\022\022\n\nlogin_pass\030\002 \001(\t\022\024\n\014"
      "mobile_token\030\003 \001(\t\022\023\n\013mobile_code\030\004 \001(\t\""
      "5\n\023UpdateUserMobileRep\022\036\n\004info\030\001 \001(\0132\020.t"
      "tmall.UserInfo\":\n\027GetOrderDeliveryInfoRe"
      "q\022\r\n\005token\030\001 \001(\t\022\020\n\010order_id\030\002 \001(\t\"\236\001\n\021O"
      "rderDeliveryInfo\022\n\n\002id\030\001 \001(\t\022 \n\005items\030\002 "
      "\003(\0132\021.ttmall.OrderItem\022$\n\005state\030\003 \001(\0162\025."
      "ttmall.DeliveryState\022\"\n\006driver\030\004 \001(\0132\022.t"
      "tmall.DriverInfo\022\021\n\tsign_time\030\005 \001(\003\"C\n\027G"
      "etOrderDeliveryInfoRep\022(\n\005infos\030\001 \003(\0132\031."
      "ttmall.OrderDeliveryInfo\"2\n\017GetOrderInfo"
      "Req\022\r\n\005token\030\001 \001(\t\022\020\n\010order_id\030\002 \001(\t\"2\n\017"
      "GetOrderInfoRep\022\037\n\004info\030\001 \001(\0132\021.ttmall.O"
      "rderInfo*>\n\013OptCartType\022\007\n\003ADD\020\000\022\007\n\003DEL\020"
      "\001\022\007\n\003SET\020\002\022\t\n\005CLEAR\020\003\022\t\n\005COUNT\020\004*j\n\014List"
      "OrderOpt\022\014\n\010LIST_ALL\020\000\022\021\n\rLIST_WAIT_PAY\020"
      "\001\022\023\n\017LIST_WAIT_TRANS\020\002\022\021\n\rLIST_TRANSING\020"
      "\003\022\021\n\rLIST_FINISHED\020\0042\247\020\n\013UserService\022B\n\014"
      "GetOrderInfo\022\027.ttmall.GetOrderInfoReq\032\027."
      "ttmall.GetOrderInfoRep\"\000\022\?\n\013SetDeviceId\022"
      "\026.ttmall.SetDeviceIdReq\032\026.ttmall.SetDevi"
      "ceIdRep\"\000\022Z\n\024GetOrderDeliveryInfo\022\037.ttma"
      "ll.GetOrderDeliveryInfoReq\032\037.ttmall.GetO"
      "rderDeliveryInfoRep\"\000\022N\n\020UpdateUserMobil"
      "e\022\033.ttmall.UpdateUserMobileReq\032\033.ttmall."
      "UpdateUserMobileRep\"\000\022H\n\016UpdateUserInfo\022"
      "\031.ttmall.UpdateUserInfoReq\032\031.ttmall.Upda"
      "teUserInfoRep\"\000\022H\n\016UpdateUserPass\022\031.ttma"
      "ll.UpdateUserPassReq\032\031.ttmall.UpdateUser"
      "PassRep\"\000\022\?\n\013GetUserInfo\022\026.ttmall.GetUse"
      "rInfoReq\032\026.ttmall.GetUserInfoRep\"\000\022E\n\rGe"
      "tNewMessage\022\030.ttmall.GetNewMessageReq\032\030."
      "ttmall.GetNewMessageRep\"\000\022H\n\016SetMessageR"
      "ead\022\031.ttmall.SetMessageReadReq\032\031.ttmall."
      "SetMessageReadRep\"\000\022E\n\rDeleteMessage\022\030.t"
      "tmall.DeleteMessageReq\032\030.ttmall.DeleteMe"
      "ssageRep\"\000\022\?\n\013ListMessage\022\026.ttmall.ListM"
      "essageReq\032\026.ttmall.ListMessageRep\"\000\022\?\n\013C"
      "ancelOrder\022\026.ttmall.CancelOrderReq\032\026.ttm"
      "all.CancelOrderRep\"\000\0229\n\tHideOrder\022\024.ttma"
      "ll.HideOrderReq\032\024.ttmall.HideOrderRep\"\000\022"
      "\?\n\013RepeatOrder\022\026.ttmall.RepeatOrderReq\032\026"
      ".ttmall.RepeatOrderRep\"\000\022:\n\014SendAuthCode"
      "\022\023.ttmall.SendAuthReq\032\023.ttmall.SendAuthR"
      "ep\"\000\022B\n\016DelUserAddress\022\026.ttmall.DelUserA"
      "ddrReq\032\026.ttmall.DelUserAddrRep\"\000\022H\n\016SetD"
      "efaultAddr\022\031.ttmall.SetDefaultAddrReq\032\031."
      "ttmall.SetDefaultAddrRep\"\000\022H\n\016AddUserAdd"
      "ress\022\031.ttmall.AddUserAddressReq\032\031.ttmall"
      ".AddUserAddressRep\"\000\022B\n\014UserRegister\022\027.t"
      "tmall.UserRegisterReq\032\027.ttmall.UserRegis"
      "terRep\"\000\022E\n\rListUserOrder\022\030.ttmall.ListU"
      "serOrderReq\032\030.ttmall.ListUserOrderRep\"\000\022"
      "B\n\014ListGoodsFav\022\027.ttmall.ListGoodsFavReq"
      "\032\027.ttmall.ListGoodsFavRep\"\000\022\?\n\013DelGoodsF"
      "av\022\026.ttmall.DelGoodsFavReq\032\026.ttmall.DelG"
      "oodsFavRep\"\000\022\?\n\013AddGoodsFav\022\026.ttmall.Add"
      "GoodsFavReq\032\026.ttmall.AddGoodsFavRep\"\000\022B\n"
      "\014ConfirmOrder\022\027.ttmall.ConfirmOrderReq\032\027"
      ".ttmall.ConfirmOrderRep\"\000\022<\n\nListCoupon\022"
      "\025.ttmall.ListCouponReq\032\025.ttmall.ListCoup"
      "onRep\"\000\022\?\n\013ListAddress\022\026.ttmall.ListAddr"
      "essReq\032\026.ttmall.ListAddressRep\"\000\022-\n\005Logi"
      "n\022\020.ttmall.LoginReq\032\020.ttmall.LoginRep\"\000\022"
      "4\n\007OptCart\022\022.ttmall.OptCartReq\032\023.ttmall."
      "ListCartRep\"\000\0226\n\010ListCart\022\023.ttmall.ListC"
      "artReq\032\023.ttmall.ListCartRep\"\000\022\?\n\013SubmitO"
      "rder\022\026.ttmall.SubmitOrderReq\032\026.ttmall.Su"
      "bmitOrderRep\"\000\0226\n\010PayOrder\022\023.ttmall.PayO"
      "rderReq\032\023.ttmall.PayOrderRep\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5518);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "user.proto", &protobuf_RegisterTypes);
  ::ttmall::protobuf_order_2eproto::AddDescriptors();
  ::ttmall::protobuf_public_2eproto::AddDescriptors();
  ::ttmall::protobuf_driver_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_user_2eproto

const ::google::protobuf::EnumDescriptor* OptCartType_descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_enum_descriptors[0];
}
bool OptCartType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ListOrderOpt_descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_enum_descriptors[1];
}
bool ListOrderOpt_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kMobileFieldNumber;
const int LoginReq::kPassFieldNumber;
const int LoginReq::kPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pass().size() > 0) {
    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.LoginReq)
}

void LoginReq::SharedCtor() {
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:ttmall.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReq& LoginReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.LoginReq)
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mobile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.LoginReq.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pass = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pass().data(), this->pass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.LoginReq.pass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.LoginReq.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.LoginReq.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mobile(), output);
  }

  // string pass = 2;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.LoginReq.pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pass(), output);
  }

  // string platform = 3;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.LoginReq.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->platform(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.LoginReq.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mobile(), target);
  }

  // string pass = 2;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.LoginReq.pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pass(), target);
  }

  // string platform = 3;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.LoginReq.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->platform(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.LoginReq)
  return target;
}

size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.LoginReq)
  size_t total_size = 0;

  // string mobile = 1;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // string pass = 2;
  if (this->pass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());
  }

  // string platform = 3;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.pass().size() > 0) {

    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  mobile_.Swap(&other->mobile_);
  pass_.Swap(&other->pass_);
  platform_.Swap(&other->platform_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// string mobile = 1;
void LoginReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginReq.mobile)
  return mobile_.GetNoArena();
}
void LoginReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.LoginReq.mobile)
}
#if LANG_CXX11
void LoginReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.LoginReq.mobile)
}
#endif
void LoginReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.LoginReq.mobile)
}
void LoginReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.LoginReq.mobile)
}
::std::string* LoginReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.LoginReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.LoginReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginReq.mobile)
}

// string pass = 2;
void LoginReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::pass() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginReq.pass)
  return pass_.GetNoArena();
}
void LoginReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.LoginReq.pass)
}
#if LANG_CXX11
void LoginReq::set_pass(::std::string&& value) {
  
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.LoginReq.pass)
}
#endif
void LoginReq::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.LoginReq.pass)
}
void LoginReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.LoginReq.pass)
}
::std::string* LoginReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.LoginReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_pass() {
  // @@protoc_insertion_point(field_release:ttmall.LoginReq.pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginReq.pass)
}

// string platform = 3;
void LoginReq::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginReq::platform() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginReq.platform)
  return platform_.GetNoArena();
}
void LoginReq::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.LoginReq.platform)
}
#if LANG_CXX11
void LoginReq::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.LoginReq.platform)
}
#endif
void LoginReq::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.LoginReq.platform)
}
void LoginReq::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.LoginReq.platform)
}
::std::string* LoginReq::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.LoginReq.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_platform() {
  // @@protoc_insertion_point(field_release:ttmall.LoginReq.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginReq.platform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRep::kTokenFieldNumber;
const int LoginRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRep::LoginRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.LoginRep)
}
LoginRep::LoginRep(const LoginRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_info()) {
    info_ = new ::ttmall::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.LoginRep)
}

void LoginRep::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_ = NULL;
  _cached_size_ = 0;
}

LoginRep::~LoginRep() {
  // @@protoc_insertion_point(destructor:ttmall.LoginRep)
  SharedDtor();
}

void LoginRep::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void LoginRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRep& LoginRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginRep* LoginRep::New(::google::protobuf::Arena* arena) const {
  LoginRep* n = new LoginRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.LoginRep)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool LoginRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.LoginRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.LoginRep.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.UserInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.LoginRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.LoginRep)
  return false;
#undef DO_
}

void LoginRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.LoginRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.LoginRep.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // .ttmall.UserInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.LoginRep)
}

::google::protobuf::uint8* LoginRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.LoginRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.LoginRep.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // .ttmall.UserInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.LoginRep)
  return target;
}

size_t LoginRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.LoginRep)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // .ttmall.UserInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.LoginRep)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.LoginRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.LoginRep)
    MergeFrom(*source);
  }
}

void LoginRep::MergeFrom(const LoginRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.LoginRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_info()) {
    mutable_info()->::ttmall::UserInfo::MergeFrom(from.info());
  }
}

void LoginRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.LoginRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRep::CopyFrom(const LoginRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.LoginRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRep::IsInitialized() const {
  return true;
}

void LoginRep::Swap(LoginRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRep::InternalSwap(LoginRep* other) {
  token_.Swap(&other->token_);
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRep

// string token = 1;
void LoginRep::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRep::token() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginRep.token)
  return token_.GetNoArena();
}
void LoginRep::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.LoginRep.token)
}
#if LANG_CXX11
void LoginRep::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.LoginRep.token)
}
#endif
void LoginRep::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.LoginRep.token)
}
void LoginRep::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.LoginRep.token)
}
::std::string* LoginRep::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.LoginRep.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRep::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.LoginRep.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRep::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginRep.token)
}

// .ttmall.UserInfo info = 2;
bool LoginRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void LoginRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::UserInfo& LoginRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
::ttmall::UserInfo* LoginRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.LoginRep.info)
  return info_;
}
::ttmall::UserInfo* LoginRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.LoginRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void LoginRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptCartReq::kTokenFieldNumber;
const int OptCartReq::kTypeFieldNumber;
const int OptCartReq::kGoodsIdFieldNumber;
const int OptCartReq::kKeyIdFieldNumber;
const int OptCartReq::kKeyCountFieldNumber;
const int OptCartReq::kIsListFieldNumber;
const int OptCartReq::kCartIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptCartReq::OptCartReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.OptCartReq)
}
OptCartReq::OptCartReq(const OptCartReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cart_ids_(from.cart_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  goods_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.goods_id().size() > 0) {
    goods_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goods_id_);
  }
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&is_list_) -
    reinterpret_cast<char*>(&type_) + sizeof(is_list_));
  // @@protoc_insertion_point(copy_constructor:ttmall.OptCartReq)
}

void OptCartReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&is_list_) -
    reinterpret_cast<char*>(&type_) + sizeof(is_list_));
  _cached_size_ = 0;
}

OptCartReq::~OptCartReq() {
  // @@protoc_insertion_point(destructor:ttmall.OptCartReq)
  SharedDtor();
}

void OptCartReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OptCartReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptCartReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptCartReq& OptCartReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

OptCartReq* OptCartReq::New(::google::protobuf::Arena* arena) const {
  OptCartReq* n = new OptCartReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptCartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.OptCartReq)
  cart_ids_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&is_list_) -
    reinterpret_cast<char*>(&type_) + sizeof(is_list_));
}

bool OptCartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.OptCartReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.OptCartReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.OptCartType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ttmall::OptCartType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string goods_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goods_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->goods_id().data(), this->goods_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.OptCartReq.goods_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), this->key_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.OptCartReq.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_list_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cart_ids = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cart_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cart_ids(this->cart_ids_size() - 1).data(),
            this->cart_ids(this->cart_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.OptCartReq.cart_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.OptCartReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.OptCartReq)
  return false;
#undef DO_
}

void OptCartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.OptCartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OptCartReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // .ttmall.OptCartType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string goods_id = 3;
  if (this->goods_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OptCartReq.goods_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->goods_id(), output);
  }

  // string key_id = 4;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OptCartReq.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->key_id(), output);
  }

  // int32 key_count = 5;
  if (this->key_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->key_count(), output);
  }

  // bool is_list = 6;
  if (this->is_list() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_list(), output);
  }

  // repeated string cart_ids = 7;
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cart_ids(i).data(), this->cart_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OptCartReq.cart_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->cart_ids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.OptCartReq)
}

::google::protobuf::uint8* OptCartReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.OptCartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OptCartReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // .ttmall.OptCartType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string goods_id = 3;
  if (this->goods_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OptCartReq.goods_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->goods_id(), target);
  }

  // string key_id = 4;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OptCartReq.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->key_id(), target);
  }

  // int32 key_count = 5;
  if (this->key_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->key_count(), target);
  }

  // bool is_list = 6;
  if (this->is_list() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_list(), target);
  }

  // repeated string cart_ids = 7;
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cart_ids(i).data(), this->cart_ids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OptCartReq.cart_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->cart_ids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.OptCartReq)
  return target;
}

size_t OptCartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.OptCartReq)
  size_t total_size = 0;

  // repeated string cart_ids = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cart_ids_size());
  for (int i = 0, n = this->cart_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cart_ids(i));
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string goods_id = 3;
  if (this->goods_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->goods_id());
  }

  // string key_id = 4;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  // .ttmall.OptCartType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 key_count = 5;
  if (this->key_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key_count());
  }

  // bool is_list = 6;
  if (this->is_list() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptCartReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.OptCartReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OptCartReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptCartReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.OptCartReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.OptCartReq)
    MergeFrom(*source);
  }
}

void OptCartReq::MergeFrom(const OptCartReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.OptCartReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cart_ids_.MergeFrom(from.cart_ids_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.goods_id().size() > 0) {

    goods_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goods_id_);
  }
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.key_count() != 0) {
    set_key_count(from.key_count());
  }
  if (from.is_list() != 0) {
    set_is_list(from.is_list());
  }
}

void OptCartReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.OptCartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptCartReq::CopyFrom(const OptCartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.OptCartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptCartReq::IsInitialized() const {
  return true;
}

void OptCartReq::Swap(OptCartReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptCartReq::InternalSwap(OptCartReq* other) {
  cart_ids_.InternalSwap(&other->cart_ids_);
  token_.Swap(&other->token_);
  goods_id_.Swap(&other->goods_id_);
  key_id_.Swap(&other->key_id_);
  std::swap(type_, other->type_);
  std::swap(key_count_, other->key_count_);
  std::swap(is_list_, other->is_list_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptCartReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptCartReq

// string token = 1;
void OptCartReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OptCartReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.token)
  return token_.GetNoArena();
}
void OptCartReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.token)
}
#if LANG_CXX11
void OptCartReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OptCartReq.token)
}
#endif
void OptCartReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OptCartReq.token)
}
void OptCartReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OptCartReq.token)
}
::std::string* OptCartReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OptCartReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OptCartReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.OptCartReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OptCartReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OptCartReq.token)
}

// .ttmall.OptCartType type = 2;
void OptCartReq::clear_type() {
  type_ = 0;
}
::ttmall::OptCartType OptCartReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.type)
  return static_cast< ::ttmall::OptCartType >(type_);
}
void OptCartReq::set_type(::ttmall::OptCartType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.type)
}

// string goods_id = 3;
void OptCartReq::clear_goods_id() {
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OptCartReq::goods_id() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.goods_id)
  return goods_id_.GetNoArena();
}
void OptCartReq::set_goods_id(const ::std::string& value) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.goods_id)
}
#if LANG_CXX11
void OptCartReq::set_goods_id(::std::string&& value) {
  
  goods_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OptCartReq.goods_id)
}
#endif
void OptCartReq::set_goods_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OptCartReq.goods_id)
}
void OptCartReq::set_goods_id(const char* value, size_t size) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OptCartReq.goods_id)
}
::std::string* OptCartReq::mutable_goods_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OptCartReq.goods_id)
  return goods_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OptCartReq::release_goods_id() {
  // @@protoc_insertion_point(field_release:ttmall.OptCartReq.goods_id)
  
  return goods_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OptCartReq::set_allocated_goods_id(::std::string* goods_id) {
  if (goods_id != NULL) {
    
  } else {
    
  }
  goods_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goods_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OptCartReq.goods_id)
}

// string key_id = 4;
void OptCartReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OptCartReq::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.key_id)
  return key_id_.GetNoArena();
}
void OptCartReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.key_id)
}
#if LANG_CXX11
void OptCartReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OptCartReq.key_id)
}
#endif
void OptCartReq::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OptCartReq.key_id)
}
void OptCartReq::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OptCartReq.key_id)
}
::std::string* OptCartReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OptCartReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OptCartReq::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.OptCartReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OptCartReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OptCartReq.key_id)
}

// int32 key_count = 5;
void OptCartReq::clear_key_count() {
  key_count_ = 0;
}
::google::protobuf::int32 OptCartReq::key_count() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.key_count)
  return key_count_;
}
void OptCartReq::set_key_count(::google::protobuf::int32 value) {
  
  key_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.key_count)
}

// bool is_list = 6;
void OptCartReq::clear_is_list() {
  is_list_ = false;
}
bool OptCartReq::is_list() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.is_list)
  return is_list_;
}
void OptCartReq::set_is_list(bool value) {
  
  is_list_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.is_list)
}

// repeated string cart_ids = 7;
int OptCartReq::cart_ids_size() const {
  return cart_ids_.size();
}
void OptCartReq::clear_cart_ids() {
  cart_ids_.Clear();
}
const ::std::string& OptCartReq::cart_ids(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.cart_ids)
  return cart_ids_.Get(index);
}
::std::string* OptCartReq::mutable_cart_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.OptCartReq.cart_ids)
  return cart_ids_.Mutable(index);
}
void OptCartReq::set_cart_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.cart_ids)
  cart_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void OptCartReq::set_cart_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.cart_ids)
  cart_ids_.Mutable(index)->assign(std::move(value));
}
#endif
void OptCartReq::set_cart_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.OptCartReq.cart_ids)
}
void OptCartReq::set_cart_ids(int index, const char* value, size_t size) {
  cart_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.OptCartReq.cart_ids)
}
::std::string* OptCartReq::add_cart_ids() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.OptCartReq.cart_ids)
  return cart_ids_.Add();
}
void OptCartReq::add_cart_ids(const ::std::string& value) {
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.OptCartReq.cart_ids)
}
#if LANG_CXX11
void OptCartReq::add_cart_ids(::std::string&& value) {
  cart_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.OptCartReq.cart_ids)
}
#endif
void OptCartReq::add_cart_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.OptCartReq.cart_ids)
}
void OptCartReq::add_cart_ids(const char* value, size_t size) {
  cart_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.OptCartReq.cart_ids)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
OptCartReq::cart_ids() const {
  // @@protoc_insertion_point(field_list:ttmall.OptCartReq.cart_ids)
  return cart_ids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
OptCartReq::mutable_cart_ids() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.OptCartReq.cart_ids)
  return &cart_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CartGoodsInfo::kCartIdFieldNumber;
const int CartGoodsInfo::kKeyCountFieldNumber;
const int CartGoodsInfo::kKeyIdFieldNumber;
const int CartGoodsInfo::kGoodsInfoFieldNumber;
const int CartGoodsInfo::kKeyFeeFieldNumber;
const int CartGoodsInfo::kDisFeeFieldNumber;
const int CartGoodsInfo::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CartGoodsInfo::CartGoodsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.CartGoodsInfo)
}
CartGoodsInfo::CartGoodsInfo(const CartGoodsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cart_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cart_id().size() > 0) {
    cart_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cart_id_);
  }
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_goods_info()) {
    goods_info_ = new ::ttmall::GoodsInfo(*from.goods_info_);
  } else {
    goods_info_ = NULL;
  }
  ::memcpy(&key_count_, &from.key_count_,
    reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&key_count_) + sizeof(disabled_));
  // @@protoc_insertion_point(copy_constructor:ttmall.CartGoodsInfo)
}

void CartGoodsInfo::SharedCtor() {
  cart_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&goods_info_, 0, reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&goods_info_) + sizeof(disabled_));
  _cached_size_ = 0;
}

CartGoodsInfo::~CartGoodsInfo() {
  // @@protoc_insertion_point(destructor:ttmall.CartGoodsInfo)
  SharedDtor();
}

void CartGoodsInfo::SharedDtor() {
  cart_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete goods_info_;
  }
}

void CartGoodsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CartGoodsInfo::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CartGoodsInfo& CartGoodsInfo::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

CartGoodsInfo* CartGoodsInfo::New(::google::protobuf::Arena* arena) const {
  CartGoodsInfo* n = new CartGoodsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CartGoodsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.CartGoodsInfo)
  cart_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && goods_info_ != NULL) {
    delete goods_info_;
  }
  goods_info_ = NULL;
  ::memset(&key_count_, 0, reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&key_count_) + sizeof(disabled_));
}

bool CartGoodsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.CartGoodsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cart_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cart_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cart_id().data(), this->cart_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CartGoodsInfo.cart_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), this->key_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CartGoodsInfo.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.GoodsInfo goods_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key_fee = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dis_fee = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dis_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.CartGoodsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.CartGoodsInfo)
  return false;
#undef DO_
}

void CartGoodsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.CartGoodsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cart_id = 1;
  if (this->cart_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cart_id().data(), this->cart_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CartGoodsInfo.cart_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cart_id(), output);
  }

  // int32 key_count = 2;
  if (this->key_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->key_count(), output);
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CartGoodsInfo.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key_id(), output);
  }

  // .ttmall.GoodsInfo goods_info = 4;
  if (this->has_goods_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->goods_info_, output);
  }

  // int32 key_fee = 5;
  if (this->key_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->key_fee(), output);
  }

  // int32 dis_fee = 6;
  if (this->dis_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dis_fee(), output);
  }

  // bool disabled = 7;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->disabled(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.CartGoodsInfo)
}

::google::protobuf::uint8* CartGoodsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.CartGoodsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cart_id = 1;
  if (this->cart_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cart_id().data(), this->cart_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CartGoodsInfo.cart_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cart_id(), target);
  }

  // int32 key_count = 2;
  if (this->key_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->key_count(), target);
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CartGoodsInfo.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key_id(), target);
  }

  // .ttmall.GoodsInfo goods_info = 4;
  if (this->has_goods_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->goods_info_, deterministic, target);
  }

  // int32 key_fee = 5;
  if (this->key_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->key_fee(), target);
  }

  // int32 dis_fee = 6;
  if (this->dis_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->dis_fee(), target);
  }

  // bool disabled = 7;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->disabled(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.CartGoodsInfo)
  return target;
}

size_t CartGoodsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.CartGoodsInfo)
  size_t total_size = 0;

  // string cart_id = 1;
  if (this->cart_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cart_id());
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  // .ttmall.GoodsInfo goods_info = 4;
  if (this->has_goods_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->goods_info_);
  }

  // int32 key_count = 2;
  if (this->key_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key_count());
  }

  // int32 key_fee = 5;
  if (this->key_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key_fee());
  }

  // int32 dis_fee = 6;
  if (this->dis_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dis_fee());
  }

  // bool disabled = 7;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CartGoodsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.CartGoodsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CartGoodsInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CartGoodsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.CartGoodsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.CartGoodsInfo)
    MergeFrom(*source);
  }
}

void CartGoodsInfo::MergeFrom(const CartGoodsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.CartGoodsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cart_id().size() > 0) {

    cart_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cart_id_);
  }
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_goods_info()) {
    mutable_goods_info()->::ttmall::GoodsInfo::MergeFrom(from.goods_info());
  }
  if (from.key_count() != 0) {
    set_key_count(from.key_count());
  }
  if (from.key_fee() != 0) {
    set_key_fee(from.key_fee());
  }
  if (from.dis_fee() != 0) {
    set_dis_fee(from.dis_fee());
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void CartGoodsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.CartGoodsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CartGoodsInfo::CopyFrom(const CartGoodsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.CartGoodsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CartGoodsInfo::IsInitialized() const {
  return true;
}

void CartGoodsInfo::Swap(CartGoodsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CartGoodsInfo::InternalSwap(CartGoodsInfo* other) {
  cart_id_.Swap(&other->cart_id_);
  key_id_.Swap(&other->key_id_);
  std::swap(goods_info_, other->goods_info_);
  std::swap(key_count_, other->key_count_);
  std::swap(key_fee_, other->key_fee_);
  std::swap(dis_fee_, other->dis_fee_);
  std::swap(disabled_, other->disabled_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CartGoodsInfo::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CartGoodsInfo

// string cart_id = 1;
void CartGoodsInfo::clear_cart_id() {
  cart_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CartGoodsInfo::cart_id() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.cart_id)
  return cart_id_.GetNoArena();
}
void CartGoodsInfo::set_cart_id(const ::std::string& value) {
  
  cart_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.cart_id)
}
#if LANG_CXX11
void CartGoodsInfo::set_cart_id(::std::string&& value) {
  
  cart_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CartGoodsInfo.cart_id)
}
#endif
void CartGoodsInfo::set_cart_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cart_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CartGoodsInfo.cart_id)
}
void CartGoodsInfo::set_cart_id(const char* value, size_t size) {
  
  cart_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CartGoodsInfo.cart_id)
}
::std::string* CartGoodsInfo::mutable_cart_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CartGoodsInfo.cart_id)
  return cart_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CartGoodsInfo::release_cart_id() {
  // @@protoc_insertion_point(field_release:ttmall.CartGoodsInfo.cart_id)
  
  return cart_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CartGoodsInfo::set_allocated_cart_id(::std::string* cart_id) {
  if (cart_id != NULL) {
    
  } else {
    
  }
  cart_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cart_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CartGoodsInfo.cart_id)
}

// int32 key_count = 2;
void CartGoodsInfo::clear_key_count() {
  key_count_ = 0;
}
::google::protobuf::int32 CartGoodsInfo::key_count() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.key_count)
  return key_count_;
}
void CartGoodsInfo::set_key_count(::google::protobuf::int32 value) {
  
  key_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.key_count)
}

// string key_id = 3;
void CartGoodsInfo::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CartGoodsInfo::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.key_id)
  return key_id_.GetNoArena();
}
void CartGoodsInfo::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.key_id)
}
#if LANG_CXX11
void CartGoodsInfo::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CartGoodsInfo.key_id)
}
#endif
void CartGoodsInfo::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CartGoodsInfo.key_id)
}
void CartGoodsInfo::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CartGoodsInfo.key_id)
}
::std::string* CartGoodsInfo::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CartGoodsInfo.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CartGoodsInfo::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.CartGoodsInfo.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CartGoodsInfo::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CartGoodsInfo.key_id)
}

// .ttmall.GoodsInfo goods_info = 4;
bool CartGoodsInfo::has_goods_info() const {
  return this != internal_default_instance() && goods_info_ != NULL;
}
void CartGoodsInfo::clear_goods_info() {
  if (GetArenaNoVirtual() == NULL && goods_info_ != NULL) delete goods_info_;
  goods_info_ = NULL;
}
const ::ttmall::GoodsInfo& CartGoodsInfo::goods_info() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.goods_info)
  return goods_info_ != NULL ? *goods_info_
                         : *::ttmall::GoodsInfo::internal_default_instance();
}
::ttmall::GoodsInfo* CartGoodsInfo::mutable_goods_info() {
  
  if (goods_info_ == NULL) {
    goods_info_ = new ::ttmall::GoodsInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.CartGoodsInfo.goods_info)
  return goods_info_;
}
::ttmall::GoodsInfo* CartGoodsInfo::release_goods_info() {
  // @@protoc_insertion_point(field_release:ttmall.CartGoodsInfo.goods_info)
  
  ::ttmall::GoodsInfo* temp = goods_info_;
  goods_info_ = NULL;
  return temp;
}
void CartGoodsInfo::set_allocated_goods_info(::ttmall::GoodsInfo* goods_info) {
  delete goods_info_;
  goods_info_ = goods_info;
  if (goods_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.CartGoodsInfo.goods_info)
}

// int32 key_fee = 5;
void CartGoodsInfo::clear_key_fee() {
  key_fee_ = 0;
}
::google::protobuf::int32 CartGoodsInfo::key_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.key_fee)
  return key_fee_;
}
void CartGoodsInfo::set_key_fee(::google::protobuf::int32 value) {
  
  key_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.key_fee)
}

// int32 dis_fee = 6;
void CartGoodsInfo::clear_dis_fee() {
  dis_fee_ = 0;
}
::google::protobuf::int32 CartGoodsInfo::dis_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.dis_fee)
  return dis_fee_;
}
void CartGoodsInfo::set_dis_fee(::google::protobuf::int32 value) {
  
  dis_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.dis_fee)
}

// bool disabled = 7;
void CartGoodsInfo::clear_disabled() {
  disabled_ = false;
}
bool CartGoodsInfo::disabled() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.disabled)
  return disabled_;
}
void CartGoodsInfo::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.disabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCartReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCartReq::ListCartReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListCartReq)
}
ListCartReq::ListCartReq(const ListCartReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListCartReq)
}

void ListCartReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListCartReq::~ListCartReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListCartReq)
  SharedDtor();
}

void ListCartReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCartReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCartReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCartReq& ListCartReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCartReq* ListCartReq::New(::google::protobuf::Arena* arena) const {
  ListCartReq* n = new ListCartReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListCartReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListCartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListCartReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListCartReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListCartReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListCartReq)
  return false;
#undef DO_
}

void ListCartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListCartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListCartReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListCartReq)
}

::google::protobuf::uint8* ListCartReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListCartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListCartReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListCartReq)
  return target;
}

size_t ListCartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListCartReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCartReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListCartReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCartReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCartReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListCartReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListCartReq)
    MergeFrom(*source);
  }
}

void ListCartReq::MergeFrom(const ListCartReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListCartReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListCartReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListCartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCartReq::CopyFrom(const ListCartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListCartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCartReq::IsInitialized() const {
  return true;
}

void ListCartReq::Swap(ListCartReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCartReq::InternalSwap(ListCartReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCartReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCartReq

// string token = 1;
void ListCartReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListCartReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListCartReq.token)
  return token_.GetNoArena();
}
void ListCartReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListCartReq.token)
}
#if LANG_CXX11
void ListCartReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListCartReq.token)
}
#endif
void ListCartReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListCartReq.token)
}
void ListCartReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListCartReq.token)
}
::std::string* ListCartReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListCartReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListCartReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListCartReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListCartReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListCartReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCartRep::kCountFieldNumber;
const int ListCartRep::kItemsFieldNumber;
const int ListCartRep::kDisablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCartRep::ListCartRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListCartRep)
}
ListCartRep::ListCartRep(const ListCartRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      disables_(from.disables_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:ttmall.ListCartRep)
}

void ListCartRep::SharedCtor() {
  count_ = 0;
  _cached_size_ = 0;
}

ListCartRep::~ListCartRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListCartRep)
  SharedDtor();
}

void ListCartRep::SharedDtor() {
}

void ListCartRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCartRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCartRep& ListCartRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCartRep* ListCartRep::New(::google::protobuf::Arena* arena) const {
  ListCartRep* n = new ListCartRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCartRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListCartRep)
  items_.Clear();
  disables_.Clear();
  count_ = 0;
}

bool ListCartRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListCartRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.CartGoodsInfo items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.CartGoodsInfo disables = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_disables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListCartRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListCartRep)
  return false;
#undef DO_
}

void ListCartRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListCartRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated .ttmall.CartGoodsInfo items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // repeated .ttmall.CartGoodsInfo disables = 3;
  for (unsigned int i = 0, n = this->disables_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->disables(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListCartRep)
}

::google::protobuf::uint8* ListCartRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListCartRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated .ttmall.CartGoodsInfo items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->items(i), deterministic, target);
  }

  // repeated .ttmall.CartGoodsInfo disables = 3;
  for (unsigned int i = 0, n = this->disables_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->disables(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListCartRep)
  return target;
}

size_t ListCartRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListCartRep)
  size_t total_size = 0;

  // repeated .ttmall.CartGoodsInfo items = 2;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // repeated .ttmall.CartGoodsInfo disables = 3;
  {
    unsigned int count = this->disables_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->disables(i));
    }
  }

  // int32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCartRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListCartRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCartRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCartRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListCartRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListCartRep)
    MergeFrom(*source);
  }
}

void ListCartRep::MergeFrom(const ListCartRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListCartRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  disables_.MergeFrom(from.disables_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void ListCartRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListCartRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCartRep::CopyFrom(const ListCartRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListCartRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCartRep::IsInitialized() const {
  return true;
}

void ListCartRep::Swap(ListCartRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCartRep::InternalSwap(ListCartRep* other) {
  items_.InternalSwap(&other->items_);
  disables_.InternalSwap(&other->disables_);
  std::swap(count_, other->count_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCartRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCartRep

// int32 count = 1;
void ListCartRep::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 ListCartRep::count() const {
  // @@protoc_insertion_point(field_get:ttmall.ListCartRep.count)
  return count_;
}
void ListCartRep::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListCartRep.count)
}

// repeated .ttmall.CartGoodsInfo items = 2;
int ListCartRep::items_size() const {
  return items_.size();
}
void ListCartRep::clear_items() {
  items_.Clear();
}
const ::ttmall::CartGoodsInfo& ListCartRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListCartRep.items)
  return items_.Get(index);
}
::ttmall::CartGoodsInfo* ListCartRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListCartRep.items)
  return items_.Mutable(index);
}
::ttmall::CartGoodsInfo* ListCartRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListCartRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >*
ListCartRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListCartRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >&
ListCartRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListCartRep.items)
  return items_;
}

// repeated .ttmall.CartGoodsInfo disables = 3;
int ListCartRep::disables_size() const {
  return disables_.size();
}
void ListCartRep::clear_disables() {
  disables_.Clear();
}
const ::ttmall::CartGoodsInfo& ListCartRep::disables(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListCartRep.disables)
  return disables_.Get(index);
}
::ttmall::CartGoodsInfo* ListCartRep::mutable_disables(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListCartRep.disables)
  return disables_.Mutable(index);
}
::ttmall::CartGoodsInfo* ListCartRep::add_disables() {
  // @@protoc_insertion_point(field_add:ttmall.ListCartRep.disables)
  return disables_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >*
ListCartRep::mutable_disables() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListCartRep.disables)
  return &disables_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >&
ListCartRep::disables() const {
  // @@protoc_insertion_point(field_list:ttmall.ListCartRep.disables)
  return disables_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAddressReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAddressReq::ListAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListAddressReq)
}
ListAddressReq::ListAddressReq(const ListAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListAddressReq)
}

void ListAddressReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListAddressReq::~ListAddressReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListAddressReq)
  SharedDtor();
}

void ListAddressReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListAddressReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAddressReq& ListAddressReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListAddressReq* ListAddressReq::New(::google::protobuf::Arena* arena) const {
  ListAddressReq* n = new ListAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListAddressReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListAddressReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListAddressReq)
  return false;
#undef DO_
}

void ListAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAddressReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListAddressReq)
}

::google::protobuf::uint8* ListAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListAddressReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListAddressReq)
  return target;
}

size_t ListAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListAddressReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListAddressReq)
    MergeFrom(*source);
  }
}

void ListAddressReq::MergeFrom(const ListAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAddressReq::CopyFrom(const ListAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAddressReq::IsInitialized() const {
  return true;
}

void ListAddressReq::Swap(ListAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAddressReq::InternalSwap(ListAddressReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListAddressReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListAddressReq

// string token = 1;
void ListAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAddressReq.token)
  return token_.GetNoArena();
}
void ListAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAddressReq.token)
}
#if LANG_CXX11
void ListAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAddressReq.token)
}
#endif
void ListAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAddressReq.token)
}
void ListAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAddressReq.token)
}
::std::string* ListAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAddressReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAddressRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAddressRep::ListAddressRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListAddressRep)
}
ListAddressRep::ListAddressRep(const ListAddressRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListAddressRep)
}

void ListAddressRep::SharedCtor() {
  _cached_size_ = 0;
}

ListAddressRep::~ListAddressRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListAddressRep)
  SharedDtor();
}

void ListAddressRep::SharedDtor() {
}

void ListAddressRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListAddressRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAddressRep& ListAddressRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListAddressRep* ListAddressRep::New(::google::protobuf::Arena* arena) const {
  ListAddressRep* n = new ListAddressRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListAddressRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListAddressRep)
  items_.Clear();
}

bool ListAddressRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListAddressRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.AddressInfo Items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListAddressRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListAddressRep)
  return false;
#undef DO_
}

void ListAddressRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.AddressInfo Items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListAddressRep)
}

::google::protobuf::uint8* ListAddressRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.AddressInfo Items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListAddressRep)
  return target;
}

size_t ListAddressRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListAddressRep)
  size_t total_size = 0;

  // repeated .ttmall.AddressInfo Items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListAddressRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAddressRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAddressRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListAddressRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListAddressRep)
    MergeFrom(*source);
  }
}

void ListAddressRep::MergeFrom(const ListAddressRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListAddressRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAddressRep::CopyFrom(const ListAddressRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAddressRep::IsInitialized() const {
  return true;
}

void ListAddressRep::Swap(ListAddressRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAddressRep::InternalSwap(ListAddressRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListAddressRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListAddressRep

// repeated .ttmall.AddressInfo Items = 1;
int ListAddressRep::items_size() const {
  return items_.size();
}
void ListAddressRep::clear_items() {
  items_.Clear();
}
const ::ttmall::AddressInfo& ListAddressRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListAddressRep.Items)
  return items_.Get(index);
}
::ttmall::AddressInfo* ListAddressRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListAddressRep.Items)
  return items_.Mutable(index);
}
::ttmall::AddressInfo* ListAddressRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListAddressRep.Items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
ListAddressRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListAddressRep.Items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
ListAddressRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListAddressRep.Items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCouponReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCouponReq::ListCouponReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListCouponReq)
}
ListCouponReq::ListCouponReq(const ListCouponReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.ListCouponReq)
}

void ListCouponReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListCouponReq::~ListCouponReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListCouponReq)
  SharedDtor();
}

void ListCouponReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCouponReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCouponReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCouponReq& ListCouponReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCouponReq* ListCouponReq::New(::google::protobuf::Arena* arena) const {
  ListCouponReq* n = new ListCouponReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCouponReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListCouponReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListCouponReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListCouponReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListCouponReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListCouponReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListCouponReq)
  return false;
#undef DO_
}

void ListCouponReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListCouponReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListCouponReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListCouponReq)
}

::google::protobuf::uint8* ListCouponReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListCouponReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListCouponReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListCouponReq)
  return target;
}

size_t ListCouponReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListCouponReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCouponReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListCouponReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCouponReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCouponReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListCouponReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListCouponReq)
    MergeFrom(*source);
  }
}

void ListCouponReq::MergeFrom(const ListCouponReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListCouponReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ListCouponReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListCouponReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCouponReq::CopyFrom(const ListCouponReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListCouponReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCouponReq::IsInitialized() const {
  return true;
}

void ListCouponReq::Swap(ListCouponReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCouponReq::InternalSwap(ListCouponReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCouponReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCouponReq

// string token = 1;
void ListCouponReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListCouponReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListCouponReq.token)
  return token_.GetNoArena();
}
void ListCouponReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListCouponReq.token)
}
#if LANG_CXX11
void ListCouponReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListCouponReq.token)
}
#endif
void ListCouponReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListCouponReq.token)
}
void ListCouponReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListCouponReq.token)
}
::std::string* ListCouponReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListCouponReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListCouponReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListCouponReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListCouponReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListCouponReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCouponRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCouponRep::ListCouponRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListCouponRep)
}
ListCouponRep::ListCouponRep(const ListCouponRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListCouponRep)
}

void ListCouponRep::SharedCtor() {
  _cached_size_ = 0;
}

ListCouponRep::~ListCouponRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListCouponRep)
  SharedDtor();
}

void ListCouponRep::SharedDtor() {
}

void ListCouponRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListCouponRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCouponRep& ListCouponRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListCouponRep* ListCouponRep::New(::google::protobuf::Arena* arena) const {
  ListCouponRep* n = new ListCouponRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListCouponRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListCouponRep)
  items_.Clear();
}

bool ListCouponRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListCouponRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.CouponInfo Items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListCouponRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListCouponRep)
  return false;
#undef DO_
}

void ListCouponRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListCouponRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.CouponInfo Items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListCouponRep)
}

::google::protobuf::uint8* ListCouponRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListCouponRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.CouponInfo Items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListCouponRep)
  return target;
}

size_t ListCouponRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListCouponRep)
  size_t total_size = 0;

  // repeated .ttmall.CouponInfo Items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListCouponRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListCouponRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCouponRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCouponRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListCouponRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListCouponRep)
    MergeFrom(*source);
  }
}

void ListCouponRep::MergeFrom(const ListCouponRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListCouponRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListCouponRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListCouponRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCouponRep::CopyFrom(const ListCouponRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListCouponRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCouponRep::IsInitialized() const {
  return true;
}

void ListCouponRep::Swap(ListCouponRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListCouponRep::InternalSwap(ListCouponRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListCouponRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListCouponRep

// repeated .ttmall.CouponInfo Items = 1;
int ListCouponRep::items_size() const {
  return items_.size();
}
void ListCouponRep::clear_items() {
  items_.Clear();
}
const ::ttmall::CouponInfo& ListCouponRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListCouponRep.Items)
  return items_.Get(index);
}
::ttmall::CouponInfo* ListCouponRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListCouponRep.Items)
  return items_.Mutable(index);
}
::ttmall::CouponInfo* ListCouponRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListCouponRep.Items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >*
ListCouponRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListCouponRep.Items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >&
ListCouponRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListCouponRep.Items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddGoodsFavReq::kTokenFieldNumber;
const int AddGoodsFavReq::kGoodsIdFieldNumber;
const int AddGoodsFavReq::kKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGoodsFavReq::AddGoodsFavReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AddGoodsFavReq)
}
AddGoodsFavReq::AddGoodsFavReq(const AddGoodsFavReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  goods_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.goods_id().size() > 0) {
    goods_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goods_id_);
  }
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.AddGoodsFavReq)
}

void AddGoodsFavReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddGoodsFavReq::~AddGoodsFavReq() {
  // @@protoc_insertion_point(destructor:ttmall.AddGoodsFavReq)
  SharedDtor();
}

void AddGoodsFavReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddGoodsFavReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddGoodsFavReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddGoodsFavReq& AddGoodsFavReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddGoodsFavReq* AddGoodsFavReq::New(::google::protobuf::Arena* arena) const {
  AddGoodsFavReq* n = new AddGoodsFavReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddGoodsFavReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AddGoodsFavReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddGoodsFavReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AddGoodsFavReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddGoodsFavReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string goods_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goods_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->goods_id().data(), this->goods_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddGoodsFavReq.goods_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), this->key_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddGoodsFavReq.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AddGoodsFavReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AddGoodsFavReq)
  return false;
#undef DO_
}

void AddGoodsFavReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AddGoodsFavReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddGoodsFavReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddGoodsFavReq.goods_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->goods_id(), output);
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddGoodsFavReq.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AddGoodsFavReq)
}

::google::protobuf::uint8* AddGoodsFavReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AddGoodsFavReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddGoodsFavReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddGoodsFavReq.goods_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->goods_id(), target);
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddGoodsFavReq.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AddGoodsFavReq)
  return target;
}

size_t AddGoodsFavReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AddGoodsFavReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->goods_id());
  }

  // string key_id = 3;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddGoodsFavReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AddGoodsFavReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGoodsFavReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddGoodsFavReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AddGoodsFavReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AddGoodsFavReq)
    MergeFrom(*source);
  }
}

void AddGoodsFavReq::MergeFrom(const AddGoodsFavReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AddGoodsFavReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.goods_id().size() > 0) {

    goods_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goods_id_);
  }
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
}

void AddGoodsFavReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AddGoodsFavReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGoodsFavReq::CopyFrom(const AddGoodsFavReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AddGoodsFavReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGoodsFavReq::IsInitialized() const {
  return true;
}

void AddGoodsFavReq::Swap(AddGoodsFavReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGoodsFavReq::InternalSwap(AddGoodsFavReq* other) {
  token_.Swap(&other->token_);
  goods_id_.Swap(&other->goods_id_);
  key_id_.Swap(&other->key_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddGoodsFavReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddGoodsFavReq

// string token = 1;
void AddGoodsFavReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddGoodsFavReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.AddGoodsFavReq.token)
  return token_.GetNoArena();
}
void AddGoodsFavReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddGoodsFavReq.token)
}
#if LANG_CXX11
void AddGoodsFavReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddGoodsFavReq.token)
}
#endif
void AddGoodsFavReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddGoodsFavReq.token)
}
void AddGoodsFavReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddGoodsFavReq.token)
}
::std::string* AddGoodsFavReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddGoodsFavReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddGoodsFavReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.AddGoodsFavReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddGoodsFavReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddGoodsFavReq.token)
}

// string goods_id = 2;
void AddGoodsFavReq::clear_goods_id() {
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddGoodsFavReq::goods_id() const {
  // @@protoc_insertion_point(field_get:ttmall.AddGoodsFavReq.goods_id)
  return goods_id_.GetNoArena();
}
void AddGoodsFavReq::set_goods_id(const ::std::string& value) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddGoodsFavReq.goods_id)
}
#if LANG_CXX11
void AddGoodsFavReq::set_goods_id(::std::string&& value) {
  
  goods_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddGoodsFavReq.goods_id)
}
#endif
void AddGoodsFavReq::set_goods_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddGoodsFavReq.goods_id)
}
void AddGoodsFavReq::set_goods_id(const char* value, size_t size) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddGoodsFavReq.goods_id)
}
::std::string* AddGoodsFavReq::mutable_goods_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddGoodsFavReq.goods_id)
  return goods_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddGoodsFavReq::release_goods_id() {
  // @@protoc_insertion_point(field_release:ttmall.AddGoodsFavReq.goods_id)
  
  return goods_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddGoodsFavReq::set_allocated_goods_id(::std::string* goods_id) {
  if (goods_id != NULL) {
    
  } else {
    
  }
  goods_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goods_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddGoodsFavReq.goods_id)
}

// string key_id = 3;
void AddGoodsFavReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddGoodsFavReq::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.AddGoodsFavReq.key_id)
  return key_id_.GetNoArena();
}
void AddGoodsFavReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddGoodsFavReq.key_id)
}
#if LANG_CXX11
void AddGoodsFavReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddGoodsFavReq.key_id)
}
#endif
void AddGoodsFavReq::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddGoodsFavReq.key_id)
}
void AddGoodsFavReq::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddGoodsFavReq.key_id)
}
::std::string* AddGoodsFavReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddGoodsFavReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddGoodsFavReq::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.AddGoodsFavReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddGoodsFavReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddGoodsFavReq.key_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddGoodsFavRep::kFavCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGoodsFavRep::AddGoodsFavRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AddGoodsFavRep)
}
AddGoodsFavRep::AddGoodsFavRep(const AddGoodsFavRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fav_count_ = from.fav_count_;
  // @@protoc_insertion_point(copy_constructor:ttmall.AddGoodsFavRep)
}

void AddGoodsFavRep::SharedCtor() {
  fav_count_ = 0;
  _cached_size_ = 0;
}

AddGoodsFavRep::~AddGoodsFavRep() {
  // @@protoc_insertion_point(destructor:ttmall.AddGoodsFavRep)
  SharedDtor();
}

void AddGoodsFavRep::SharedDtor() {
}

void AddGoodsFavRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddGoodsFavRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddGoodsFavRep& AddGoodsFavRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddGoodsFavRep* AddGoodsFavRep::New(::google::protobuf::Arena* arena) const {
  AddGoodsFavRep* n = new AddGoodsFavRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddGoodsFavRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AddGoodsFavRep)
  fav_count_ = 0;
}

bool AddGoodsFavRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AddGoodsFavRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 fav_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fav_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AddGoodsFavRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AddGoodsFavRep)
  return false;
#undef DO_
}

void AddGoodsFavRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AddGoodsFavRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fav_count = 1;
  if (this->fav_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fav_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AddGoodsFavRep)
}

::google::protobuf::uint8* AddGoodsFavRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AddGoodsFavRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fav_count = 1;
  if (this->fav_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fav_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AddGoodsFavRep)
  return target;
}

size_t AddGoodsFavRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AddGoodsFavRep)
  size_t total_size = 0;

  // int32 fav_count = 1;
  if (this->fav_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fav_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddGoodsFavRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AddGoodsFavRep)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGoodsFavRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddGoodsFavRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AddGoodsFavRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AddGoodsFavRep)
    MergeFrom(*source);
  }
}

void AddGoodsFavRep::MergeFrom(const AddGoodsFavRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AddGoodsFavRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fav_count() != 0) {
    set_fav_count(from.fav_count());
  }
}

void AddGoodsFavRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AddGoodsFavRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGoodsFavRep::CopyFrom(const AddGoodsFavRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AddGoodsFavRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGoodsFavRep::IsInitialized() const {
  return true;
}

void AddGoodsFavRep::Swap(AddGoodsFavRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGoodsFavRep::InternalSwap(AddGoodsFavRep* other) {
  std::swap(fav_count_, other->fav_count_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddGoodsFavRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddGoodsFavRep

// int32 fav_count = 1;
void AddGoodsFavRep::clear_fav_count() {
  fav_count_ = 0;
}
::google::protobuf::int32 AddGoodsFavRep::fav_count() const {
  // @@protoc_insertion_point(field_get:ttmall.AddGoodsFavRep.fav_count)
  return fav_count_;
}
void AddGoodsFavRep::set_fav_count(::google::protobuf::int32 value) {
  
  fav_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.AddGoodsFavRep.fav_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelGoodsFavReq::kTokenFieldNumber;
const int DelGoodsFavReq::kGoodsIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelGoodsFavReq::DelGoodsFavReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DelGoodsFavReq)
}
DelGoodsFavReq::DelGoodsFavReq(const DelGoodsFavReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  goods_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.goods_id().size() > 0) {
    goods_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goods_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DelGoodsFavReq)
}

void DelGoodsFavReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelGoodsFavReq::~DelGoodsFavReq() {
  // @@protoc_insertion_point(destructor:ttmall.DelGoodsFavReq)
  SharedDtor();
}

void DelGoodsFavReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelGoodsFavReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelGoodsFavReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelGoodsFavReq& DelGoodsFavReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelGoodsFavReq* DelGoodsFavReq::New(::google::protobuf::Arena* arena) const {
  DelGoodsFavReq* n = new DelGoodsFavReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelGoodsFavReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DelGoodsFavReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelGoodsFavReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DelGoodsFavReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DelGoodsFavReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string goods_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goods_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->goods_id().data(), this->goods_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DelGoodsFavReq.goods_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DelGoodsFavReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DelGoodsFavReq)
  return false;
#undef DO_
}

void DelGoodsFavReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DelGoodsFavReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelGoodsFavReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelGoodsFavReq.goods_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->goods_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DelGoodsFavReq)
}

::google::protobuf::uint8* DelGoodsFavReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DelGoodsFavReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelGoodsFavReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goods_id().data(), this->goods_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelGoodsFavReq.goods_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->goods_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DelGoodsFavReq)
  return target;
}

size_t DelGoodsFavReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DelGoodsFavReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string goods_id = 2;
  if (this->goods_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->goods_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelGoodsFavReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DelGoodsFavReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DelGoodsFavReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelGoodsFavReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DelGoodsFavReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DelGoodsFavReq)
    MergeFrom(*source);
  }
}

void DelGoodsFavReq::MergeFrom(const DelGoodsFavReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DelGoodsFavReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.goods_id().size() > 0) {

    goods_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goods_id_);
  }
}

void DelGoodsFavReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DelGoodsFavReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelGoodsFavReq::CopyFrom(const DelGoodsFavReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DelGoodsFavReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelGoodsFavReq::IsInitialized() const {
  return true;
}

void DelGoodsFavReq::Swap(DelGoodsFavReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelGoodsFavReq::InternalSwap(DelGoodsFavReq* other) {
  token_.Swap(&other->token_);
  goods_id_.Swap(&other->goods_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelGoodsFavReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelGoodsFavReq

// string token = 1;
void DelGoodsFavReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelGoodsFavReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DelGoodsFavReq.token)
  return token_.GetNoArena();
}
void DelGoodsFavReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelGoodsFavReq.token)
}
#if LANG_CXX11
void DelGoodsFavReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelGoodsFavReq.token)
}
#endif
void DelGoodsFavReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelGoodsFavReq.token)
}
void DelGoodsFavReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelGoodsFavReq.token)
}
::std::string* DelGoodsFavReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelGoodsFavReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelGoodsFavReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DelGoodsFavReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelGoodsFavReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelGoodsFavReq.token)
}

// string goods_id = 2;
void DelGoodsFavReq::clear_goods_id() {
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelGoodsFavReq::goods_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DelGoodsFavReq.goods_id)
  return goods_id_.GetNoArena();
}
void DelGoodsFavReq::set_goods_id(const ::std::string& value) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelGoodsFavReq.goods_id)
}
#if LANG_CXX11
void DelGoodsFavReq::set_goods_id(::std::string&& value) {
  
  goods_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelGoodsFavReq.goods_id)
}
#endif
void DelGoodsFavReq::set_goods_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelGoodsFavReq.goods_id)
}
void DelGoodsFavReq::set_goods_id(const char* value, size_t size) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelGoodsFavReq.goods_id)
}
::std::string* DelGoodsFavReq::mutable_goods_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelGoodsFavReq.goods_id)
  return goods_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelGoodsFavReq::release_goods_id() {
  // @@protoc_insertion_point(field_release:ttmall.DelGoodsFavReq.goods_id)
  
  return goods_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelGoodsFavReq::set_allocated_goods_id(::std::string* goods_id) {
  if (goods_id != NULL) {
    
  } else {
    
  }
  goods_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goods_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelGoodsFavReq.goods_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelGoodsFavRep::kFavCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelGoodsFavRep::DelGoodsFavRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DelGoodsFavRep)
}
DelGoodsFavRep::DelGoodsFavRep(const DelGoodsFavRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fav_count_ = from.fav_count_;
  // @@protoc_insertion_point(copy_constructor:ttmall.DelGoodsFavRep)
}

void DelGoodsFavRep::SharedCtor() {
  fav_count_ = 0;
  _cached_size_ = 0;
}

DelGoodsFavRep::~DelGoodsFavRep() {
  // @@protoc_insertion_point(destructor:ttmall.DelGoodsFavRep)
  SharedDtor();
}

void DelGoodsFavRep::SharedDtor() {
}

void DelGoodsFavRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelGoodsFavRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelGoodsFavRep& DelGoodsFavRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelGoodsFavRep* DelGoodsFavRep::New(::google::protobuf::Arena* arena) const {
  DelGoodsFavRep* n = new DelGoodsFavRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelGoodsFavRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DelGoodsFavRep)
  fav_count_ = 0;
}

bool DelGoodsFavRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DelGoodsFavRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 fav_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fav_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DelGoodsFavRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DelGoodsFavRep)
  return false;
#undef DO_
}

void DelGoodsFavRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DelGoodsFavRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fav_count = 1;
  if (this->fav_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fav_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DelGoodsFavRep)
}

::google::protobuf::uint8* DelGoodsFavRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DelGoodsFavRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fav_count = 1;
  if (this->fav_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fav_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DelGoodsFavRep)
  return target;
}

size_t DelGoodsFavRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DelGoodsFavRep)
  size_t total_size = 0;

  // int32 fav_count = 1;
  if (this->fav_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fav_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelGoodsFavRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DelGoodsFavRep)
  GOOGLE_DCHECK_NE(&from, this);
  const DelGoodsFavRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelGoodsFavRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DelGoodsFavRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DelGoodsFavRep)
    MergeFrom(*source);
  }
}

void DelGoodsFavRep::MergeFrom(const DelGoodsFavRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DelGoodsFavRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fav_count() != 0) {
    set_fav_count(from.fav_count());
  }
}

void DelGoodsFavRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DelGoodsFavRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelGoodsFavRep::CopyFrom(const DelGoodsFavRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DelGoodsFavRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelGoodsFavRep::IsInitialized() const {
  return true;
}

void DelGoodsFavRep::Swap(DelGoodsFavRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelGoodsFavRep::InternalSwap(DelGoodsFavRep* other) {
  std::swap(fav_count_, other->fav_count_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelGoodsFavRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelGoodsFavRep

// int32 fav_count = 1;
void DelGoodsFavRep::clear_fav_count() {
  fav_count_ = 0;
}
::google::protobuf::int32 DelGoodsFavRep::fav_count() const {
  // @@protoc_insertion_point(field_get:ttmall.DelGoodsFavRep.fav_count)
  return fav_count_;
}
void DelGoodsFavRep::set_fav_count(::google::protobuf::int32 value) {
  
  fav_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.DelGoodsFavRep.fav_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGoodsFavReq::kTokenFieldNumber;
const int ListGoodsFavReq::kSkipFieldNumber;
const int ListGoodsFavReq::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGoodsFavReq::ListGoodsFavReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListGoodsFavReq)
}
ListGoodsFavReq::ListGoodsFavReq(const ListGoodsFavReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&skip_, &from.skip_,
    reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:ttmall.ListGoodsFavReq)
}

void ListGoodsFavReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
  _cached_size_ = 0;
}

ListGoodsFavReq::~ListGoodsFavReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListGoodsFavReq)
  SharedDtor();
}

void ListGoodsFavReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListGoodsFavReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGoodsFavReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListGoodsFavReq& ListGoodsFavReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListGoodsFavReq* ListGoodsFavReq::New(::google::protobuf::Arena* arena) const {
  ListGoodsFavReq* n = new ListGoodsFavReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGoodsFavReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListGoodsFavReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skip_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&skip_) + sizeof(limit_));
}

bool ListGoodsFavReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListGoodsFavReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListGoodsFavReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListGoodsFavReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListGoodsFavReq)
  return false;
#undef DO_
}

void ListGoodsFavReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListGoodsFavReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListGoodsFavReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skip(), output);
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->limit(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListGoodsFavReq)
}

::google::protobuf::uint8* ListGoodsFavReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListGoodsFavReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListGoodsFavReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skip(), target);
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->limit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListGoodsFavReq)
  return target;
}

size_t ListGoodsFavReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListGoodsFavReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // int32 skip = 2;
  if (this->skip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skip());
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGoodsFavReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListGoodsFavReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListGoodsFavReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGoodsFavReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListGoodsFavReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListGoodsFavReq)
    MergeFrom(*source);
  }
}

void ListGoodsFavReq::MergeFrom(const ListGoodsFavReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListGoodsFavReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.skip() != 0) {
    set_skip(from.skip());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void ListGoodsFavReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListGoodsFavReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGoodsFavReq::CopyFrom(const ListGoodsFavReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListGoodsFavReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListGoodsFavReq::IsInitialized() const {
  return true;
}

void ListGoodsFavReq::Swap(ListGoodsFavReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGoodsFavReq::InternalSwap(ListGoodsFavReq* other) {
  token_.Swap(&other->token_);
  std::swap(skip_, other->skip_);
  std::swap(limit_, other->limit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGoodsFavReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGoodsFavReq

// string token = 1;
void ListGoodsFavReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListGoodsFavReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsFavReq.token)
  return token_.GetNoArena();
}
void ListGoodsFavReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsFavReq.token)
}
#if LANG_CXX11
void ListGoodsFavReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListGoodsFavReq.token)
}
#endif
void ListGoodsFavReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListGoodsFavReq.token)
}
void ListGoodsFavReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListGoodsFavReq.token)
}
::std::string* ListGoodsFavReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsFavReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListGoodsFavReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListGoodsFavReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListGoodsFavReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListGoodsFavReq.token)
}

// int32 skip = 2;
void ListGoodsFavReq::clear_skip() {
  skip_ = 0;
}
::google::protobuf::int32 ListGoodsFavReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsFavReq.skip)
  return skip_;
}
void ListGoodsFavReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsFavReq.skip)
}

// int32 limit = 3;
void ListGoodsFavReq::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 ListGoodsFavReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsFavReq.limit)
  return limit_;
}
void ListGoodsFavReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsFavReq.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserFavInfo::kKeyIdFieldNumber;
const int UserFavInfo::kInfoFieldNumber;
const int UserFavInfo::kDisabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserFavInfo::UserFavInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UserFavInfo)
}
UserFavInfo::UserFavInfo(const UserFavInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_info()) {
    info_ = new ::ttmall::GoodsInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  disabled_ = from.disabled_;
  // @@protoc_insertion_point(copy_constructor:ttmall.UserFavInfo)
}

void UserFavInfo::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, reinterpret_cast<char*>(&disabled_) -
    reinterpret_cast<char*>(&info_) + sizeof(disabled_));
  _cached_size_ = 0;
}

UserFavInfo::~UserFavInfo() {
  // @@protoc_insertion_point(destructor:ttmall.UserFavInfo)
  SharedDtor();
}

void UserFavInfo::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void UserFavInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserFavInfo::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserFavInfo& UserFavInfo::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserFavInfo* UserFavInfo::New(::google::protobuf::Arena* arena) const {
  UserFavInfo* n = new UserFavInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserFavInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UserFavInfo)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  disabled_ = false;
}

bool UserFavInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UserFavInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_id().data(), this->key_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserFavInfo.key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.GoodsInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disabled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UserFavInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UserFavInfo)
  return false;
#undef DO_
}

void UserFavInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UserFavInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserFavInfo.key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key_id(), output);
  }

  // .ttmall.GoodsInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // bool disabled = 3;
  if (this->disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->disabled(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UserFavInfo)
}

::google::protobuf::uint8* UserFavInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UserFavInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_id().data(), this->key_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserFavInfo.key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key_id(), target);
  }

  // .ttmall.GoodsInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  // bool disabled = 3;
  if (this->disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->disabled(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UserFavInfo)
  return target;
}

size_t UserFavInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UserFavInfo)
  size_t total_size = 0;

  // string key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_id());
  }

  // .ttmall.GoodsInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // bool disabled = 3;
  if (this->disabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserFavInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UserFavInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserFavInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserFavInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UserFavInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UserFavInfo)
    MergeFrom(*source);
  }
}

void UserFavInfo::MergeFrom(const UserFavInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UserFavInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_info()) {
    mutable_info()->::ttmall::GoodsInfo::MergeFrom(from.info());
  }
  if (from.disabled() != 0) {
    set_disabled(from.disabled());
  }
}

void UserFavInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UserFavInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserFavInfo::CopyFrom(const UserFavInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UserFavInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserFavInfo::IsInitialized() const {
  return true;
}

void UserFavInfo::Swap(UserFavInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserFavInfo::InternalSwap(UserFavInfo* other) {
  key_id_.Swap(&other->key_id_);
  std::swap(info_, other->info_);
  std::swap(disabled_, other->disabled_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserFavInfo::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserFavInfo

// string key_id = 1;
void UserFavInfo::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserFavInfo::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.UserFavInfo.key_id)
  return key_id_.GetNoArena();
}
void UserFavInfo::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserFavInfo.key_id)
}
#if LANG_CXX11
void UserFavInfo::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserFavInfo.key_id)
}
#endif
void UserFavInfo::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserFavInfo.key_id)
}
void UserFavInfo::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserFavInfo.key_id)
}
::std::string* UserFavInfo::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserFavInfo.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserFavInfo::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.UserFavInfo.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserFavInfo::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserFavInfo.key_id)
}

// .ttmall.GoodsInfo info = 2;
bool UserFavInfo::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void UserFavInfo::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::GoodsInfo& UserFavInfo::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UserFavInfo.info)
  return info_ != NULL ? *info_
                         : *::ttmall::GoodsInfo::internal_default_instance();
}
::ttmall::GoodsInfo* UserFavInfo::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::GoodsInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UserFavInfo.info)
  return info_;
}
::ttmall::GoodsInfo* UserFavInfo::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UserFavInfo.info)
  
  ::ttmall::GoodsInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void UserFavInfo::set_allocated_info(::ttmall::GoodsInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserFavInfo.info)
}

// bool disabled = 3;
void UserFavInfo::clear_disabled() {
  disabled_ = false;
}
bool UserFavInfo::disabled() const {
  // @@protoc_insertion_point(field_get:ttmall.UserFavInfo.disabled)
  return disabled_;
}
void UserFavInfo::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserFavInfo.disabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListGoodsFavRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListGoodsFavRep::ListGoodsFavRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListGoodsFavRep)
}
ListGoodsFavRep::ListGoodsFavRep(const ListGoodsFavRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListGoodsFavRep)
}

void ListGoodsFavRep::SharedCtor() {
  _cached_size_ = 0;
}

ListGoodsFavRep::~ListGoodsFavRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListGoodsFavRep)
  SharedDtor();
}

void ListGoodsFavRep::SharedDtor() {
}

void ListGoodsFavRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListGoodsFavRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListGoodsFavRep& ListGoodsFavRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListGoodsFavRep* ListGoodsFavRep::New(::google::protobuf::Arena* arena) const {
  ListGoodsFavRep* n = new ListGoodsFavRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListGoodsFavRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListGoodsFavRep)
  items_.Clear();
}

bool ListGoodsFavRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListGoodsFavRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.UserFavInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListGoodsFavRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListGoodsFavRep)
  return false;
#undef DO_
}

void ListGoodsFavRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListGoodsFavRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.UserFavInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListGoodsFavRep)
}

::google::protobuf::uint8* ListGoodsFavRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListGoodsFavRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.UserFavInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListGoodsFavRep)
  return target;
}

size_t ListGoodsFavRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListGoodsFavRep)
  size_t total_size = 0;

  // repeated .ttmall.UserFavInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListGoodsFavRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListGoodsFavRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListGoodsFavRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListGoodsFavRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListGoodsFavRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListGoodsFavRep)
    MergeFrom(*source);
  }
}

void ListGoodsFavRep::MergeFrom(const ListGoodsFavRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListGoodsFavRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListGoodsFavRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListGoodsFavRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListGoodsFavRep::CopyFrom(const ListGoodsFavRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListGoodsFavRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListGoodsFavRep::IsInitialized() const {
  return true;
}

void ListGoodsFavRep::Swap(ListGoodsFavRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListGoodsFavRep::InternalSwap(ListGoodsFavRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListGoodsFavRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListGoodsFavRep

// repeated .ttmall.UserFavInfo items = 1;
int ListGoodsFavRep::items_size() const {
  return items_.size();
}
void ListGoodsFavRep::clear_items() {
  items_.Clear();
}
const ::ttmall::UserFavInfo& ListGoodsFavRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsFavRep.items)
  return items_.Get(index);
}
::ttmall::UserFavInfo* ListGoodsFavRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsFavRep.items)
  return items_.Mutable(index);
}
::ttmall::UserFavInfo* ListGoodsFavRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListGoodsFavRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::UserFavInfo >*
ListGoodsFavRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListGoodsFavRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::UserFavInfo >&
ListGoodsFavRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListGoodsFavRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUserOrderReq::kTokenFieldNumber;
const int ListUserOrderReq::kOptFieldNumber;
const int ListUserOrderReq::kSkipFieldNumber;
const int ListUserOrderReq::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUserOrderReq::ListUserOrderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListUserOrderReq)
}
ListUserOrderReq::ListUserOrderReq(const ListUserOrderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&opt_, &from.opt_,
    reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&opt_) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:ttmall.ListUserOrderReq)
}

void ListUserOrderReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&opt_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&opt_) + sizeof(limit_));
  _cached_size_ = 0;
}

ListUserOrderReq::~ListUserOrderReq() {
  // @@protoc_insertion_point(destructor:ttmall.ListUserOrderReq)
  SharedDtor();
}

void ListUserOrderReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListUserOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListUserOrderReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUserOrderReq& ListUserOrderReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListUserOrderReq* ListUserOrderReq::New(::google::protobuf::Arena* arena) const {
  ListUserOrderReq* n = new ListUserOrderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListUserOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListUserOrderReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&opt_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&opt_) + sizeof(limit_));
}

bool ListUserOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListUserOrderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.ListUserOrderReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.ListOrderOpt opt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_opt(static_cast< ::ttmall::ListOrderOpt >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 skip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListUserOrderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListUserOrderReq)
  return false;
#undef DO_
}

void ListUserOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListUserOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListUserOrderReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // .ttmall.ListOrderOpt opt = 2;
  if (this->opt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->opt(), output);
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skip(), output);
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListUserOrderReq)
}

::google::protobuf::uint8* ListUserOrderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListUserOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.ListUserOrderReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // .ttmall.ListOrderOpt opt = 2;
  if (this->opt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->opt(), target);
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skip(), target);
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListUserOrderReq)
  return target;
}

size_t ListUserOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListUserOrderReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // .ttmall.ListOrderOpt opt = 2;
  if (this->opt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opt());
  }

  // int32 skip = 3;
  if (this->skip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skip());
  }

  // int32 limit = 4;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListUserOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListUserOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUserOrderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUserOrderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListUserOrderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListUserOrderReq)
    MergeFrom(*source);
  }
}

void ListUserOrderReq::MergeFrom(const ListUserOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListUserOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.opt() != 0) {
    set_opt(from.opt());
  }
  if (from.skip() != 0) {
    set_skip(from.skip());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void ListUserOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListUserOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUserOrderReq::CopyFrom(const ListUserOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListUserOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUserOrderReq::IsInitialized() const {
  return true;
}

void ListUserOrderReq::Swap(ListUserOrderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUserOrderReq::InternalSwap(ListUserOrderReq* other) {
  token_.Swap(&other->token_);
  std::swap(opt_, other->opt_);
  std::swap(skip_, other->skip_);
  std::swap(limit_, other->limit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListUserOrderReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListUserOrderReq

// string token = 1;
void ListUserOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListUserOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderReq.token)
  return token_.GetNoArena();
}
void ListUserOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListUserOrderReq.token)
}
#if LANG_CXX11
void ListUserOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListUserOrderReq.token)
}
#endif
void ListUserOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListUserOrderReq.token)
}
void ListUserOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListUserOrderReq.token)
}
::std::string* ListUserOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListUserOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListUserOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListUserOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListUserOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListUserOrderReq.token)
}

// .ttmall.ListOrderOpt opt = 2;
void ListUserOrderReq::clear_opt() {
  opt_ = 0;
}
::ttmall::ListOrderOpt ListUserOrderReq::opt() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderReq.opt)
  return static_cast< ::ttmall::ListOrderOpt >(opt_);
}
void ListUserOrderReq::set_opt(::ttmall::ListOrderOpt value) {
  
  opt_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListUserOrderReq.opt)
}

// int32 skip = 3;
void ListUserOrderReq::clear_skip() {
  skip_ = 0;
}
::google::protobuf::int32 ListUserOrderReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderReq.skip)
  return skip_;
}
void ListUserOrderReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListUserOrderReq.skip)
}

// int32 limit = 4;
void ListUserOrderReq::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 ListUserOrderReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderReq.limit)
  return limit_;
}
void ListUserOrderReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListUserOrderReq.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUserOrderRep::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUserOrderRep::ListUserOrderRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.ListUserOrderRep)
}
ListUserOrderRep::ListUserOrderRep(const ListUserOrderRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.ListUserOrderRep)
}

void ListUserOrderRep::SharedCtor() {
  _cached_size_ = 0;
}

ListUserOrderRep::~ListUserOrderRep() {
  // @@protoc_insertion_point(destructor:ttmall.ListUserOrderRep)
  SharedDtor();
}

void ListUserOrderRep::SharedDtor() {
}

void ListUserOrderRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListUserOrderRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUserOrderRep& ListUserOrderRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListUserOrderRep* ListUserOrderRep::New(::google::protobuf::Arena* arena) const {
  ListUserOrderRep* n = new ListUserOrderRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListUserOrderRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.ListUserOrderRep)
  items_.Clear();
}

bool ListUserOrderRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.ListUserOrderRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.OrderInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.ListUserOrderRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.ListUserOrderRep)
  return false;
#undef DO_
}

void ListUserOrderRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.ListUserOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.OrderInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.ListUserOrderRep)
}

::google::protobuf::uint8* ListUserOrderRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.ListUserOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.OrderInfo items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.ListUserOrderRep)
  return target;
}

size_t ListUserOrderRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.ListUserOrderRep)
  size_t total_size = 0;

  // repeated .ttmall.OrderInfo items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListUserOrderRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.ListUserOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUserOrderRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUserOrderRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.ListUserOrderRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.ListUserOrderRep)
    MergeFrom(*source);
  }
}

void ListUserOrderRep::MergeFrom(const ListUserOrderRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.ListUserOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListUserOrderRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.ListUserOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUserOrderRep::CopyFrom(const ListUserOrderRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.ListUserOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUserOrderRep::IsInitialized() const {
  return true;
}

void ListUserOrderRep::Swap(ListUserOrderRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUserOrderRep::InternalSwap(ListUserOrderRep* other) {
  items_.InternalSwap(&other->items_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListUserOrderRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListUserOrderRep

// repeated .ttmall.OrderInfo items = 1;
int ListUserOrderRep::items_size() const {
  return items_.size();
}
void ListUserOrderRep::clear_items() {
  items_.Clear();
}
const ::ttmall::OrderInfo& ListUserOrderRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderRep.items)
  return items_.Get(index);
}
::ttmall::OrderInfo* ListUserOrderRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListUserOrderRep.items)
  return items_.Mutable(index);
}
::ttmall::OrderInfo* ListUserOrderRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListUserOrderRep.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::OrderInfo >*
ListUserOrderRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListUserOrderRep.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderInfo >&
ListUserOrderRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListUserOrderRep.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegisterReq::kTokenFieldNumber;
const int UserRegisterReq::kNameFieldNumber;
const int UserRegisterReq::kOwnerFieldNumber;
const int UserRegisterReq::kTypeFieldNumber;
const int UserRegisterReq::kMobileFieldNumber;
const int UserRegisterReq::kCodeFieldNumber;
const int UserRegisterReq::kPassFieldNumber;
const int UserRegisterReq::kRefereeFieldNumber;
const int UserRegisterReq::kDeliverTimeFieldNumber;
const int UserRegisterReq::kAddressFieldNumber;
const int UserRegisterReq::kMarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegisterReq::UserRegisterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UserRegisterReq)
}
UserRegisterReq::UserRegisterReq(const UserRegisterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner().size() > 0) {
    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pass().size() > 0) {
    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  referee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.referee().size() > 0) {
    referee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referee_);
  }
  deliver_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deliver_time().size() > 0) {
    deliver_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliver_time_);
  }
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mark().size() > 0) {
    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.has_address()) {
    address_ = new ::ttmall::AddressInfo(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UserRegisterReq)
}

void UserRegisterReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = NULL;
  _cached_size_ = 0;
}

UserRegisterReq::~UserRegisterReq() {
  // @@protoc_insertion_point(destructor:ttmall.UserRegisterReq)
  SharedDtor();
}

void UserRegisterReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void UserRegisterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRegisterReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegisterReq& UserRegisterReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserRegisterReq* UserRegisterReq::New(::google::protobuf::Arena* arena) const {
  UserRegisterReq* n = new UserRegisterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRegisterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UserRegisterReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}

bool UserRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UserRegisterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner().data(), this->owner().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pass = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pass().data(), this->pass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.pass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string referee = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_referee()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->referee().data(), this->referee().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.referee"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deliver_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliver_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deliver_time().data(), this->deliver_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.deliver_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.AddressInfo address = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mark = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mark().data(), this->mark().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterReq.mark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UserRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UserRegisterReq)
  return false;
#undef DO_
}

void UserRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UserRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string owner = 3;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->owner(), output);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // string mobile = 5;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mobile(), output);
  }

  // string code = 6;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->code(), output);
  }

  // string pass = 7;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->pass(), output);
  }

  // string referee = 8;
  if (this->referee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referee().data(), this->referee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.referee");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->referee(), output);
  }

  // string deliver_time = 9;
  if (this->deliver_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_time().data(), this->deliver_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.deliver_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->deliver_time(), output);
  }

  // .ttmall.AddressInfo address = 10;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->address_, output);
  }

  // string mark = 11;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.mark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->mark(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UserRegisterReq)
}

::google::protobuf::uint8* UserRegisterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UserRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string owner = 3;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->owner(), target);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // string mobile = 5;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mobile(), target);
  }

  // string code = 6;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->code(), target);
  }

  // string pass = 7;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->pass(), target);
  }

  // string referee = 8;
  if (this->referee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->referee().data(), this->referee().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.referee");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->referee(), target);
  }

  // string deliver_time = 9;
  if (this->deliver_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliver_time().data(), this->deliver_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.deliver_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->deliver_time(), target);
  }

  // .ttmall.AddressInfo address = 10;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->address_, deterministic, target);
  }

  // string mark = 11;
  if (this->mark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mark().data(), this->mark().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterReq.mark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->mark(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UserRegisterReq)
  return target;
}

size_t UserRegisterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UserRegisterReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string owner = 3;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  // string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string mobile = 5;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // string code = 6;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string pass = 7;
  if (this->pass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());
  }

  // string referee = 8;
  if (this->referee().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->referee());
  }

  // string deliver_time = 9;
  if (this->deliver_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deliver_time());
  }

  // string mark = 11;
  if (this->mark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mark());
  }

  // .ttmall.AddressInfo address = 10;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UserRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegisterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegisterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UserRegisterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UserRegisterReq)
    MergeFrom(*source);
  }
}

void UserRegisterReq::MergeFrom(const UserRegisterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UserRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.owner().size() > 0) {

    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.pass().size() > 0) {

    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  if (from.referee().size() > 0) {

    referee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referee_);
  }
  if (from.deliver_time().size() > 0) {

    deliver_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deliver_time_);
  }
  if (from.mark().size() > 0) {

    mark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mark_);
  }
  if (from.has_address()) {
    mutable_address()->::ttmall::AddressInfo::MergeFrom(from.address());
  }
}

void UserRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UserRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegisterReq::CopyFrom(const UserRegisterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UserRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegisterReq::IsInitialized() const {
  return true;
}

void UserRegisterReq::Swap(UserRegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegisterReq::InternalSwap(UserRegisterReq* other) {
  token_.Swap(&other->token_);
  name_.Swap(&other->name_);
  owner_.Swap(&other->owner_);
  type_.Swap(&other->type_);
  mobile_.Swap(&other->mobile_);
  code_.Swap(&other->code_);
  pass_.Swap(&other->pass_);
  referee_.Swap(&other->referee_);
  deliver_time_.Swap(&other->deliver_time_);
  mark_.Swap(&other->mark_);
  std::swap(address_, other->address_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRegisterReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserRegisterReq

// string token = 1;
void UserRegisterReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.token)
  return token_.GetNoArena();
}
void UserRegisterReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.token)
}
#if LANG_CXX11
void UserRegisterReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.token)
}
#endif
void UserRegisterReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.token)
}
void UserRegisterReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.token)
}
::std::string* UserRegisterReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.token)
}

// string name = 2;
void UserRegisterReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.name)
  return name_.GetNoArena();
}
void UserRegisterReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.name)
}
#if LANG_CXX11
void UserRegisterReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.name)
}
#endif
void UserRegisterReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.name)
}
void UserRegisterReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.name)
}
::std::string* UserRegisterReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.name)
}

// string owner = 3;
void UserRegisterReq::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::owner() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.owner)
  return owner_.GetNoArena();
}
void UserRegisterReq::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.owner)
}
#if LANG_CXX11
void UserRegisterReq::set_owner(::std::string&& value) {
  
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.owner)
}
#endif
void UserRegisterReq::set_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.owner)
}
void UserRegisterReq::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.owner)
}
::std::string* UserRegisterReq::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_owner() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.owner)
}

// string type = 4;
void UserRegisterReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.type)
  return type_.GetNoArena();
}
void UserRegisterReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.type)
}
#if LANG_CXX11
void UserRegisterReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.type)
}
#endif
void UserRegisterReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.type)
}
void UserRegisterReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.type)
}
::std::string* UserRegisterReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.type)
}

// string mobile = 5;
void UserRegisterReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.mobile)
  return mobile_.GetNoArena();
}
void UserRegisterReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.mobile)
}
#if LANG_CXX11
void UserRegisterReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.mobile)
}
#endif
void UserRegisterReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.mobile)
}
void UserRegisterReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.mobile)
}
::std::string* UserRegisterReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.mobile)
}

// string code = 6;
void UserRegisterReq::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::code() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.code)
  return code_.GetNoArena();
}
void UserRegisterReq::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.code)
}
#if LANG_CXX11
void UserRegisterReq::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.code)
}
#endif
void UserRegisterReq::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.code)
}
void UserRegisterReq::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.code)
}
::std::string* UserRegisterReq::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.code)
}

// string pass = 7;
void UserRegisterReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.pass)
  return pass_.GetNoArena();
}
void UserRegisterReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.pass)
}
#if LANG_CXX11
void UserRegisterReq::set_pass(::std::string&& value) {
  
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.pass)
}
#endif
void UserRegisterReq::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.pass)
}
void UserRegisterReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.pass)
}
::std::string* UserRegisterReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_pass() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.pass)
}

// string referee = 8;
void UserRegisterReq::clear_referee() {
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::referee() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.referee)
  return referee_.GetNoArena();
}
void UserRegisterReq::set_referee(const ::std::string& value) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.referee)
}
#if LANG_CXX11
void UserRegisterReq::set_referee(::std::string&& value) {
  
  referee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.referee)
}
#endif
void UserRegisterReq::set_referee(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.referee)
}
void UserRegisterReq::set_referee(const char* value, size_t size) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.referee)
}
::std::string* UserRegisterReq::mutable_referee() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.referee)
  return referee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_referee() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.referee)
  
  return referee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_referee(::std::string* referee) {
  if (referee != NULL) {
    
  } else {
    
  }
  referee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referee);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.referee)
}

// string deliver_time = 9;
void UserRegisterReq::clear_deliver_time() {
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.deliver_time)
  return deliver_time_.GetNoArena();
}
void UserRegisterReq::set_deliver_time(const ::std::string& value) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.deliver_time)
}
#if LANG_CXX11
void UserRegisterReq::set_deliver_time(::std::string&& value) {
  
  deliver_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.deliver_time)
}
#endif
void UserRegisterReq::set_deliver_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.deliver_time)
}
void UserRegisterReq::set_deliver_time(const char* value, size_t size) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.deliver_time)
}
::std::string* UserRegisterReq::mutable_deliver_time() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.deliver_time)
  return deliver_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.deliver_time)
  
  return deliver_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_deliver_time(::std::string* deliver_time) {
  if (deliver_time != NULL) {
    
  } else {
    
  }
  deliver_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliver_time);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.deliver_time)
}

// .ttmall.AddressInfo address = 10;
bool UserRegisterReq::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void UserRegisterReq::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::ttmall::AddressInfo& UserRegisterReq::address() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.address)
  return address_ != NULL ? *address_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
::ttmall::AddressInfo* UserRegisterReq::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.address)
  return address_;
}
::ttmall::AddressInfo* UserRegisterReq::release_address() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.address)
  
  ::ttmall::AddressInfo* temp = address_;
  address_ = NULL;
  return temp;
}
void UserRegisterReq::set_allocated_address(::ttmall::AddressInfo* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.address)
}

// string mark = 11;
void UserRegisterReq::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterReq::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.mark)
  return mark_.GetNoArena();
}
void UserRegisterReq::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.mark)
}
#if LANG_CXX11
void UserRegisterReq::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.mark)
}
#endif
void UserRegisterReq::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.mark)
}
void UserRegisterReq::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.mark)
}
::std::string* UserRegisterReq::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterReq::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterReq::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.mark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegisterRep::kTokenFieldNumber;
const int UserRegisterRep::kInfoFieldNumber;
const int UserRegisterRep::kIsPassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegisterRep::UserRegisterRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UserRegisterRep)
}
UserRegisterRep::UserRegisterRep(const UserRegisterRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_info()) {
    info_ = new ::ttmall::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  is_pass_ = from.is_pass_;
  // @@protoc_insertion_point(copy_constructor:ttmall.UserRegisterRep)
}

void UserRegisterRep::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, reinterpret_cast<char*>(&is_pass_) -
    reinterpret_cast<char*>(&info_) + sizeof(is_pass_));
  _cached_size_ = 0;
}

UserRegisterRep::~UserRegisterRep() {
  // @@protoc_insertion_point(destructor:ttmall.UserRegisterRep)
  SharedDtor();
}

void UserRegisterRep::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void UserRegisterRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRegisterRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegisterRep& UserRegisterRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserRegisterRep* UserRegisterRep::New(::google::protobuf::Arena* arena) const {
  UserRegisterRep* n = new UserRegisterRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRegisterRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UserRegisterRep)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  is_pass_ = false;
}

bool UserRegisterRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UserRegisterRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UserRegisterRep.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.UserInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_pass = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_pass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UserRegisterRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UserRegisterRep)
  return false;
#undef DO_
}

void UserRegisterRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UserRegisterRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterRep.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // .ttmall.UserInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // bool is_pass = 3;
  if (this->is_pass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_pass(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UserRegisterRep)
}

::google::protobuf::uint8* UserRegisterRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UserRegisterRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UserRegisterRep.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // .ttmall.UserInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, deterministic, target);
  }

  // bool is_pass = 3;
  if (this->is_pass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_pass(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UserRegisterRep)
  return target;
}

size_t UserRegisterRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UserRegisterRep)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // .ttmall.UserInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // bool is_pass = 3;
  if (this->is_pass() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRegisterRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UserRegisterRep)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegisterRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegisterRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UserRegisterRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UserRegisterRep)
    MergeFrom(*source);
  }
}

void UserRegisterRep::MergeFrom(const UserRegisterRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UserRegisterRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_info()) {
    mutable_info()->::ttmall::UserInfo::MergeFrom(from.info());
  }
  if (from.is_pass() != 0) {
    set_is_pass(from.is_pass());
  }
}

void UserRegisterRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UserRegisterRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegisterRep::CopyFrom(const UserRegisterRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UserRegisterRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegisterRep::IsInitialized() const {
  return true;
}

void UserRegisterRep::Swap(UserRegisterRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegisterRep::InternalSwap(UserRegisterRep* other) {
  token_.Swap(&other->token_);
  std::swap(info_, other->info_);
  std::swap(is_pass_, other->is_pass_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRegisterRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserRegisterRep

// string token = 1;
void UserRegisterRep::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRegisterRep::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterRep.token)
  return token_.GetNoArena();
}
void UserRegisterRep::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterRep.token)
}
#if LANG_CXX11
void UserRegisterRep::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterRep.token)
}
#endif
void UserRegisterRep::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterRep.token)
}
void UserRegisterRep::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterRep.token)
}
::std::string* UserRegisterRep::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterRep.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRegisterRep::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterRep.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRegisterRep::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterRep.token)
}

// .ttmall.UserInfo info = 2;
bool UserRegisterRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void UserRegisterRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::UserInfo& UserRegisterRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
::ttmall::UserInfo* UserRegisterRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterRep.info)
  return info_;
}
::ttmall::UserInfo* UserRegisterRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void UserRegisterRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterRep.info)
}

// bool is_pass = 3;
void UserRegisterRep::clear_is_pass() {
  is_pass_ = false;
}
bool UserRegisterRep::is_pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterRep.is_pass)
  return is_pass_;
}
void UserRegisterRep::set_is_pass(bool value) {
  
  is_pass_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterRep.is_pass)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUserAddressReq::kTokenFieldNumber;
const int AddUserAddressReq::kIdFieldNumber;
const int AddUserAddressReq::kNameFieldNumber;
const int AddUserAddressReq::kProvinceFieldNumber;
const int AddUserAddressReq::kCityFieldNumber;
const int AddUserAddressReq::kAreaFieldNumber;
const int AddUserAddressReq::kAddrFieldNumber;
const int AddUserAddressReq::kContactFieldNumber;
const int AddUserAddressReq::kMobileFieldNumber;
const int AddUserAddressReq::kCoordFieldNumber;
const int AddUserAddressReq::kDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserAddressReq::AddUserAddressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AddUserAddressReq)
}
AddUserAddressReq::AddUserAddressReq(const AddUserAddressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.province().size() > 0) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.area().size() > 0) {
    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr().size() > 0) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contact().size() > 0) {
    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.has_coord()) {
    coord_ = new ::ttmall::CoordInfo(*from.coord_);
  } else {
    coord_ = NULL;
  }
  default__ = from.default__;
  // @@protoc_insertion_point(copy_constructor:ttmall.AddUserAddressReq)
}

void AddUserAddressReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&coord_, 0, reinterpret_cast<char*>(&default__) -
    reinterpret_cast<char*>(&coord_) + sizeof(default__));
  _cached_size_ = 0;
}

AddUserAddressReq::~AddUserAddressReq() {
  // @@protoc_insertion_point(destructor:ttmall.AddUserAddressReq)
  SharedDtor();
}

void AddUserAddressReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete coord_;
  }
}

void AddUserAddressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddUserAddressReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUserAddressReq& AddUserAddressReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddUserAddressReq* AddUserAddressReq::New(::google::protobuf::Arena* arena) const {
  AddUserAddressReq* n = new AddUserAddressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddUserAddressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AddUserAddressReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) {
    delete coord_;
  }
  coord_ = NULL;
  default__ = false;
}

bool AddUserAddressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AddUserAddressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string province = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.province"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string city = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string area = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->area().data(), this->area().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.area"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contact = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contact().data(), this->contact().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.contact"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.AddUserAddressReq.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.CoordInfo coord = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool default = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AddUserAddressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AddUserAddressReq)
  return false;
#undef DO_
}

void AddUserAddressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AddUserAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string province = 4;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->province(), output);
  }

  // string city = 5;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->city(), output);
  }

  // string area = 6;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->area(), output);
  }

  // string addr = 7;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->addr(), output);
  }

  // string contact = 8;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.contact");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->contact(), output);
  }

  // string mobile = 9;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->mobile(), output);
  }

  // .ttmall.CoordInfo coord = 10;
  if (this->has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->coord_, output);
  }

  // bool default = 11;
  if (this->default_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->default_(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AddUserAddressReq)
}

::google::protobuf::uint8* AddUserAddressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AddUserAddressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string province = 4;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->province(), target);
  }

  // string city = 5;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->city(), target);
  }

  // string area = 6;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), this->area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->area(), target);
  }

  // string addr = 7;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->addr(), target);
  }

  // string contact = 8;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.contact");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->contact(), target);
  }

  // string mobile = 9;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.AddUserAddressReq.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->mobile(), target);
  }

  // .ttmall.CoordInfo coord = 10;
  if (this->has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->coord_, deterministic, target);
  }

  // bool default = 11;
  if (this->default_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->default_(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AddUserAddressReq)
  return target;
}

size_t AddUserAddressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AddUserAddressReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string province = 4;
  if (this->province().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->province());
  }

  // string city = 5;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // string area = 6;
  if (this->area().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area());
  }

  // string addr = 7;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  // string contact = 8;
  if (this->contact().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contact());
  }

  // string mobile = 9;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // .ttmall.CoordInfo coord = 10;
  if (this->has_coord()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->coord_);
  }

  // bool default = 11;
  if (this->default_() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddUserAddressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AddUserAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUserAddressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserAddressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AddUserAddressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AddUserAddressReq)
    MergeFrom(*source);
  }
}

void AddUserAddressReq::MergeFrom(const AddUserAddressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AddUserAddressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.province().size() > 0) {

    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.area().size() > 0) {

    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  if (from.contact().size() > 0) {

    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.has_coord()) {
    mutable_coord()->::ttmall::CoordInfo::MergeFrom(from.coord());
  }
  if (from.default_() != 0) {
    set_default_(from.default_());
  }
}

void AddUserAddressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AddUserAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserAddressReq::CopyFrom(const AddUserAddressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AddUserAddressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserAddressReq::IsInitialized() const {
  return true;
}

void AddUserAddressReq::Swap(AddUserAddressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserAddressReq::InternalSwap(AddUserAddressReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  area_.Swap(&other->area_);
  addr_.Swap(&other->addr_);
  contact_.Swap(&other->contact_);
  mobile_.Swap(&other->mobile_);
  std::swap(coord_, other->coord_);
  std::swap(default__, other->default__);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddUserAddressReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddUserAddressReq

// string token = 1;
void AddUserAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.token)
  return token_.GetNoArena();
}
void AddUserAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.token)
}
#if LANG_CXX11
void AddUserAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.token)
}
#endif
void AddUserAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.token)
}
void AddUserAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.token)
}
::std::string* AddUserAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.token)
}

// string id = 2;
void AddUserAddressReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.id)
  return id_.GetNoArena();
}
void AddUserAddressReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.id)
}
#if LANG_CXX11
void AddUserAddressReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.id)
}
#endif
void AddUserAddressReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.id)
}
void AddUserAddressReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.id)
}
::std::string* AddUserAddressReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.id)
}

// string name = 3;
void AddUserAddressReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.name)
  return name_.GetNoArena();
}
void AddUserAddressReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.name)
}
#if LANG_CXX11
void AddUserAddressReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.name)
}
#endif
void AddUserAddressReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.name)
}
void AddUserAddressReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.name)
}
::std::string* AddUserAddressReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.name)
}

// string province = 4;
void AddUserAddressReq::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::province() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.province)
  return province_.GetNoArena();
}
void AddUserAddressReq::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.province)
}
#if LANG_CXX11
void AddUserAddressReq::set_province(::std::string&& value) {
  
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.province)
}
#endif
void AddUserAddressReq::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.province)
}
void AddUserAddressReq::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.province)
}
::std::string* AddUserAddressReq::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_province() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.province)
}

// string city = 5;
void AddUserAddressReq::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::city() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.city)
  return city_.GetNoArena();
}
void AddUserAddressReq::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.city)
}
#if LANG_CXX11
void AddUserAddressReq::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.city)
}
#endif
void AddUserAddressReq::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.city)
}
void AddUserAddressReq::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.city)
}
::std::string* AddUserAddressReq::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_city() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.city)
}

// string area = 6;
void AddUserAddressReq::clear_area() {
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::area() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.area)
  return area_.GetNoArena();
}
void AddUserAddressReq::set_area(const ::std::string& value) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.area)
}
#if LANG_CXX11
void AddUserAddressReq::set_area(::std::string&& value) {
  
  area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.area)
}
#endif
void AddUserAddressReq::set_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.area)
}
void AddUserAddressReq::set_area(const char* value, size_t size) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.area)
}
::std::string* AddUserAddressReq::mutable_area() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.area)
  return area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_area() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.area)
  
  return area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_area(::std::string* area) {
  if (area != NULL) {
    
  } else {
    
  }
  area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.area)
}

// string addr = 7;
void AddUserAddressReq::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::addr() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.addr)
  return addr_.GetNoArena();
}
void AddUserAddressReq::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.addr)
}
#if LANG_CXX11
void AddUserAddressReq::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.addr)
}
#endif
void AddUserAddressReq::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.addr)
}
void AddUserAddressReq::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.addr)
}
::std::string* AddUserAddressReq::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_addr() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.addr)
}

// string contact = 8;
void AddUserAddressReq::clear_contact() {
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::contact() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.contact)
  return contact_.GetNoArena();
}
void AddUserAddressReq::set_contact(const ::std::string& value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.contact)
}
#if LANG_CXX11
void AddUserAddressReq::set_contact(::std::string&& value) {
  
  contact_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.contact)
}
#endif
void AddUserAddressReq::set_contact(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.contact)
}
void AddUserAddressReq::set_contact(const char* value, size_t size) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.contact)
}
::std::string* AddUserAddressReq::mutable_contact() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.contact)
  return contact_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_contact() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.contact)
  
  return contact_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_contact(::std::string* contact) {
  if (contact != NULL) {
    
  } else {
    
  }
  contact_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.contact)
}

// string mobile = 9;
void AddUserAddressReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddUserAddressReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.mobile)
  return mobile_.GetNoArena();
}
void AddUserAddressReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.mobile)
}
#if LANG_CXX11
void AddUserAddressReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.mobile)
}
#endif
void AddUserAddressReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.mobile)
}
void AddUserAddressReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.mobile)
}
::std::string* AddUserAddressReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddUserAddressReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddUserAddressReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.mobile)
}

// .ttmall.CoordInfo coord = 10;
bool AddUserAddressReq::has_coord() const {
  return this != internal_default_instance() && coord_ != NULL;
}
void AddUserAddressReq::clear_coord() {
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
}
const ::ttmall::CoordInfo& AddUserAddressReq::coord() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.coord)
  return coord_ != NULL ? *coord_
                         : *::ttmall::CoordInfo::internal_default_instance();
}
::ttmall::CoordInfo* AddUserAddressReq::mutable_coord() {
  
  if (coord_ == NULL) {
    coord_ = new ::ttmall::CoordInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.coord)
  return coord_;
}
::ttmall::CoordInfo* AddUserAddressReq::release_coord() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.coord)
  
  ::ttmall::CoordInfo* temp = coord_;
  coord_ = NULL;
  return temp;
}
void AddUserAddressReq::set_allocated_coord(::ttmall::CoordInfo* coord) {
  delete coord_;
  coord_ = coord;
  if (coord) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.coord)
}

// bool default = 11;
void AddUserAddressReq::clear_default_() {
  default__ = false;
}
bool AddUserAddressReq::default_() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.default)
  return default__;
}
void AddUserAddressReq::set_default_(bool value) {
  
  default__ = value;
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.default)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUserAddressRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserAddressRep::AddUserAddressRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.AddUserAddressRep)
}
AddUserAddressRep::AddUserAddressRep(const AddUserAddressRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::AddressInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.AddUserAddressRep)
}

void AddUserAddressRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

AddUserAddressRep::~AddUserAddressRep() {
  // @@protoc_insertion_point(destructor:ttmall.AddUserAddressRep)
  SharedDtor();
}

void AddUserAddressRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void AddUserAddressRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddUserAddressRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUserAddressRep& AddUserAddressRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddUserAddressRep* AddUserAddressRep::New(::google::protobuf::Arena* arena) const {
  AddUserAddressRep* n = new AddUserAddressRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddUserAddressRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.AddUserAddressRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool AddUserAddressRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.AddUserAddressRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.AddressInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.AddUserAddressRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.AddUserAddressRep)
  return false;
#undef DO_
}

void AddUserAddressRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.AddUserAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.AddUserAddressRep)
}

::google::protobuf::uint8* AddUserAddressRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.AddUserAddressRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.AddUserAddressRep)
  return target;
}

size_t AddUserAddressRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.AddUserAddressRep)
  size_t total_size = 0;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddUserAddressRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.AddUserAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUserAddressRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserAddressRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.AddUserAddressRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.AddUserAddressRep)
    MergeFrom(*source);
  }
}

void AddUserAddressRep::MergeFrom(const AddUserAddressRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.AddUserAddressRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::AddressInfo::MergeFrom(from.info());
  }
}

void AddUserAddressRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.AddUserAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserAddressRep::CopyFrom(const AddUserAddressRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.AddUserAddressRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserAddressRep::IsInitialized() const {
  return true;
}

void AddUserAddressRep::Swap(AddUserAddressRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserAddressRep::InternalSwap(AddUserAddressRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddUserAddressRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddUserAddressRep

// .ttmall.AddressInfo info = 1;
bool AddUserAddressRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void AddUserAddressRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::AddressInfo& AddUserAddressRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
::ttmall::AddressInfo* AddUserAddressRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressRep.info)
  return info_;
}
::ttmall::AddressInfo* AddUserAddressRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressRep.info)
  
  ::ttmall::AddressInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void AddUserAddressRep::set_allocated_info(::ttmall::AddressInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDefaultAddrReq::kTokenFieldNumber;
const int SetDefaultAddrReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDefaultAddrReq::SetDefaultAddrReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetDefaultAddrReq)
}
SetDefaultAddrReq::SetDefaultAddrReq(const SetDefaultAddrReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SetDefaultAddrReq)
}

void SetDefaultAddrReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetDefaultAddrReq::~SetDefaultAddrReq() {
  // @@protoc_insertion_point(destructor:ttmall.SetDefaultAddrReq)
  SharedDtor();
}

void SetDefaultAddrReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetDefaultAddrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDefaultAddrReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDefaultAddrReq& SetDefaultAddrReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDefaultAddrReq* SetDefaultAddrReq::New(::google::protobuf::Arena* arena) const {
  SetDefaultAddrReq* n = new SetDefaultAddrReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDefaultAddrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetDefaultAddrReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SetDefaultAddrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetDefaultAddrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetDefaultAddrReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.SetDefaultAddrReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetDefaultAddrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetDefaultAddrReq)
  return false;
#undef DO_
}

void SetDefaultAddrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetDefaultAddrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetDefaultAddrReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetDefaultAddrReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SetDefaultAddrReq)
}

::google::protobuf::uint8* SetDefaultAddrReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetDefaultAddrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetDefaultAddrReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.SetDefaultAddrReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetDefaultAddrReq)
  return target;
}

size_t SetDefaultAddrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetDefaultAddrReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDefaultAddrReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetDefaultAddrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDefaultAddrReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDefaultAddrReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetDefaultAddrReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetDefaultAddrReq)
    MergeFrom(*source);
  }
}

void SetDefaultAddrReq::MergeFrom(const SetDefaultAddrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetDefaultAddrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void SetDefaultAddrReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetDefaultAddrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDefaultAddrReq::CopyFrom(const SetDefaultAddrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetDefaultAddrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDefaultAddrReq::IsInitialized() const {
  return true;
}

void SetDefaultAddrReq::Swap(SetDefaultAddrReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDefaultAddrReq::InternalSwap(SetDefaultAddrReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetDefaultAddrReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDefaultAddrReq

// string token = 1;
void SetDefaultAddrReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetDefaultAddrReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SetDefaultAddrReq.token)
  return token_.GetNoArena();
}
void SetDefaultAddrReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetDefaultAddrReq.token)
}
#if LANG_CXX11
void SetDefaultAddrReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetDefaultAddrReq.token)
}
#endif
void SetDefaultAddrReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetDefaultAddrReq.token)
}
void SetDefaultAddrReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetDefaultAddrReq.token)
}
::std::string* SetDefaultAddrReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetDefaultAddrReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDefaultAddrReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SetDefaultAddrReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDefaultAddrReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetDefaultAddrReq.token)
}

// string id = 2;
void SetDefaultAddrReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetDefaultAddrReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetDefaultAddrReq.id)
  return id_.GetNoArena();
}
void SetDefaultAddrReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetDefaultAddrReq.id)
}
#if LANG_CXX11
void SetDefaultAddrReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetDefaultAddrReq.id)
}
#endif
void SetDefaultAddrReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetDefaultAddrReq.id)
}
void SetDefaultAddrReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetDefaultAddrReq.id)
}
::std::string* SetDefaultAddrReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetDefaultAddrReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetDefaultAddrReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetDefaultAddrReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetDefaultAddrReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetDefaultAddrReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDefaultAddrRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDefaultAddrRep::SetDefaultAddrRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.SetDefaultAddrRep)
}
SetDefaultAddrRep::SetDefaultAddrRep(const SetDefaultAddrRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::AddressInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.SetDefaultAddrRep)
}

void SetDefaultAddrRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

SetDefaultAddrRep::~SetDefaultAddrRep() {
  // @@protoc_insertion_point(destructor:ttmall.SetDefaultAddrRep)
  SharedDtor();
}

void SetDefaultAddrRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void SetDefaultAddrRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDefaultAddrRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDefaultAddrRep& SetDefaultAddrRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetDefaultAddrRep* SetDefaultAddrRep::New(::google::protobuf::Arena* arena) const {
  SetDefaultAddrRep* n = new SetDefaultAddrRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetDefaultAddrRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.SetDefaultAddrRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool SetDefaultAddrRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.SetDefaultAddrRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.AddressInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.SetDefaultAddrRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.SetDefaultAddrRep)
  return false;
#undef DO_
}

void SetDefaultAddrRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.SetDefaultAddrRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.SetDefaultAddrRep)
}

::google::protobuf::uint8* SetDefaultAddrRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.SetDefaultAddrRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.SetDefaultAddrRep)
  return target;
}

size_t SetDefaultAddrRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.SetDefaultAddrRep)
  size_t total_size = 0;

  // .ttmall.AddressInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDefaultAddrRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.SetDefaultAddrRep)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDefaultAddrRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDefaultAddrRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.SetDefaultAddrRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.SetDefaultAddrRep)
    MergeFrom(*source);
  }
}

void SetDefaultAddrRep::MergeFrom(const SetDefaultAddrRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.SetDefaultAddrRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::AddressInfo::MergeFrom(from.info());
  }
}

void SetDefaultAddrRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.SetDefaultAddrRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDefaultAddrRep::CopyFrom(const SetDefaultAddrRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.SetDefaultAddrRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDefaultAddrRep::IsInitialized() const {
  return true;
}

void SetDefaultAddrRep::Swap(SetDefaultAddrRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDefaultAddrRep::InternalSwap(SetDefaultAddrRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetDefaultAddrRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetDefaultAddrRep

// .ttmall.AddressInfo info = 1;
bool SetDefaultAddrRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void SetDefaultAddrRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::AddressInfo& SetDefaultAddrRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.SetDefaultAddrRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
::ttmall::AddressInfo* SetDefaultAddrRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.SetDefaultAddrRep.info)
  return info_;
}
::ttmall::AddressInfo* SetDefaultAddrRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.SetDefaultAddrRep.info)
  
  ::ttmall::AddressInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void SetDefaultAddrRep::set_allocated_info(::ttmall::AddressInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetDefaultAddrRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelUserAddrReq::kTokenFieldNumber;
const int DelUserAddrReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelUserAddrReq::DelUserAddrReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DelUserAddrReq)
}
DelUserAddrReq::DelUserAddrReq(const DelUserAddrReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DelUserAddrReq)
}

void DelUserAddrReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelUserAddrReq::~DelUserAddrReq() {
  // @@protoc_insertion_point(destructor:ttmall.DelUserAddrReq)
  SharedDtor();
}

void DelUserAddrReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelUserAddrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelUserAddrReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelUserAddrReq& DelUserAddrReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelUserAddrReq* DelUserAddrReq::New(::google::protobuf::Arena* arena) const {
  DelUserAddrReq* n = new DelUserAddrReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelUserAddrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DelUserAddrReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelUserAddrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DelUserAddrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DelUserAddrReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DelUserAddrReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DelUserAddrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DelUserAddrReq)
  return false;
#undef DO_
}

void DelUserAddrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DelUserAddrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelUserAddrReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelUserAddrReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DelUserAddrReq)
}

::google::protobuf::uint8* DelUserAddrReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DelUserAddrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelUserAddrReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelUserAddrReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DelUserAddrReq)
  return target;
}

size_t DelUserAddrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DelUserAddrReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelUserAddrReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DelUserAddrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DelUserAddrReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelUserAddrReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DelUserAddrReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DelUserAddrReq)
    MergeFrom(*source);
  }
}

void DelUserAddrReq::MergeFrom(const DelUserAddrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DelUserAddrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void DelUserAddrReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DelUserAddrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelUserAddrReq::CopyFrom(const DelUserAddrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DelUserAddrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelUserAddrReq::IsInitialized() const {
  return true;
}

void DelUserAddrReq::Swap(DelUserAddrReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelUserAddrReq::InternalSwap(DelUserAddrReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelUserAddrReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelUserAddrReq

// string token = 1;
void DelUserAddrReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelUserAddrReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DelUserAddrReq.token)
  return token_.GetNoArena();
}
void DelUserAddrReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelUserAddrReq.token)
}
#if LANG_CXX11
void DelUserAddrReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelUserAddrReq.token)
}
#endif
void DelUserAddrReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelUserAddrReq.token)
}
void DelUserAddrReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelUserAddrReq.token)
}
::std::string* DelUserAddrReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelUserAddrReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelUserAddrReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DelUserAddrReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelUserAddrReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelUserAddrReq.token)
}

// string id = 2;
void DelUserAddrReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelUserAddrReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.DelUserAddrReq.id)
  return id_.GetNoArena();
}
void DelUserAddrReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelUserAddrReq.id)
}
#if LANG_CXX11
void DelUserAddrReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelUserAddrReq.id)
}
#endif
void DelUserAddrReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelUserAddrReq.id)
}
void DelUserAddrReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelUserAddrReq.id)
}
::std::string* DelUserAddrReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelUserAddrReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelUserAddrReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.DelUserAddrReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelUserAddrReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelUserAddrReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelUserAddrRep::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelUserAddrRep::DelUserAddrRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.DelUserAddrRep)
}
DelUserAddrRep::DelUserAddrRep(const DelUserAddrRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.DelUserAddrRep)
}

void DelUserAddrRep::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DelUserAddrRep::~DelUserAddrRep() {
  // @@protoc_insertion_point(destructor:ttmall.DelUserAddrRep)
  SharedDtor();
}

void DelUserAddrRep::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelUserAddrRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelUserAddrRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelUserAddrRep& DelUserAddrRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelUserAddrRep* DelUserAddrRep::New(::google::protobuf::Arena* arena) const {
  DelUserAddrRep* n = new DelUserAddrRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelUserAddrRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.DelUserAddrRep)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DelUserAddrRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.DelUserAddrRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.DelUserAddrRep.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.DelUserAddrRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.DelUserAddrRep)
  return false;
#undef DO_
}

void DelUserAddrRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.DelUserAddrRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelUserAddrRep.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.DelUserAddrRep)
}

::google::protobuf::uint8* DelUserAddrRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.DelUserAddrRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.DelUserAddrRep.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.DelUserAddrRep)
  return target;
}

size_t DelUserAddrRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.DelUserAddrRep)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelUserAddrRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.DelUserAddrRep)
  GOOGLE_DCHECK_NE(&from, this);
  const DelUserAddrRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelUserAddrRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.DelUserAddrRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.DelUserAddrRep)
    MergeFrom(*source);
  }
}

void DelUserAddrRep::MergeFrom(const DelUserAddrRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.DelUserAddrRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void DelUserAddrRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.DelUserAddrRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelUserAddrRep::CopyFrom(const DelUserAddrRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.DelUserAddrRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelUserAddrRep::IsInitialized() const {
  return true;
}

void DelUserAddrRep::Swap(DelUserAddrRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelUserAddrRep::InternalSwap(DelUserAddrRep* other) {
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelUserAddrRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelUserAddrRep

// string id = 1;
void DelUserAddrRep::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DelUserAddrRep::id() const {
  // @@protoc_insertion_point(field_get:ttmall.DelUserAddrRep.id)
  return id_.GetNoArena();
}
void DelUserAddrRep::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelUserAddrRep.id)
}
#if LANG_CXX11
void DelUserAddrRep::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelUserAddrRep.id)
}
#endif
void DelUserAddrRep::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelUserAddrRep.id)
}
void DelUserAddrRep::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelUserAddrRep.id)
}
::std::string* DelUserAddrRep::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelUserAddrRep.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelUserAddrRep::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.DelUserAddrRep.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelUserAddrRep::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelUserAddrRep.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelOrderReq::kTokenFieldNumber;
const int CancelOrderReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelOrderReq::CancelOrderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.CancelOrderReq)
}
CancelOrderReq::CancelOrderReq(const CancelOrderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.CancelOrderReq)
}

void CancelOrderReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelOrderReq::~CancelOrderReq() {
  // @@protoc_insertion_point(destructor:ttmall.CancelOrderReq)
  SharedDtor();
}

void CancelOrderReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelOrderReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelOrderReq& CancelOrderReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelOrderReq* CancelOrderReq::New(::google::protobuf::Arena* arena) const {
  CancelOrderReq* n = new CancelOrderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.CancelOrderReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CancelOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.CancelOrderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CancelOrderReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.CancelOrderReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.CancelOrderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.CancelOrderReq)
  return false;
#undef DO_
}

void CancelOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.CancelOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CancelOrderReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CancelOrderReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.CancelOrderReq)
}

::google::protobuf::uint8* CancelOrderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.CancelOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CancelOrderReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.CancelOrderReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.CancelOrderReq)
  return target;
}

size_t CancelOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.CancelOrderReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.CancelOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelOrderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelOrderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.CancelOrderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.CancelOrderReq)
    MergeFrom(*source);
  }
}

void CancelOrderReq::MergeFrom(const CancelOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.CancelOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void CancelOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.CancelOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOrderReq::CopyFrom(const CancelOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.CancelOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOrderReq::IsInitialized() const {
  return true;
}

void CancelOrderReq::Swap(CancelOrderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelOrderReq::InternalSwap(CancelOrderReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelOrderReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelOrderReq

// string token = 1;
void CancelOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.CancelOrderReq.token)
  return token_.GetNoArena();
}
void CancelOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CancelOrderReq.token)
}
#if LANG_CXX11
void CancelOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CancelOrderReq.token)
}
#endif
void CancelOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CancelOrderReq.token)
}
void CancelOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CancelOrderReq.token)
}
::std::string* CancelOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CancelOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.CancelOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CancelOrderReq.token)
}

// string id = 2;
void CancelOrderReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelOrderReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.CancelOrderReq.id)
  return id_.GetNoArena();
}
void CancelOrderReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CancelOrderReq.id)
}
#if LANG_CXX11
void CancelOrderReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CancelOrderReq.id)
}
#endif
void CancelOrderReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CancelOrderReq.id)
}
void CancelOrderReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CancelOrderReq.id)
}
::std::string* CancelOrderReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CancelOrderReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelOrderReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.CancelOrderReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelOrderReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CancelOrderReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelOrderRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelOrderRep::CancelOrderRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.CancelOrderRep)
}
CancelOrderRep::CancelOrderRep(const CancelOrderRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::OrderInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.CancelOrderRep)
}

void CancelOrderRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

CancelOrderRep::~CancelOrderRep() {
  // @@protoc_insertion_point(destructor:ttmall.CancelOrderRep)
  SharedDtor();
}

void CancelOrderRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void CancelOrderRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelOrderRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelOrderRep& CancelOrderRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelOrderRep* CancelOrderRep::New(::google::protobuf::Arena* arena) const {
  CancelOrderRep* n = new CancelOrderRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelOrderRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.CancelOrderRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool CancelOrderRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.CancelOrderRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.OrderInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.CancelOrderRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.CancelOrderRep)
  return false;
#undef DO_
}

void CancelOrderRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.CancelOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.CancelOrderRep)
}

::google::protobuf::uint8* CancelOrderRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.CancelOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.CancelOrderRep)
  return target;
}

size_t CancelOrderRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.CancelOrderRep)
  size_t total_size = 0;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelOrderRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.CancelOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelOrderRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelOrderRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.CancelOrderRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.CancelOrderRep)
    MergeFrom(*source);
  }
}

void CancelOrderRep::MergeFrom(const CancelOrderRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.CancelOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::OrderInfo::MergeFrom(from.info());
  }
}

void CancelOrderRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.CancelOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelOrderRep::CopyFrom(const CancelOrderRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.CancelOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOrderRep::IsInitialized() const {
  return true;
}

void CancelOrderRep::Swap(CancelOrderRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelOrderRep::InternalSwap(CancelOrderRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelOrderRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelOrderRep

// .ttmall.OrderInfo info = 1;
bool CancelOrderRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void CancelOrderRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::OrderInfo& CancelOrderRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.CancelOrderRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
::ttmall::OrderInfo* CancelOrderRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.CancelOrderRep.info)
  return info_;
}
::ttmall::OrderInfo* CancelOrderRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.CancelOrderRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void CancelOrderRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.CancelOrderRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideOrderReq::kTokenFieldNumber;
const int HideOrderReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideOrderReq::HideOrderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.HideOrderReq)
}
HideOrderReq::HideOrderReq(const HideOrderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.HideOrderReq)
}

void HideOrderReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HideOrderReq::~HideOrderReq() {
  // @@protoc_insertion_point(destructor:ttmall.HideOrderReq)
  SharedDtor();
}

void HideOrderReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HideOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HideOrderReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HideOrderReq& HideOrderReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideOrderReq* HideOrderReq::New(::google::protobuf::Arena* arena) const {
  HideOrderReq* n = new HideOrderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.HideOrderReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HideOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.HideOrderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.HideOrderReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.HideOrderReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.HideOrderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.HideOrderReq)
  return false;
#undef DO_
}

void HideOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.HideOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.HideOrderReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.HideOrderReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.HideOrderReq)
}

::google::protobuf::uint8* HideOrderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.HideOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.HideOrderReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.HideOrderReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.HideOrderReq)
  return target;
}

size_t HideOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.HideOrderReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.HideOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HideOrderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HideOrderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.HideOrderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.HideOrderReq)
    MergeFrom(*source);
  }
}

void HideOrderReq::MergeFrom(const HideOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.HideOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void HideOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.HideOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HideOrderReq::CopyFrom(const HideOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.HideOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideOrderReq::IsInitialized() const {
  return true;
}

void HideOrderReq::Swap(HideOrderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideOrderReq::InternalSwap(HideOrderReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HideOrderReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideOrderReq

// string token = 1;
void HideOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HideOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.HideOrderReq.token)
  return token_.GetNoArena();
}
void HideOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.HideOrderReq.token)
}
#if LANG_CXX11
void HideOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.HideOrderReq.token)
}
#endif
void HideOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.HideOrderReq.token)
}
void HideOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.HideOrderReq.token)
}
::std::string* HideOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.HideOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HideOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.HideOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HideOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.HideOrderReq.token)
}

// string id = 2;
void HideOrderReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HideOrderReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.HideOrderReq.id)
  return id_.GetNoArena();
}
void HideOrderReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.HideOrderReq.id)
}
#if LANG_CXX11
void HideOrderReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.HideOrderReq.id)
}
#endif
void HideOrderReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.HideOrderReq.id)
}
void HideOrderReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.HideOrderReq.id)
}
::std::string* HideOrderReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.HideOrderReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HideOrderReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.HideOrderReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HideOrderReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.HideOrderReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideOrderRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideOrderRep::HideOrderRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.HideOrderRep)
}
HideOrderRep::HideOrderRep(const HideOrderRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::OrderInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.HideOrderRep)
}

void HideOrderRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

HideOrderRep::~HideOrderRep() {
  // @@protoc_insertion_point(destructor:ttmall.HideOrderRep)
  SharedDtor();
}

void HideOrderRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void HideOrderRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HideOrderRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HideOrderRep& HideOrderRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

HideOrderRep* HideOrderRep::New(::google::protobuf::Arena* arena) const {
  HideOrderRep* n = new HideOrderRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideOrderRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.HideOrderRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool HideOrderRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.HideOrderRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.OrderInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.HideOrderRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.HideOrderRep)
  return false;
#undef DO_
}

void HideOrderRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.HideOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.HideOrderRep)
}

::google::protobuf::uint8* HideOrderRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.HideOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.HideOrderRep)
  return target;
}

size_t HideOrderRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.HideOrderRep)
  size_t total_size = 0;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HideOrderRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.HideOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  const HideOrderRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HideOrderRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.HideOrderRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.HideOrderRep)
    MergeFrom(*source);
  }
}

void HideOrderRep::MergeFrom(const HideOrderRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.HideOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::OrderInfo::MergeFrom(from.info());
  }
}

void HideOrderRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.HideOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HideOrderRep::CopyFrom(const HideOrderRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.HideOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HideOrderRep::IsInitialized() const {
  return true;
}

void HideOrderRep::Swap(HideOrderRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideOrderRep::InternalSwap(HideOrderRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HideOrderRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideOrderRep

// .ttmall.OrderInfo info = 1;
bool HideOrderRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void HideOrderRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::OrderInfo& HideOrderRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.HideOrderRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
::ttmall::OrderInfo* HideOrderRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.HideOrderRep.info)
  return info_;
}
::ttmall::OrderInfo* HideOrderRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.HideOrderRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void HideOrderRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.HideOrderRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatOrderReq::kTokenFieldNumber;
const int RepeatOrderReq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatOrderReq::RepeatOrderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.RepeatOrderReq)
}
RepeatOrderReq::RepeatOrderReq(const RepeatOrderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.RepeatOrderReq)
}

void RepeatOrderReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RepeatOrderReq::~RepeatOrderReq() {
  // @@protoc_insertion_point(destructor:ttmall.RepeatOrderReq)
  SharedDtor();
}

void RepeatOrderReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RepeatOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepeatOrderReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepeatOrderReq& RepeatOrderReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

RepeatOrderReq* RepeatOrderReq::New(::google::protobuf::Arena* arena) const {
  RepeatOrderReq* n = new RepeatOrderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RepeatOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.RepeatOrderReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RepeatOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.RepeatOrderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RepeatOrderReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.RepeatOrderReq.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.RepeatOrderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.RepeatOrderReq)
  return false;
#undef DO_
}

void RepeatOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.RepeatOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RepeatOrderReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RepeatOrderReq.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.RepeatOrderReq)
}

::google::protobuf::uint8* RepeatOrderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.RepeatOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RepeatOrderReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.RepeatOrderReq.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.RepeatOrderReq)
  return target;
}

size_t RepeatOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.RepeatOrderReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepeatOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.RepeatOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatOrderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepeatOrderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.RepeatOrderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.RepeatOrderReq)
    MergeFrom(*source);
  }
}

void RepeatOrderReq::MergeFrom(const RepeatOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.RepeatOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void RepeatOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.RepeatOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatOrderReq::CopyFrom(const RepeatOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.RepeatOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatOrderReq::IsInitialized() const {
  return true;
}

void RepeatOrderReq::Swap(RepeatOrderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepeatOrderReq::InternalSwap(RepeatOrderReq* other) {
  token_.Swap(&other->token_);
  id_.Swap(&other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RepeatOrderReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RepeatOrderReq

// string token = 1;
void RepeatOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RepeatOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.RepeatOrderReq.token)
  return token_.GetNoArena();
}
void RepeatOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RepeatOrderReq.token)
}
#if LANG_CXX11
void RepeatOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RepeatOrderReq.token)
}
#endif
void RepeatOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RepeatOrderReq.token)
}
void RepeatOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RepeatOrderReq.token)
}
::std::string* RepeatOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RepeatOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RepeatOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.RepeatOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RepeatOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RepeatOrderReq.token)
}

// string id = 2;
void RepeatOrderReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RepeatOrderReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.RepeatOrderReq.id)
  return id_.GetNoArena();
}
void RepeatOrderReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RepeatOrderReq.id)
}
#if LANG_CXX11
void RepeatOrderReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RepeatOrderReq.id)
}
#endif
void RepeatOrderReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RepeatOrderReq.id)
}
void RepeatOrderReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RepeatOrderReq.id)
}
::std::string* RepeatOrderReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RepeatOrderReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RepeatOrderReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.RepeatOrderReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RepeatOrderReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RepeatOrderReq.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatOrderRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatOrderRep::RepeatOrderRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.RepeatOrderRep)
}
RepeatOrderRep::RepeatOrderRep(const RepeatOrderRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::OrderInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.RepeatOrderRep)
}

void RepeatOrderRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

RepeatOrderRep::~RepeatOrderRep() {
  // @@protoc_insertion_point(destructor:ttmall.RepeatOrderRep)
  SharedDtor();
}

void RepeatOrderRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void RepeatOrderRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepeatOrderRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepeatOrderRep& RepeatOrderRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

RepeatOrderRep* RepeatOrderRep::New(::google::protobuf::Arena* arena) const {
  RepeatOrderRep* n = new RepeatOrderRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RepeatOrderRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.RepeatOrderRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool RepeatOrderRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.RepeatOrderRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.OrderInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.RepeatOrderRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.RepeatOrderRep)
  return false;
#undef DO_
}

void RepeatOrderRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.RepeatOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.RepeatOrderRep)
}

::google::protobuf::uint8* RepeatOrderRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.RepeatOrderRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.RepeatOrderRep)
  return target;
}

size_t RepeatOrderRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.RepeatOrderRep)
  size_t total_size = 0;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepeatOrderRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.RepeatOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatOrderRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepeatOrderRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.RepeatOrderRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.RepeatOrderRep)
    MergeFrom(*source);
  }
}

void RepeatOrderRep::MergeFrom(const RepeatOrderRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.RepeatOrderRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::OrderInfo::MergeFrom(from.info());
  }
}

void RepeatOrderRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.RepeatOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatOrderRep::CopyFrom(const RepeatOrderRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.RepeatOrderRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatOrderRep::IsInitialized() const {
  return true;
}

void RepeatOrderRep::Swap(RepeatOrderRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepeatOrderRep::InternalSwap(RepeatOrderRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RepeatOrderRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RepeatOrderRep

// .ttmall.OrderInfo info = 1;
bool RepeatOrderRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void RepeatOrderRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::OrderInfo& RepeatOrderRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.RepeatOrderRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
::ttmall::OrderInfo* RepeatOrderRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.RepeatOrderRep.info)
  return info_;
}
::ttmall::OrderInfo* RepeatOrderRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.RepeatOrderRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void RepeatOrderRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.RepeatOrderRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoReq::GetUserInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetUserInfoReq)
}
GetUserInfoReq::GetUserInfoReq(const GetUserInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetUserInfoReq)
}

void GetUserInfoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetUserInfoReq::~GetUserInfoReq() {
  // @@protoc_insertion_point(destructor:ttmall.GetUserInfoReq)
  SharedDtor();
}

void GetUserInfoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetUserInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoReq& GetUserInfoReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUserInfoReq* GetUserInfoReq::New(::google::protobuf::Arena* arena) const {
  GetUserInfoReq* n = new GetUserInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetUserInfoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetUserInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetUserInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetUserInfoReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetUserInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetUserInfoReq)
  return false;
#undef DO_
}

void GetUserInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetUserInfoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetUserInfoReq)
}

::google::protobuf::uint8* GetUserInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetUserInfoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetUserInfoReq)
  return target;
}

size_t GetUserInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetUserInfoReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetUserInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetUserInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetUserInfoReq)
    MergeFrom(*source);
  }
}

void GetUserInfoReq::MergeFrom(const GetUserInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetUserInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void GetUserInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetUserInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoReq::CopyFrom(const GetUserInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetUserInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoReq::IsInitialized() const {
  return true;
}

void GetUserInfoReq::Swap(GetUserInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoReq::InternalSwap(GetUserInfoReq* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserInfoReq

// string token = 1;
void GetUserInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetUserInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetUserInfoReq.token)
  return token_.GetNoArena();
}
void GetUserInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetUserInfoReq.token)
}
#if LANG_CXX11
void GetUserInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetUserInfoReq.token)
}
#endif
void GetUserInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetUserInfoReq.token)
}
void GetUserInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetUserInfoReq.token)
}
::std::string* GetUserInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetUserInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetUserInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetUserInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetUserInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetUserInfoReq.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoRep::GetUserInfoRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetUserInfoRep)
}
GetUserInfoRep::GetUserInfoRep(const GetUserInfoRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetUserInfoRep)
}

void GetUserInfoRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

GetUserInfoRep::~GetUserInfoRep() {
  // @@protoc_insertion_point(destructor:ttmall.GetUserInfoRep)
  SharedDtor();
}

void GetUserInfoRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void GetUserInfoRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoRep& GetUserInfoRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUserInfoRep* GetUserInfoRep::New(::google::protobuf::Arena* arena) const {
  GetUserInfoRep* n = new GetUserInfoRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetUserInfoRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool GetUserInfoRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetUserInfoRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.UserInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetUserInfoRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetUserInfoRep)
  return false;
#undef DO_
}

void GetUserInfoRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetUserInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetUserInfoRep)
}

::google::protobuf::uint8* GetUserInfoRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetUserInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetUserInfoRep)
  return target;
}

size_t GetUserInfoRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetUserInfoRep)
  size_t total_size = 0;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetUserInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetUserInfoRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetUserInfoRep)
    MergeFrom(*source);
  }
}

void GetUserInfoRep::MergeFrom(const GetUserInfoRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetUserInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::UserInfo::MergeFrom(from.info());
  }
}

void GetUserInfoRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetUserInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoRep::CopyFrom(const GetUserInfoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetUserInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoRep::IsInitialized() const {
  return true;
}

void GetUserInfoRep::Swap(GetUserInfoRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoRep::InternalSwap(GetUserInfoRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserInfoRep

// .ttmall.UserInfo info = 1;
bool GetUserInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void GetUserInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::UserInfo& GetUserInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.GetUserInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
::ttmall::UserInfo* GetUserInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.GetUserInfoRep.info)
  return info_;
}
::ttmall::UserInfo* GetUserInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.GetUserInfoRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void GetUserInfoRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetUserInfoRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUserPassReq::kTokenFieldNumber;
const int UpdateUserPassReq::kMobileFieldNumber;
const int UpdateUserPassReq::kCodeFieldNumber;
const int UpdateUserPassReq::kPassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUserPassReq::UpdateUserPassReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpdateUserPassReq)
}
UpdateUserPassReq::UpdateUserPassReq(const UpdateUserPassReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile().size() > 0) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pass().size() > 0) {
    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UpdateUserPassReq)
}

void UpdateUserPassReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateUserPassReq::~UpdateUserPassReq() {
  // @@protoc_insertion_point(destructor:ttmall.UpdateUserPassReq)
  SharedDtor();
}

void UpdateUserPassReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateUserPassReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateUserPassReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUserPassReq& UpdateUserPassReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateUserPassReq* UpdateUserPassReq::New(::google::protobuf::Arena* arena) const {
  UpdateUserPassReq* n = new UpdateUserPassReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateUserPassReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpdateUserPassReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UpdateUserPassReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpdateUserPassReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserPassReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile().data(), this->mobile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserPassReq.mobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserPassReq.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pass = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pass().data(), this->pass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserPassReq.pass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpdateUserPassReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpdateUserPassReq)
  return false;
#undef DO_
}

void UpdateUserPassReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpdateUserPassReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserPassReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string mobile = 2;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserPassReq.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mobile(), output);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserPassReq.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // string pass = 4;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserPassReq.pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pass(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpdateUserPassReq)
}

::google::protobuf::uint8* UpdateUserPassReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpdateUserPassReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserPassReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string mobile = 2;
  if (this->mobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile().data(), this->mobile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserPassReq.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mobile(), target);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserPassReq.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // string pass = 4;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserPassReq.pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pass(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpdateUserPassReq)
  return target;
}

size_t UpdateUserPassReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpdateUserPassReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string mobile = 2;
  if (this->mobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile());
  }

  // string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string pass = 4;
  if (this->pass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateUserPassReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpdateUserPassReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUserPassReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUserPassReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpdateUserPassReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpdateUserPassReq)
    MergeFrom(*source);
  }
}

void UpdateUserPassReq::MergeFrom(const UpdateUserPassReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpdateUserPassReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.mobile().size() > 0) {

    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.pass().size() > 0) {

    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
}

void UpdateUserPassReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpdateUserPassReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUserPassReq::CopyFrom(const UpdateUserPassReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpdateUserPassReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserPassReq::IsInitialized() const {
  return true;
}

void UpdateUserPassReq::Swap(UpdateUserPassReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUserPassReq::InternalSwap(UpdateUserPassReq* other) {
  token_.Swap(&other->token_);
  mobile_.Swap(&other->mobile_);
  code_.Swap(&other->code_);
  pass_.Swap(&other->pass_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateUserPassReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateUserPassReq

// string token = 1;
void UpdateUserPassReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserPassReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassReq.token)
  return token_.GetNoArena();
}
void UpdateUserPassReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserPassReq.token)
}
#if LANG_CXX11
void UpdateUserPassReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserPassReq.token)
}
#endif
void UpdateUserPassReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserPassReq.token)
}
void UpdateUserPassReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserPassReq.token)
}
::std::string* UpdateUserPassReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserPassReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserPassReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassReq.token)
}

// string mobile = 2;
void UpdateUserPassReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserPassReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassReq.mobile)
  return mobile_.GetNoArena();
}
void UpdateUserPassReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserPassReq.mobile)
}
#if LANG_CXX11
void UpdateUserPassReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserPassReq.mobile)
}
#endif
void UpdateUserPassReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserPassReq.mobile)
}
void UpdateUserPassReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserPassReq.mobile)
}
::std::string* UpdateUserPassReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserPassReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserPassReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassReq.mobile)
}

// string code = 3;
void UpdateUserPassReq::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserPassReq::code() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassReq.code)
  return code_.GetNoArena();
}
void UpdateUserPassReq::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserPassReq.code)
}
#if LANG_CXX11
void UpdateUserPassReq::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserPassReq.code)
}
#endif
void UpdateUserPassReq::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserPassReq.code)
}
void UpdateUserPassReq::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserPassReq.code)
}
::std::string* UpdateUserPassReq::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassReq.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserPassReq::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassReq.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserPassReq::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassReq.code)
}

// string pass = 4;
void UpdateUserPassReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserPassReq::pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassReq.pass)
  return pass_.GetNoArena();
}
void UpdateUserPassReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserPassReq.pass)
}
#if LANG_CXX11
void UpdateUserPassReq::set_pass(::std::string&& value) {
  
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserPassReq.pass)
}
#endif
void UpdateUserPassReq::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserPassReq.pass)
}
void UpdateUserPassReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserPassReq.pass)
}
::std::string* UpdateUserPassReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserPassReq::release_pass() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassReq.pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserPassReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassReq.pass)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUserPassRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUserPassRep::UpdateUserPassRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpdateUserPassRep)
}
UpdateUserPassRep::UpdateUserPassRep(const UpdateUserPassRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UpdateUserPassRep)
}

void UpdateUserPassRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

UpdateUserPassRep::~UpdateUserPassRep() {
  // @@protoc_insertion_point(destructor:ttmall.UpdateUserPassRep)
  SharedDtor();
}

void UpdateUserPassRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void UpdateUserPassRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateUserPassRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUserPassRep& UpdateUserPassRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateUserPassRep* UpdateUserPassRep::New(::google::protobuf::Arena* arena) const {
  UpdateUserPassRep* n = new UpdateUserPassRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateUserPassRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpdateUserPassRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool UpdateUserPassRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpdateUserPassRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.UserInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpdateUserPassRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpdateUserPassRep)
  return false;
#undef DO_
}

void UpdateUserPassRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpdateUserPassRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpdateUserPassRep)
}

::google::protobuf::uint8* UpdateUserPassRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpdateUserPassRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpdateUserPassRep)
  return target;
}

size_t UpdateUserPassRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpdateUserPassRep)
  size_t total_size = 0;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateUserPassRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpdateUserPassRep)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUserPassRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUserPassRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpdateUserPassRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpdateUserPassRep)
    MergeFrom(*source);
  }
}

void UpdateUserPassRep::MergeFrom(const UpdateUserPassRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpdateUserPassRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::UserInfo::MergeFrom(from.info());
  }
}

void UpdateUserPassRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpdateUserPassRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUserPassRep::CopyFrom(const UpdateUserPassRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpdateUserPassRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserPassRep::IsInitialized() const {
  return true;
}

void UpdateUserPassRep::Swap(UpdateUserPassRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUserPassRep::InternalSwap(UpdateUserPassRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateUserPassRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateUserPassRep

// .ttmall.UserInfo info = 1;
bool UpdateUserPassRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void UpdateUserPassRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::UserInfo& UpdateUserPassRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
::ttmall::UserInfo* UpdateUserPassRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassRep.info)
  return info_;
}
::ttmall::UserInfo* UpdateUserPassRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void UpdateUserPassRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUserInfoReq::kTokenFieldNumber;
const int UpdateUserInfoReq::kAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUserInfoReq::UpdateUserInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpdateUserInfoReq)
}
UpdateUserInfoReq::UpdateUserInfoReq(const UpdateUserInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar().size() > 0) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UpdateUserInfoReq)
}

void UpdateUserInfoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateUserInfoReq::~UpdateUserInfoReq() {
  // @@protoc_insertion_point(destructor:ttmall.UpdateUserInfoReq)
  SharedDtor();
}

void UpdateUserInfoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateUserInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateUserInfoReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUserInfoReq& UpdateUserInfoReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateUserInfoReq* UpdateUserInfoReq::New(::google::protobuf::Arena* arena) const {
  UpdateUserInfoReq* n = new UpdateUserInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateUserInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpdateUserInfoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UpdateUserInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpdateUserInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserInfoReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes avatar = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpdateUserInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpdateUserInfoReq)
  return false;
#undef DO_
}

void UpdateUserInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpdateUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserInfoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // bytes avatar = 2;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->avatar(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpdateUserInfoReq)
}

::google::protobuf::uint8* UpdateUserInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpdateUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserInfoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // bytes avatar = 2;
  if (this->avatar().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->avatar(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpdateUserInfoReq)
  return target;
}

size_t UpdateUserInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpdateUserInfoReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // bytes avatar = 2;
  if (this->avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->avatar());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateUserInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpdateUserInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUserInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUserInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpdateUserInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpdateUserInfoReq)
    MergeFrom(*source);
  }
}

void UpdateUserInfoReq::MergeFrom(const UpdateUserInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpdateUserInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.avatar().size() > 0) {

    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
}

void UpdateUserInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpdateUserInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUserInfoReq::CopyFrom(const UpdateUserInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpdateUserInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserInfoReq::IsInitialized() const {
  return true;
}

void UpdateUserInfoReq::Swap(UpdateUserInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUserInfoReq::InternalSwap(UpdateUserInfoReq* other) {
  token_.Swap(&other->token_);
  avatar_.Swap(&other->avatar_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateUserInfoReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateUserInfoReq

// string token = 1;
void UpdateUserInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserInfoReq.token)
  return token_.GetNoArena();
}
void UpdateUserInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserInfoReq.token)
}
#if LANG_CXX11
void UpdateUserInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserInfoReq.token)
}
#endif
void UpdateUserInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserInfoReq.token)
}
void UpdateUserInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserInfoReq.token)
}
::std::string* UpdateUserInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserInfoReq.token)
}

// bytes avatar = 2;
void UpdateUserInfoReq::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserInfoReq::avatar() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserInfoReq.avatar)
  return avatar_.GetNoArena();
}
void UpdateUserInfoReq::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserInfoReq.avatar)
}
#if LANG_CXX11
void UpdateUserInfoReq::set_avatar(::std::string&& value) {
  
  avatar_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserInfoReq.avatar)
}
#endif
void UpdateUserInfoReq::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserInfoReq.avatar)
}
void UpdateUserInfoReq::set_avatar(const void* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserInfoReq.avatar)
}
::std::string* UpdateUserInfoReq::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserInfoReq.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserInfoReq::release_avatar() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserInfoReq.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserInfoReq::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserInfoReq.avatar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUserInfoRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUserInfoRep::UpdateUserInfoRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpdateUserInfoRep)
}
UpdateUserInfoRep::UpdateUserInfoRep(const UpdateUserInfoRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UpdateUserInfoRep)
}

void UpdateUserInfoRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

UpdateUserInfoRep::~UpdateUserInfoRep() {
  // @@protoc_insertion_point(destructor:ttmall.UpdateUserInfoRep)
  SharedDtor();
}

void UpdateUserInfoRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void UpdateUserInfoRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateUserInfoRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUserInfoRep& UpdateUserInfoRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateUserInfoRep* UpdateUserInfoRep::New(::google::protobuf::Arena* arena) const {
  UpdateUserInfoRep* n = new UpdateUserInfoRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateUserInfoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpdateUserInfoRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool UpdateUserInfoRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpdateUserInfoRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.UserInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpdateUserInfoRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpdateUserInfoRep)
  return false;
#undef DO_
}

void UpdateUserInfoRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpdateUserInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpdateUserInfoRep)
}

::google::protobuf::uint8* UpdateUserInfoRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpdateUserInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpdateUserInfoRep)
  return target;
}

size_t UpdateUserInfoRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpdateUserInfoRep)
  size_t total_size = 0;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateUserInfoRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpdateUserInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUserInfoRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUserInfoRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpdateUserInfoRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpdateUserInfoRep)
    MergeFrom(*source);
  }
}

void UpdateUserInfoRep::MergeFrom(const UpdateUserInfoRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpdateUserInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::UserInfo::MergeFrom(from.info());
  }
}

void UpdateUserInfoRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpdateUserInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUserInfoRep::CopyFrom(const UpdateUserInfoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpdateUserInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserInfoRep::IsInitialized() const {
  return true;
}

void UpdateUserInfoRep::Swap(UpdateUserInfoRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUserInfoRep::InternalSwap(UpdateUserInfoRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateUserInfoRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateUserInfoRep

// .ttmall.UserInfo info = 1;
bool UpdateUserInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void UpdateUserInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::UserInfo& UpdateUserInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
::ttmall::UserInfo* UpdateUserInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserInfoRep.info)
  return info_;
}
::ttmall::UserInfo* UpdateUserInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserInfoRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void UpdateUserInfoRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserInfoRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUserMobileReq::kLoginTokenFieldNumber;
const int UpdateUserMobileReq::kLoginPassFieldNumber;
const int UpdateUserMobileReq::kMobileTokenFieldNumber;
const int UpdateUserMobileReq::kMobileCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUserMobileReq::UpdateUserMobileReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpdateUserMobileReq)
}
UpdateUserMobileReq::UpdateUserMobileReq(const UpdateUserMobileReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  login_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_token().size() > 0) {
    login_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_token_);
  }
  login_pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_pass().size() > 0) {
    login_pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_pass_);
  }
  mobile_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile_token().size() > 0) {
    mobile_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_token_);
  }
  mobile_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mobile_code().size() > 0) {
    mobile_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_code_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UpdateUserMobileReq)
}

void UpdateUserMobileReq::SharedCtor() {
  login_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateUserMobileReq::~UpdateUserMobileReq() {
  // @@protoc_insertion_point(destructor:ttmall.UpdateUserMobileReq)
  SharedDtor();
}

void UpdateUserMobileReq::SharedDtor() {
  login_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateUserMobileReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateUserMobileReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUserMobileReq& UpdateUserMobileReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateUserMobileReq* UpdateUserMobileReq::New(::google::protobuf::Arena* arena) const {
  UpdateUserMobileReq* n = new UpdateUserMobileReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateUserMobileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpdateUserMobileReq)
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UpdateUserMobileReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpdateUserMobileReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string login_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_token().data(), this->login_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserMobileReq.login_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_pass = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_pass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_pass().data(), this->login_pass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserMobileReq.login_pass"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile_token().data(), this->mobile_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserMobileReq.mobile_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mobile_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mobile_code().data(), this->mobile_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.UpdateUserMobileReq.mobile_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpdateUserMobileReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpdateUserMobileReq)
  return false;
#undef DO_
}

void UpdateUserMobileReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpdateUserMobileReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_token = 1;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserMobileReq.login_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->login_token(), output);
  }

  // string login_pass = 2;
  if (this->login_pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_pass().data(), this->login_pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserMobileReq.login_pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->login_pass(), output);
  }

  // string mobile_token = 3;
  if (this->mobile_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile_token().data(), this->mobile_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserMobileReq.mobile_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mobile_token(), output);
  }

  // string mobile_code = 4;
  if (this->mobile_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile_code().data(), this->mobile_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserMobileReq.mobile_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mobile_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpdateUserMobileReq)
}

::google::protobuf::uint8* UpdateUserMobileReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpdateUserMobileReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string login_token = 1;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserMobileReq.login_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->login_token(), target);
  }

  // string login_pass = 2;
  if (this->login_pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_pass().data(), this->login_pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserMobileReq.login_pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->login_pass(), target);
  }

  // string mobile_token = 3;
  if (this->mobile_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile_token().data(), this->mobile_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserMobileReq.mobile_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mobile_token(), target);
  }

  // string mobile_code = 4;
  if (this->mobile_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mobile_code().data(), this->mobile_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.UpdateUserMobileReq.mobile_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mobile_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpdateUserMobileReq)
  return target;
}

size_t UpdateUserMobileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpdateUserMobileReq)
  size_t total_size = 0;

  // string login_token = 1;
  if (this->login_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_token());
  }

  // string login_pass = 2;
  if (this->login_pass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_pass());
  }

  // string mobile_token = 3;
  if (this->mobile_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile_token());
  }

  // string mobile_code = 4;
  if (this->mobile_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mobile_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateUserMobileReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpdateUserMobileReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUserMobileReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUserMobileReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpdateUserMobileReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpdateUserMobileReq)
    MergeFrom(*source);
  }
}

void UpdateUserMobileReq::MergeFrom(const UpdateUserMobileReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpdateUserMobileReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login_token().size() > 0) {

    login_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_token_);
  }
  if (from.login_pass().size() > 0) {

    login_pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_pass_);
  }
  if (from.mobile_token().size() > 0) {

    mobile_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_token_);
  }
  if (from.mobile_code().size() > 0) {

    mobile_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_code_);
  }
}

void UpdateUserMobileReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpdateUserMobileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUserMobileReq::CopyFrom(const UpdateUserMobileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpdateUserMobileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserMobileReq::IsInitialized() const {
  return true;
}

void UpdateUserMobileReq::Swap(UpdateUserMobileReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUserMobileReq::InternalSwap(UpdateUserMobileReq* other) {
  login_token_.Swap(&other->login_token_);
  login_pass_.Swap(&other->login_pass_);
  mobile_token_.Swap(&other->mobile_token_);
  mobile_code_.Swap(&other->mobile_code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateUserMobileReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateUserMobileReq

// string login_token = 1;
void UpdateUserMobileReq::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserMobileReq::login_token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileReq.login_token)
  return login_token_.GetNoArena();
}
void UpdateUserMobileReq::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserMobileReq.login_token)
}
#if LANG_CXX11
void UpdateUserMobileReq::set_login_token(::std::string&& value) {
  
  login_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserMobileReq.login_token)
}
#endif
void UpdateUserMobileReq::set_login_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserMobileReq.login_token)
}
void UpdateUserMobileReq::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserMobileReq.login_token)
}
::std::string* UpdateUserMobileReq::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileReq.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserMobileReq::release_login_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileReq.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserMobileReq::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileReq.login_token)
}

// string login_pass = 2;
void UpdateUserMobileReq::clear_login_pass() {
  login_pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserMobileReq::login_pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileReq.login_pass)
  return login_pass_.GetNoArena();
}
void UpdateUserMobileReq::set_login_pass(const ::std::string& value) {
  
  login_pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserMobileReq.login_pass)
}
#if LANG_CXX11
void UpdateUserMobileReq::set_login_pass(::std::string&& value) {
  
  login_pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserMobileReq.login_pass)
}
#endif
void UpdateUserMobileReq::set_login_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  login_pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserMobileReq.login_pass)
}
void UpdateUserMobileReq::set_login_pass(const char* value, size_t size) {
  
  login_pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserMobileReq.login_pass)
}
::std::string* UpdateUserMobileReq::mutable_login_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileReq.login_pass)
  return login_pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserMobileReq::release_login_pass() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileReq.login_pass)
  
  return login_pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserMobileReq::set_allocated_login_pass(::std::string* login_pass) {
  if (login_pass != NULL) {
    
  } else {
    
  }
  login_pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileReq.login_pass)
}

// string mobile_token = 3;
void UpdateUserMobileReq::clear_mobile_token() {
  mobile_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserMobileReq::mobile_token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileReq.mobile_token)
  return mobile_token_.GetNoArena();
}
void UpdateUserMobileReq::set_mobile_token(const ::std::string& value) {
  
  mobile_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserMobileReq.mobile_token)
}
#if LANG_CXX11
void UpdateUserMobileReq::set_mobile_token(::std::string&& value) {
  
  mobile_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserMobileReq.mobile_token)
}
#endif
void UpdateUserMobileReq::set_mobile_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserMobileReq.mobile_token)
}
void UpdateUserMobileReq::set_mobile_token(const char* value, size_t size) {
  
  mobile_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserMobileReq.mobile_token)
}
::std::string* UpdateUserMobileReq::mutable_mobile_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileReq.mobile_token)
  return mobile_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserMobileReq::release_mobile_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileReq.mobile_token)
  
  return mobile_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserMobileReq::set_allocated_mobile_token(::std::string* mobile_token) {
  if (mobile_token != NULL) {
    
  } else {
    
  }
  mobile_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile_token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileReq.mobile_token)
}

// string mobile_code = 4;
void UpdateUserMobileReq::clear_mobile_code() {
  mobile_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateUserMobileReq::mobile_code() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileReq.mobile_code)
  return mobile_code_.GetNoArena();
}
void UpdateUserMobileReq::set_mobile_code(const ::std::string& value) {
  
  mobile_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserMobileReq.mobile_code)
}
#if LANG_CXX11
void UpdateUserMobileReq::set_mobile_code(::std::string&& value) {
  
  mobile_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserMobileReq.mobile_code)
}
#endif
void UpdateUserMobileReq::set_mobile_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserMobileReq.mobile_code)
}
void UpdateUserMobileReq::set_mobile_code(const char* value, size_t size) {
  
  mobile_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserMobileReq.mobile_code)
}
::std::string* UpdateUserMobileReq::mutable_mobile_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileReq.mobile_code)
  return mobile_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateUserMobileReq::release_mobile_code() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileReq.mobile_code)
  
  return mobile_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateUserMobileReq::set_allocated_mobile_code(::std::string* mobile_code) {
  if (mobile_code != NULL) {
    
  } else {
    
  }
  mobile_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile_code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileReq.mobile_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateUserMobileRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateUserMobileRep::UpdateUserMobileRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.UpdateUserMobileRep)
}
UpdateUserMobileRep::UpdateUserMobileRep(const UpdateUserMobileRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::UserInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.UpdateUserMobileRep)
}

void UpdateUserMobileRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

UpdateUserMobileRep::~UpdateUserMobileRep() {
  // @@protoc_insertion_point(destructor:ttmall.UpdateUserMobileRep)
  SharedDtor();
}

void UpdateUserMobileRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void UpdateUserMobileRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateUserMobileRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateUserMobileRep& UpdateUserMobileRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateUserMobileRep* UpdateUserMobileRep::New(::google::protobuf::Arena* arena) const {
  UpdateUserMobileRep* n = new UpdateUserMobileRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateUserMobileRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.UpdateUserMobileRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool UpdateUserMobileRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.UpdateUserMobileRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.UserInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.UpdateUserMobileRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.UpdateUserMobileRep)
  return false;
#undef DO_
}

void UpdateUserMobileRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.UpdateUserMobileRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.UpdateUserMobileRep)
}

::google::protobuf::uint8* UpdateUserMobileRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.UpdateUserMobileRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.UpdateUserMobileRep)
  return target;
}

size_t UpdateUserMobileRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.UpdateUserMobileRep)
  size_t total_size = 0;

  // .ttmall.UserInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateUserMobileRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.UpdateUserMobileRep)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateUserMobileRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateUserMobileRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.UpdateUserMobileRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.UpdateUserMobileRep)
    MergeFrom(*source);
  }
}

void UpdateUserMobileRep::MergeFrom(const UpdateUserMobileRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.UpdateUserMobileRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::UserInfo::MergeFrom(from.info());
  }
}

void UpdateUserMobileRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.UpdateUserMobileRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateUserMobileRep::CopyFrom(const UpdateUserMobileRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.UpdateUserMobileRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserMobileRep::IsInitialized() const {
  return true;
}

void UpdateUserMobileRep::Swap(UpdateUserMobileRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateUserMobileRep::InternalSwap(UpdateUserMobileRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateUserMobileRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateUserMobileRep

// .ttmall.UserInfo info = 1;
bool UpdateUserMobileRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void UpdateUserMobileRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::UserInfo& UpdateUserMobileRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
::ttmall::UserInfo* UpdateUserMobileRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileRep.info)
  return info_;
}
::ttmall::UserInfo* UpdateUserMobileRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void UpdateUserMobileRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrderDeliveryInfoReq::kTokenFieldNumber;
const int GetOrderDeliveryInfoReq::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrderDeliveryInfoReq::GetOrderDeliveryInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetOrderDeliveryInfoReq)
}
GetOrderDeliveryInfoReq::GetOrderDeliveryInfoReq(const GetOrderDeliveryInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_id().size() > 0) {
    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetOrderDeliveryInfoReq)
}

void GetOrderDeliveryInfoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOrderDeliveryInfoReq::~GetOrderDeliveryInfoReq() {
  // @@protoc_insertion_point(destructor:ttmall.GetOrderDeliveryInfoReq)
  SharedDtor();
}

void GetOrderDeliveryInfoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOrderDeliveryInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOrderDeliveryInfoReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrderDeliveryInfoReq& GetOrderDeliveryInfoReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOrderDeliveryInfoReq* GetOrderDeliveryInfoReq::New(::google::protobuf::Arena* arena) const {
  GetOrderDeliveryInfoReq* n = new GetOrderDeliveryInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOrderDeliveryInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetOrderDeliveryInfoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOrderDeliveryInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetOrderDeliveryInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetOrderDeliveryInfoReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_id().data(), this->order_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetOrderDeliveryInfoReq.order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetOrderDeliveryInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetOrderDeliveryInfoReq)
  return false;
#undef DO_
}

void GetOrderDeliveryInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetOrderDeliveryInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetOrderDeliveryInfoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetOrderDeliveryInfoReq.order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->order_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetOrderDeliveryInfoReq)
}

::google::protobuf::uint8* GetOrderDeliveryInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetOrderDeliveryInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetOrderDeliveryInfoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetOrderDeliveryInfoReq.order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->order_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetOrderDeliveryInfoReq)
  return target;
}

size_t GetOrderDeliveryInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetOrderDeliveryInfoReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOrderDeliveryInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetOrderDeliveryInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrderDeliveryInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrderDeliveryInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetOrderDeliveryInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetOrderDeliveryInfoReq)
    MergeFrom(*source);
  }
}

void GetOrderDeliveryInfoReq::MergeFrom(const GetOrderDeliveryInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetOrderDeliveryInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.order_id().size() > 0) {

    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
}

void GetOrderDeliveryInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetOrderDeliveryInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrderDeliveryInfoReq::CopyFrom(const GetOrderDeliveryInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetOrderDeliveryInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrderDeliveryInfoReq::IsInitialized() const {
  return true;
}

void GetOrderDeliveryInfoReq::Swap(GetOrderDeliveryInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrderDeliveryInfoReq::InternalSwap(GetOrderDeliveryInfoReq* other) {
  token_.Swap(&other->token_);
  order_id_.Swap(&other->order_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOrderDeliveryInfoReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOrderDeliveryInfoReq

// string token = 1;
void GetOrderDeliveryInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOrderDeliveryInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderDeliveryInfoReq.token)
  return token_.GetNoArena();
}
void GetOrderDeliveryInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetOrderDeliveryInfoReq.token)
}
#if LANG_CXX11
void GetOrderDeliveryInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetOrderDeliveryInfoReq.token)
}
#endif
void GetOrderDeliveryInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetOrderDeliveryInfoReq.token)
}
void GetOrderDeliveryInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetOrderDeliveryInfoReq.token)
}
::std::string* GetOrderDeliveryInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderDeliveryInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOrderDeliveryInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderDeliveryInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOrderDeliveryInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderDeliveryInfoReq.token)
}

// string order_id = 2;
void GetOrderDeliveryInfoReq::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOrderDeliveryInfoReq::order_id() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderDeliveryInfoReq.order_id)
  return order_id_.GetNoArena();
}
void GetOrderDeliveryInfoReq::set_order_id(const ::std::string& value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetOrderDeliveryInfoReq.order_id)
}
#if LANG_CXX11
void GetOrderDeliveryInfoReq::set_order_id(::std::string&& value) {
  
  order_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetOrderDeliveryInfoReq.order_id)
}
#endif
void GetOrderDeliveryInfoReq::set_order_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetOrderDeliveryInfoReq.order_id)
}
void GetOrderDeliveryInfoReq::set_order_id(const char* value, size_t size) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetOrderDeliveryInfoReq.order_id)
}
::std::string* GetOrderDeliveryInfoReq::mutable_order_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderDeliveryInfoReq.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOrderDeliveryInfoReq::release_order_id() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderDeliveryInfoReq.order_id)
  
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOrderDeliveryInfoReq::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    
  } else {
    
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderDeliveryInfoReq.order_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderDeliveryInfo::kIdFieldNumber;
const int OrderDeliveryInfo::kItemsFieldNumber;
const int OrderDeliveryInfo::kStateFieldNumber;
const int OrderDeliveryInfo::kDriverFieldNumber;
const int OrderDeliveryInfo::kSignTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderDeliveryInfo::OrderDeliveryInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.OrderDeliveryInfo)
}
OrderDeliveryInfo::OrderDeliveryInfo(const OrderDeliveryInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_driver()) {
    driver_ = new ::ttmall::DriverInfo(*from.driver_);
  } else {
    driver_ = NULL;
  }
  ::memcpy(&sign_time_, &from.sign_time_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&sign_time_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ttmall.OrderDeliveryInfo)
}

void OrderDeliveryInfo::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&driver_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&driver_) + sizeof(state_));
  _cached_size_ = 0;
}

OrderDeliveryInfo::~OrderDeliveryInfo() {
  // @@protoc_insertion_point(destructor:ttmall.OrderDeliveryInfo)
  SharedDtor();
}

void OrderDeliveryInfo::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete driver_;
  }
}

void OrderDeliveryInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderDeliveryInfo::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderDeliveryInfo& OrderDeliveryInfo::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrderDeliveryInfo* OrderDeliveryInfo::New(::google::protobuf::Arena* arena) const {
  OrderDeliveryInfo* n = new OrderDeliveryInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderDeliveryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.OrderDeliveryInfo)
  items_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && driver_ != NULL) {
    delete driver_;
  }
  driver_ = NULL;
  ::memset(&sign_time_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&sign_time_) + sizeof(state_));
}

bool OrderDeliveryInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.OrderDeliveryInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.OrderDeliveryInfo.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttmall.OrderItem items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.DeliveryState state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::ttmall::DeliveryState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ttmall.DriverInfo driver = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_driver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sign_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sign_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.OrderDeliveryInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.OrderDeliveryInfo)
  return false;
#undef DO_
}

void OrderDeliveryInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.OrderDeliveryInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OrderDeliveryInfo.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated .ttmall.OrderItem items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // .ttmall.DeliveryState state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // .ttmall.DriverInfo driver = 4;
  if (this->has_driver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->driver_, output);
  }

  // int64 sign_time = 5;
  if (this->sign_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->sign_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.OrderDeliveryInfo)
}

::google::protobuf::uint8* OrderDeliveryInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.OrderDeliveryInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.OrderDeliveryInfo.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated .ttmall.OrderItem items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->items(i), deterministic, target);
  }

  // .ttmall.DeliveryState state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // .ttmall.DriverInfo driver = 4;
  if (this->has_driver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->driver_, deterministic, target);
  }

  // int64 sign_time = 5;
  if (this->sign_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->sign_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.OrderDeliveryInfo)
  return target;
}

size_t OrderDeliveryInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.OrderDeliveryInfo)
  size_t total_size = 0;

  // repeated .ttmall.OrderItem items = 2;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .ttmall.DriverInfo driver = 4;
  if (this->has_driver()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->driver_);
  }

  // int64 sign_time = 5;
  if (this->sign_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sign_time());
  }

  // .ttmall.DeliveryState state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderDeliveryInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.OrderDeliveryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderDeliveryInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderDeliveryInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.OrderDeliveryInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.OrderDeliveryInfo)
    MergeFrom(*source);
  }
}

void OrderDeliveryInfo::MergeFrom(const OrderDeliveryInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.OrderDeliveryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_driver()) {
    mutable_driver()->::ttmall::DriverInfo::MergeFrom(from.driver());
  }
  if (from.sign_time() != 0) {
    set_sign_time(from.sign_time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void OrderDeliveryInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.OrderDeliveryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderDeliveryInfo::CopyFrom(const OrderDeliveryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.OrderDeliveryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderDeliveryInfo::IsInitialized() const {
  return true;
}

void OrderDeliveryInfo::Swap(OrderDeliveryInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderDeliveryInfo::InternalSwap(OrderDeliveryInfo* other) {
  items_.InternalSwap(&other->items_);
  id_.Swap(&other->id_);
  std::swap(driver_, other->driver_);
  std::swap(sign_time_, other->sign_time_);
  std::swap(state_, other->state_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderDeliveryInfo::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderDeliveryInfo

// string id = 1;
void OrderDeliveryInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderDeliveryInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.id)
  return id_.GetNoArena();
}
void OrderDeliveryInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OrderDeliveryInfo.id)
}
#if LANG_CXX11
void OrderDeliveryInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OrderDeliveryInfo.id)
}
#endif
void OrderDeliveryInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OrderDeliveryInfo.id)
}
void OrderDeliveryInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OrderDeliveryInfo.id)
}
::std::string* OrderDeliveryInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OrderDeliveryInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderDeliveryInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.OrderDeliveryInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderDeliveryInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderDeliveryInfo.id)
}

// repeated .ttmall.OrderItem items = 2;
int OrderDeliveryInfo::items_size() const {
  return items_.size();
}
void OrderDeliveryInfo::clear_items() {
  items_.Clear();
}
const ::ttmall::OrderItem& OrderDeliveryInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.items)
  return items_.Get(index);
}
::ttmall::OrderItem* OrderDeliveryInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.OrderDeliveryInfo.items)
  return items_.Mutable(index);
}
::ttmall::OrderItem* OrderDeliveryInfo::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.OrderDeliveryInfo.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
OrderDeliveryInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.OrderDeliveryInfo.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
OrderDeliveryInfo::items() const {
  // @@protoc_insertion_point(field_list:ttmall.OrderDeliveryInfo.items)
  return items_;
}

// .ttmall.DeliveryState state = 3;
void OrderDeliveryInfo::clear_state() {
  state_ = 0;
}
::ttmall::DeliveryState OrderDeliveryInfo::state() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.state)
  return static_cast< ::ttmall::DeliveryState >(state_);
}
void OrderDeliveryInfo::set_state(::ttmall::DeliveryState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderDeliveryInfo.state)
}

// .ttmall.DriverInfo driver = 4;
bool OrderDeliveryInfo::has_driver() const {
  return this != internal_default_instance() && driver_ != NULL;
}
void OrderDeliveryInfo::clear_driver() {
  if (GetArenaNoVirtual() == NULL && driver_ != NULL) delete driver_;
  driver_ = NULL;
}
const ::ttmall::DriverInfo& OrderDeliveryInfo::driver() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.driver)
  return driver_ != NULL ? *driver_
                         : *::ttmall::DriverInfo::internal_default_instance();
}
::ttmall::DriverInfo* OrderDeliveryInfo::mutable_driver() {
  
  if (driver_ == NULL) {
    driver_ = new ::ttmall::DriverInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderDeliveryInfo.driver)
  return driver_;
}
::ttmall::DriverInfo* OrderDeliveryInfo::release_driver() {
  // @@protoc_insertion_point(field_release:ttmall.OrderDeliveryInfo.driver)
  
  ::ttmall::DriverInfo* temp = driver_;
  driver_ = NULL;
  return temp;
}
void OrderDeliveryInfo::set_allocated_driver(::ttmall::DriverInfo* driver) {
  delete driver_;
  driver_ = driver;
  if (driver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderDeliveryInfo.driver)
}

// int64 sign_time = 5;
void OrderDeliveryInfo::clear_sign_time() {
  sign_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 OrderDeliveryInfo::sign_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.sign_time)
  return sign_time_;
}
void OrderDeliveryInfo::set_sign_time(::google::protobuf::int64 value) {
  
  sign_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderDeliveryInfo.sign_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrderDeliveryInfoRep::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrderDeliveryInfoRep::GetOrderDeliveryInfoRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetOrderDeliveryInfoRep)
}
GetOrderDeliveryInfoRep::GetOrderDeliveryInfoRep(const GetOrderDeliveryInfoRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infos_(from.infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ttmall.GetOrderDeliveryInfoRep)
}

void GetOrderDeliveryInfoRep::SharedCtor() {
  _cached_size_ = 0;
}

GetOrderDeliveryInfoRep::~GetOrderDeliveryInfoRep() {
  // @@protoc_insertion_point(destructor:ttmall.GetOrderDeliveryInfoRep)
  SharedDtor();
}

void GetOrderDeliveryInfoRep::SharedDtor() {
}

void GetOrderDeliveryInfoRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOrderDeliveryInfoRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrderDeliveryInfoRep& GetOrderDeliveryInfoRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOrderDeliveryInfoRep* GetOrderDeliveryInfoRep::New(::google::protobuf::Arena* arena) const {
  GetOrderDeliveryInfoRep* n = new GetOrderDeliveryInfoRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOrderDeliveryInfoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetOrderDeliveryInfoRep)
  infos_.Clear();
}

bool GetOrderDeliveryInfoRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetOrderDeliveryInfoRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ttmall.OrderDeliveryInfo infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetOrderDeliveryInfoRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetOrderDeliveryInfoRep)
  return false;
#undef DO_
}

void GetOrderDeliveryInfoRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetOrderDeliveryInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.OrderDeliveryInfo infos = 1;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetOrderDeliveryInfoRep)
}

::google::protobuf::uint8* GetOrderDeliveryInfoRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetOrderDeliveryInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ttmall.OrderDeliveryInfo infos = 1;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->infos(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetOrderDeliveryInfoRep)
  return target;
}

size_t GetOrderDeliveryInfoRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetOrderDeliveryInfoRep)
  size_t total_size = 0;

  // repeated .ttmall.OrderDeliveryInfo infos = 1;
  {
    unsigned int count = this->infos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infos(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOrderDeliveryInfoRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetOrderDeliveryInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrderDeliveryInfoRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrderDeliveryInfoRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetOrderDeliveryInfoRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetOrderDeliveryInfoRep)
    MergeFrom(*source);
  }
}

void GetOrderDeliveryInfoRep::MergeFrom(const GetOrderDeliveryInfoRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetOrderDeliveryInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
}

void GetOrderDeliveryInfoRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetOrderDeliveryInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrderDeliveryInfoRep::CopyFrom(const GetOrderDeliveryInfoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetOrderDeliveryInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrderDeliveryInfoRep::IsInitialized() const {
  return true;
}

void GetOrderDeliveryInfoRep::Swap(GetOrderDeliveryInfoRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrderDeliveryInfoRep::InternalSwap(GetOrderDeliveryInfoRep* other) {
  infos_.InternalSwap(&other->infos_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOrderDeliveryInfoRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOrderDeliveryInfoRep

// repeated .ttmall.OrderDeliveryInfo infos = 1;
int GetOrderDeliveryInfoRep::infos_size() const {
  return infos_.size();
}
void GetOrderDeliveryInfoRep::clear_infos() {
  infos_.Clear();
}
const ::ttmall::OrderDeliveryInfo& GetOrderDeliveryInfoRep::infos(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderDeliveryInfoRep.infos)
  return infos_.Get(index);
}
::ttmall::OrderDeliveryInfo* GetOrderDeliveryInfoRep::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderDeliveryInfoRep.infos)
  return infos_.Mutable(index);
}
::ttmall::OrderDeliveryInfo* GetOrderDeliveryInfoRep::add_infos() {
  // @@protoc_insertion_point(field_add:ttmall.GetOrderDeliveryInfoRep.infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::ttmall::OrderDeliveryInfo >*
GetOrderDeliveryInfoRep::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.GetOrderDeliveryInfoRep.infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderDeliveryInfo >&
GetOrderDeliveryInfoRep::infos() const {
  // @@protoc_insertion_point(field_list:ttmall.GetOrderDeliveryInfoRep.infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrderInfoReq::kTokenFieldNumber;
const int GetOrderInfoReq::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrderInfoReq::GetOrderInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetOrderInfoReq)
}
GetOrderInfoReq::GetOrderInfoReq(const GetOrderInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_id().size() > 0) {
    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetOrderInfoReq)
}

void GetOrderInfoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetOrderInfoReq::~GetOrderInfoReq() {
  // @@protoc_insertion_point(destructor:ttmall.GetOrderInfoReq)
  SharedDtor();
}

void GetOrderInfoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOrderInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOrderInfoReq::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrderInfoReq& GetOrderInfoReq::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOrderInfoReq* GetOrderInfoReq::New(::google::protobuf::Arena* arena) const {
  GetOrderInfoReq* n = new GetOrderInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOrderInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetOrderInfoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetOrderInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetOrderInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetOrderInfoReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_id().data(), this->order_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ttmall.GetOrderInfoReq.order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetOrderInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetOrderInfoReq)
  return false;
#undef DO_
}

void GetOrderInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetOrderInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetOrderInfoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetOrderInfoReq.order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->order_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetOrderInfoReq)
}

::google::protobuf::uint8* GetOrderInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetOrderInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetOrderInfoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ttmall.GetOrderInfoReq.order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->order_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetOrderInfoReq)
  return target;
}

size_t GetOrderInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetOrderInfoReq)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string order_id = 2;
  if (this->order_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOrderInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetOrderInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrderInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrderInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetOrderInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetOrderInfoReq)
    MergeFrom(*source);
  }
}

void GetOrderInfoReq::MergeFrom(const GetOrderInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetOrderInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.order_id().size() > 0) {

    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
}

void GetOrderInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetOrderInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrderInfoReq::CopyFrom(const GetOrderInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetOrderInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrderInfoReq::IsInitialized() const {
  return true;
}

void GetOrderInfoReq::Swap(GetOrderInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrderInfoReq::InternalSwap(GetOrderInfoReq* other) {
  token_.Swap(&other->token_);
  order_id_.Swap(&other->order_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOrderInfoReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOrderInfoReq

// string token = 1;
void GetOrderInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOrderInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderInfoReq.token)
  return token_.GetNoArena();
}
void GetOrderInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetOrderInfoReq.token)
}
#if LANG_CXX11
void GetOrderInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetOrderInfoReq.token)
}
#endif
void GetOrderInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetOrderInfoReq.token)
}
void GetOrderInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetOrderInfoReq.token)
}
::std::string* GetOrderInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOrderInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOrderInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderInfoReq.token)
}

// string order_id = 2;
void GetOrderInfoReq::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetOrderInfoReq::order_id() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderInfoReq.order_id)
  return order_id_.GetNoArena();
}
void GetOrderInfoReq::set_order_id(const ::std::string& value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetOrderInfoReq.order_id)
}
#if LANG_CXX11
void GetOrderInfoReq::set_order_id(::std::string&& value) {
  
  order_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetOrderInfoReq.order_id)
}
#endif
void GetOrderInfoReq::set_order_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetOrderInfoReq.order_id)
}
void GetOrderInfoReq::set_order_id(const char* value, size_t size) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetOrderInfoReq.order_id)
}
::std::string* GetOrderInfoReq::mutable_order_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderInfoReq.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetOrderInfoReq::release_order_id() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderInfoReq.order_id)
  
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetOrderInfoReq::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    
  } else {
    
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderInfoReq.order_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrderInfoRep::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrderInfoRep::GetOrderInfoRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_user_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttmall.GetOrderInfoRep)
}
GetOrderInfoRep::GetOrderInfoRep(const GetOrderInfoRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::ttmall::OrderInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ttmall.GetOrderInfoRep)
}

void GetOrderInfoRep::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

GetOrderInfoRep::~GetOrderInfoRep() {
  // @@protoc_insertion_point(destructor:ttmall.GetOrderInfoRep)
  SharedDtor();
}

void GetOrderInfoRep::SharedDtor() {
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void GetOrderInfoRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOrderInfoRep::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrderInfoRep& GetOrderInfoRep::default_instance() {
  protobuf_user_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOrderInfoRep* GetOrderInfoRep::New(::google::protobuf::Arena* arena) const {
  GetOrderInfoRep* n = new GetOrderInfoRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOrderInfoRep::Clear() {
// @@protoc_insertion_point(message_clear_start:ttmall.GetOrderInfoRep)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool GetOrderInfoRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttmall.GetOrderInfoRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ttmall.OrderInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttmall.GetOrderInfoRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttmall.GetOrderInfoRep)
  return false;
#undef DO_
}

void GetOrderInfoRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttmall.GetOrderInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:ttmall.GetOrderInfoRep)
}

::google::protobuf::uint8* GetOrderInfoRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ttmall.GetOrderInfoRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ttmall.GetOrderInfoRep)
  return target;
}

size_t GetOrderInfoRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttmall.GetOrderInfoRep)
  size_t total_size = 0;

  // .ttmall.OrderInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOrderInfoRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttmall.GetOrderInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrderInfoRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrderInfoRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttmall.GetOrderInfoRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttmall.GetOrderInfoRep)
    MergeFrom(*source);
  }
}

void GetOrderInfoRep::MergeFrom(const GetOrderInfoRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttmall.GetOrderInfoRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::ttmall::OrderInfo::MergeFrom(from.info());
  }
}

void GetOrderInfoRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttmall.GetOrderInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrderInfoRep::CopyFrom(const GetOrderInfoRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttmall.GetOrderInfoRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrderInfoRep::IsInitialized() const {
  return true;
}

void GetOrderInfoRep::Swap(GetOrderInfoRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrderInfoRep::InternalSwap(GetOrderInfoRep* other) {
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOrderInfoRep::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOrderInfoRep

// .ttmall.OrderInfo info = 1;
bool GetOrderInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void GetOrderInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::ttmall::OrderInfo& GetOrderInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
::ttmall::OrderInfo* GetOrderInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderInfoRep.info)
  return info_;
}
::ttmall::OrderInfo* GetOrderInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderInfoRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void GetOrderInfoRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderInfoRep.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ttmall

// @@protoc_insertion_point(global_scope)
