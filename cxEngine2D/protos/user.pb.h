// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#ifndef PROTOBUF_user_2eproto__INCLUDED
#define PROTOBUF_user_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "order.pb.h"
#include "public.pb.h"
#include "driver.pb.h"
// @@protoc_insertion_point(includes)
namespace ttmall {
class AddGoodsFavRep;
class AddGoodsFavRepDefaultTypeInternal;
extern AddGoodsFavRepDefaultTypeInternal _AddGoodsFavRep_default_instance_;
class AddGoodsFavReq;
class AddGoodsFavReqDefaultTypeInternal;
extern AddGoodsFavReqDefaultTypeInternal _AddGoodsFavReq_default_instance_;
class AddUserAddressRep;
class AddUserAddressRepDefaultTypeInternal;
extern AddUserAddressRepDefaultTypeInternal _AddUserAddressRep_default_instance_;
class AddUserAddressReq;
class AddUserAddressReqDefaultTypeInternal;
extern AddUserAddressReqDefaultTypeInternal _AddUserAddressReq_default_instance_;
class AddressInfo;
class AddressInfoDefaultTypeInternal;
extern AddressInfoDefaultTypeInternal _AddressInfo_default_instance_;
class AttrGroup;
class AttrGroupDefaultTypeInternal;
extern AttrGroupDefaultTypeInternal _AttrGroup_default_instance_;
class AttrInfo;
class AttrInfoDefaultTypeInternal;
extern AttrInfoDefaultTypeInternal _AttrInfo_default_instance_;
class BrandInfo;
class BrandInfoDefaultTypeInternal;
extern BrandInfoDefaultTypeInternal _BrandInfo_default_instance_;
class CancelOrderRep;
class CancelOrderRepDefaultTypeInternal;
extern CancelOrderRepDefaultTypeInternal _CancelOrderRep_default_instance_;
class CancelOrderReq;
class CancelOrderReqDefaultTypeInternal;
extern CancelOrderReqDefaultTypeInternal _CancelOrderReq_default_instance_;
class CarInfo;
class CarInfoDefaultTypeInternal;
extern CarInfoDefaultTypeInternal _CarInfo_default_instance_;
class CartGoodsInfo;
class CartGoodsInfoDefaultTypeInternal;
extern CartGoodsInfoDefaultTypeInternal _CartGoodsInfo_default_instance_;
class CheckUpdateRep;
class CheckUpdateRepDefaultTypeInternal;
extern CheckUpdateRepDefaultTypeInternal _CheckUpdateRep_default_instance_;
class CheckUpdateReq;
class CheckUpdateReqDefaultTypeInternal;
extern CheckUpdateReqDefaultTypeInternal _CheckUpdateReq_default_instance_;
class ConfirmDeliveryRep;
class ConfirmDeliveryRepDefaultTypeInternal;
extern ConfirmDeliveryRepDefaultTypeInternal _ConfirmDeliveryRep_default_instance_;
class ConfirmDeliveryReq;
class ConfirmDeliveryReqDefaultTypeInternal;
extern ConfirmDeliveryReqDefaultTypeInternal _ConfirmDeliveryReq_default_instance_;
class ConfirmOrderRep;
class ConfirmOrderRepDefaultTypeInternal;
extern ConfirmOrderRepDefaultTypeInternal _ConfirmOrderRep_default_instance_;
class ConfirmOrderReq;
class ConfirmOrderReqDefaultTypeInternal;
extern ConfirmOrderReqDefaultTypeInternal _ConfirmOrderReq_default_instance_;
class CoordInfo;
class CoordInfoDefaultTypeInternal;
extern CoordInfoDefaultTypeInternal _CoordInfo_default_instance_;
class CouponInfo;
class CouponInfoDefaultTypeInternal;
extern CouponInfoDefaultTypeInternal _CouponInfo_default_instance_;
class DelGoodsFavRep;
class DelGoodsFavRepDefaultTypeInternal;
extern DelGoodsFavRepDefaultTypeInternal _DelGoodsFavRep_default_instance_;
class DelGoodsFavReq;
class DelGoodsFavReqDefaultTypeInternal;
extern DelGoodsFavReqDefaultTypeInternal _DelGoodsFavReq_default_instance_;
class DelUserAddrRep;
class DelUserAddrRepDefaultTypeInternal;
extern DelUserAddrRepDefaultTypeInternal _DelUserAddrRep_default_instance_;
class DelUserAddrReq;
class DelUserAddrReqDefaultTypeInternal;
extern DelUserAddrReqDefaultTypeInternal _DelUserAddrReq_default_instance_;
class DeleteMessageRep;
class DeleteMessageRepDefaultTypeInternal;
extern DeleteMessageRepDefaultTypeInternal _DeleteMessageRep_default_instance_;
class DeleteMessageReq;
class DeleteMessageReqDefaultTypeInternal;
extern DeleteMessageReqDefaultTypeInternal _DeleteMessageReq_default_instance_;
class DeliverTimeInfo;
class DeliverTimeInfoDefaultTypeInternal;
extern DeliverTimeInfoDefaultTypeInternal _DeliverTimeInfo_default_instance_;
class DeliveryGoods;
class DeliveryGoodsDefaultTypeInternal;
extern DeliveryGoodsDefaultTypeInternal _DeliveryGoods_default_instance_;
class DeliveryNode;
class DeliveryNodeDefaultTypeInternal;
extern DeliveryNodeDefaultTypeInternal _DeliveryNode_default_instance_;
class DeliveryOrderInfoRep;
class DeliveryOrderInfoRepDefaultTypeInternal;
extern DeliveryOrderInfoRepDefaultTypeInternal _DeliveryOrderInfoRep_default_instance_;
class DeliveryOrderInfoReq;
class DeliveryOrderInfoReqDefaultTypeInternal;
extern DeliveryOrderInfoReqDefaultTypeInternal _DeliveryOrderInfoReq_default_instance_;
class DriverInfo;
class DriverInfoDefaultTypeInternal;
extern DriverInfoDefaultTypeInternal _DriverInfo_default_instance_;
class DriverLoginRep;
class DriverLoginRepDefaultTypeInternal;
extern DriverLoginRepDefaultTypeInternal _DriverLoginRep_default_instance_;
class DriverLoginReq;
class DriverLoginReqDefaultTypeInternal;
extern DriverLoginReqDefaultTypeInternal _DriverLoginReq_default_instance_;
class DriverRegisterRep;
class DriverRegisterRepDefaultTypeInternal;
extern DriverRegisterRepDefaultTypeInternal _DriverRegisterRep_default_instance_;
class DriverRegisterReq;
class DriverRegisterReqDefaultTypeInternal;
extern DriverRegisterReqDefaultTypeInternal _DriverRegisterReq_default_instance_;
class ExtInfo;
class ExtInfoDefaultTypeInternal;
extern ExtInfoDefaultTypeInternal _ExtInfo_default_instance_;
class GetDriverInfoRep;
class GetDriverInfoRepDefaultTypeInternal;
extern GetDriverInfoRepDefaultTypeInternal _GetDriverInfoRep_default_instance_;
class GetDriverInfoReq;
class GetDriverInfoReqDefaultTypeInternal;
extern GetDriverInfoReqDefaultTypeInternal _GetDriverInfoReq_default_instance_;
class GetNewMessageRep;
class GetNewMessageRepDefaultTypeInternal;
extern GetNewMessageRepDefaultTypeInternal _GetNewMessageRep_default_instance_;
class GetNewMessageReq;
class GetNewMessageReqDefaultTypeInternal;
extern GetNewMessageReqDefaultTypeInternal _GetNewMessageReq_default_instance_;
class GetOrderDeliveryInfoRep;
class GetOrderDeliveryInfoRepDefaultTypeInternal;
extern GetOrderDeliveryInfoRepDefaultTypeInternal _GetOrderDeliveryInfoRep_default_instance_;
class GetOrderDeliveryInfoReq;
class GetOrderDeliveryInfoReqDefaultTypeInternal;
extern GetOrderDeliveryInfoReqDefaultTypeInternal _GetOrderDeliveryInfoReq_default_instance_;
class GetOrderInfoRep;
class GetOrderInfoRepDefaultTypeInternal;
extern GetOrderInfoRepDefaultTypeInternal _GetOrderInfoRep_default_instance_;
class GetOrderInfoReq;
class GetOrderInfoReqDefaultTypeInternal;
extern GetOrderInfoReqDefaultTypeInternal _GetOrderInfoReq_default_instance_;
class GetUserInfoRep;
class GetUserInfoRepDefaultTypeInternal;
extern GetUserInfoRepDefaultTypeInternal _GetUserInfoRep_default_instance_;
class GetUserInfoReq;
class GetUserInfoReqDefaultTypeInternal;
extern GetUserInfoReqDefaultTypeInternal _GetUserInfoReq_default_instance_;
class GoodsInfo;
class GoodsInfoDefaultTypeInternal;
extern GoodsInfoDefaultTypeInternal _GoodsInfo_default_instance_;
class GoodsInfo_AttrsEntry;
class GoodsInfo_AttrsEntryDefaultTypeInternal;
extern GoodsInfo_AttrsEntryDefaultTypeInternal _GoodsInfo_AttrsEntry_default_instance_;
class GoodsInfo_MapsEntry;
class GoodsInfo_MapsEntryDefaultTypeInternal;
extern GoodsInfo_MapsEntryDefaultTypeInternal _GoodsInfo_MapsEntry_default_instance_;
class GoodsInfo_PricesEntry;
class GoodsInfo_PricesEntryDefaultTypeInternal;
extern GoodsInfo_PricesEntryDefaultTypeInternal _GoodsInfo_PricesEntry_default_instance_;
class HideOrderRep;
class HideOrderRepDefaultTypeInternal;
extern HideOrderRepDefaultTypeInternal _HideOrderRep_default_instance_;
class HideOrderReq;
class HideOrderReqDefaultTypeInternal;
extern HideOrderReqDefaultTypeInternal _HideOrderReq_default_instance_;
class ImageInfo;
class ImageInfoDefaultTypeInternal;
extern ImageInfoDefaultTypeInternal _ImageInfo_default_instance_;
class IndexAd;
class IndexAdDefaultTypeInternal;
extern IndexAdDefaultTypeInternal _IndexAd_default_instance_;
class IndexAdGroup;
class IndexAdGroupDefaultTypeInternal;
extern IndexAdGroupDefaultTypeInternal _IndexAdGroup_default_instance_;
class IndexAdInfoRep;
class IndexAdInfoRepDefaultTypeInternal;
extern IndexAdInfoRepDefaultTypeInternal _IndexAdInfoRep_default_instance_;
class IndexAdInfoReq;
class IndexAdInfoReqDefaultTypeInternal;
extern IndexAdInfoReqDefaultTypeInternal _IndexAdInfoReq_default_instance_;
class IndexRep;
class IndexRepDefaultTypeInternal;
extern IndexRepDefaultTypeInternal _IndexRep_default_instance_;
class IndexRep_GroupsEntry;
class IndexRep_GroupsEntryDefaultTypeInternal;
extern IndexRep_GroupsEntryDefaultTypeInternal _IndexRep_GroupsEntry_default_instance_;
class IndexReq;
class IndexReqDefaultTypeInternal;
extern IndexReqDefaultTypeInternal _IndexReq_default_instance_;
class IndexType;
class IndexTypeDefaultTypeInternal;
extern IndexTypeDefaultTypeInternal _IndexType_default_instance_;
class ListAddressRep;
class ListAddressRepDefaultTypeInternal;
extern ListAddressRepDefaultTypeInternal _ListAddressRep_default_instance_;
class ListAddressReq;
class ListAddressReqDefaultTypeInternal;
extern ListAddressReqDefaultTypeInternal _ListAddressReq_default_instance_;
class ListCarRep;
class ListCarRepDefaultTypeInternal;
extern ListCarRepDefaultTypeInternal _ListCarRep_default_instance_;
class ListCarReq;
class ListCarReqDefaultTypeInternal;
extern ListCarReqDefaultTypeInternal _ListCarReq_default_instance_;
class ListCartRep;
class ListCartRepDefaultTypeInternal;
extern ListCartRepDefaultTypeInternal _ListCartRep_default_instance_;
class ListCartReq;
class ListCartReqDefaultTypeInternal;
extern ListCartReqDefaultTypeInternal _ListCartReq_default_instance_;
class ListCouponRep;
class ListCouponRepDefaultTypeInternal;
extern ListCouponRepDefaultTypeInternal _ListCouponRep_default_instance_;
class ListCouponReq;
class ListCouponReqDefaultTypeInternal;
extern ListCouponReqDefaultTypeInternal _ListCouponReq_default_instance_;
class ListDeliveryTaskRep;
class ListDeliveryTaskRepDefaultTypeInternal;
extern ListDeliveryTaskRepDefaultTypeInternal _ListDeliveryTaskRep_default_instance_;
class ListDeliveryTaskReq;
class ListDeliveryTaskReqDefaultTypeInternal;
extern ListDeliveryTaskReqDefaultTypeInternal _ListDeliveryTaskReq_default_instance_;
class ListDriverOrderRep;
class ListDriverOrderRepDefaultTypeInternal;
extern ListDriverOrderRepDefaultTypeInternal _ListDriverOrderRep_default_instance_;
class ListDriverOrderReq;
class ListDriverOrderReqDefaultTypeInternal;
extern ListDriverOrderReqDefaultTypeInternal _ListDriverOrderReq_default_instance_;
class ListGoodsFavRep;
class ListGoodsFavRepDefaultTypeInternal;
extern ListGoodsFavRepDefaultTypeInternal _ListGoodsFavRep_default_instance_;
class ListGoodsFavReq;
class ListGoodsFavReqDefaultTypeInternal;
extern ListGoodsFavReqDefaultTypeInternal _ListGoodsFavReq_default_instance_;
class ListMessageRep;
class ListMessageRepDefaultTypeInternal;
extern ListMessageRepDefaultTypeInternal _ListMessageRep_default_instance_;
class ListMessageReq;
class ListMessageReqDefaultTypeInternal;
extern ListMessageReqDefaultTypeInternal _ListMessageReq_default_instance_;
class ListNoticeRep;
class ListNoticeRepDefaultTypeInternal;
extern ListNoticeRepDefaultTypeInternal _ListNoticeRep_default_instance_;
class ListNoticeReq;
class ListNoticeReqDefaultTypeInternal;
extern ListNoticeReqDefaultTypeInternal _ListNoticeReq_default_instance_;
class ListRegionsRep;
class ListRegionsRepDefaultTypeInternal;
extern ListRegionsRepDefaultTypeInternal _ListRegionsRep_default_instance_;
class ListRegionsReq;
class ListRegionsReqDefaultTypeInternal;
extern ListRegionsReqDefaultTypeInternal _ListRegionsReq_default_instance_;
class ListUserOrderRep;
class ListUserOrderRepDefaultTypeInternal;
extern ListUserOrderRepDefaultTypeInternal _ListUserOrderRep_default_instance_;
class ListUserOrderReq;
class ListUserOrderReqDefaultTypeInternal;
extern ListUserOrderReqDefaultTypeInternal _ListUserOrderReq_default_instance_;
class ListUserTypeRep;
class ListUserTypeRepDefaultTypeInternal;
extern ListUserTypeRepDefaultTypeInternal _ListUserTypeRep_default_instance_;
class ListUserTypeReq;
class ListUserTypeReqDefaultTypeInternal;
extern ListUserTypeReqDefaultTypeInternal _ListUserTypeReq_default_instance_;
class LoginRep;
class LoginRepDefaultTypeInternal;
extern LoginRepDefaultTypeInternal _LoginRep_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class MapInfo;
class MapInfoDefaultTypeInternal;
extern MapInfoDefaultTypeInternal _MapInfo_default_instance_;
class MessageInfo;
class MessageInfoDefaultTypeInternal;
extern MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;
class NoticeInfo;
class NoticeInfoDefaultTypeInternal;
extern NoticeInfoDefaultTypeInternal _NoticeInfo_default_instance_;
class OptCartReq;
class OptCartReqDefaultTypeInternal;
extern OptCartReqDefaultTypeInternal _OptCartReq_default_instance_;
class OrderDeliveryInfo;
class OrderDeliveryInfoDefaultTypeInternal;
extern OrderDeliveryInfoDefaultTypeInternal _OrderDeliveryInfo_default_instance_;
class OrderInfo;
class OrderInfoDefaultTypeInternal;
extern OrderInfoDefaultTypeInternal _OrderInfo_default_instance_;
class OrderItem;
class OrderItemDefaultTypeInternal;
extern OrderItemDefaultTypeInternal _OrderItem_default_instance_;
class PayOrderRep;
class PayOrderRepDefaultTypeInternal;
extern PayOrderRepDefaultTypeInternal _PayOrderRep_default_instance_;
class PayOrderReq;
class PayOrderReqDefaultTypeInternal;
extern PayOrderReqDefaultTypeInternal _PayOrderReq_default_instance_;
class PriceInfo;
class PriceInfoDefaultTypeInternal;
extern PriceInfoDefaultTypeInternal _PriceInfo_default_instance_;
class PriceRange;
class PriceRangeDefaultTypeInternal;
extern PriceRangeDefaultTypeInternal _PriceRange_default_instance_;
class PublicInfoRep;
class PublicInfoRepDefaultTypeInternal;
extern PublicInfoRepDefaultTypeInternal _PublicInfoRep_default_instance_;
class PublicInfoReq;
class PublicInfoReqDefaultTypeInternal;
extern PublicInfoReqDefaultTypeInternal _PublicInfoReq_default_instance_;
class RegionInfo;
class RegionInfoDefaultTypeInternal;
extern RegionInfoDefaultTypeInternal _RegionInfo_default_instance_;
class RepeatOrderRep;
class RepeatOrderRepDefaultTypeInternal;
extern RepeatOrderRepDefaultTypeInternal _RepeatOrderRep_default_instance_;
class RepeatOrderReq;
class RepeatOrderReqDefaultTypeInternal;
extern RepeatOrderReqDefaultTypeInternal _RepeatOrderReq_default_instance_;
class SendAuthRep;
class SendAuthRepDefaultTypeInternal;
extern SendAuthRepDefaultTypeInternal _SendAuthRep_default_instance_;
class SendAuthReq;
class SendAuthReqDefaultTypeInternal;
extern SendAuthReqDefaultTypeInternal _SendAuthReq_default_instance_;
class SetDefaultAddrRep;
class SetDefaultAddrRepDefaultTypeInternal;
extern SetDefaultAddrRepDefaultTypeInternal _SetDefaultAddrRep_default_instance_;
class SetDefaultAddrReq;
class SetDefaultAddrReqDefaultTypeInternal;
extern SetDefaultAddrReqDefaultTypeInternal _SetDefaultAddrReq_default_instance_;
class SetDeviceIdRep;
class SetDeviceIdRepDefaultTypeInternal;
extern SetDeviceIdRepDefaultTypeInternal _SetDeviceIdRep_default_instance_;
class SetDeviceIdReq;
class SetDeviceIdReqDefaultTypeInternal;
extern SetDeviceIdReqDefaultTypeInternal _SetDeviceIdReq_default_instance_;
class SetInfo;
class SetInfoDefaultTypeInternal;
extern SetInfoDefaultTypeInternal _SetInfo_default_instance_;
class SetMessageReadRep;
class SetMessageReadRepDefaultTypeInternal;
extern SetMessageReadRepDefaultTypeInternal _SetMessageReadRep_default_instance_;
class SetMessageReadReq;
class SetMessageReadReqDefaultTypeInternal;
extern SetMessageReadReqDefaultTypeInternal _SetMessageReadReq_default_instance_;
class SignInfo;
class SignInfoDefaultTypeInternal;
extern SignInfoDefaultTypeInternal _SignInfo_default_instance_;
class SignReceivingRep;
class SignReceivingRepDefaultTypeInternal;
extern SignReceivingRepDefaultTypeInternal _SignReceivingRep_default_instance_;
class SignReceivingReq;
class SignReceivingReqDefaultTypeInternal;
extern SignReceivingReqDefaultTypeInternal _SignReceivingReq_default_instance_;
class SubmitAuthInfoRep;
class SubmitAuthInfoRepDefaultTypeInternal;
extern SubmitAuthInfoRepDefaultTypeInternal _SubmitAuthInfoRep_default_instance_;
class SubmitAuthInfoReq;
class SubmitAuthInfoReqDefaultTypeInternal;
extern SubmitAuthInfoReqDefaultTypeInternal _SubmitAuthInfoReq_default_instance_;
class SubmitOrderRep;
class SubmitOrderRepDefaultTypeInternal;
extern SubmitOrderRepDefaultTypeInternal _SubmitOrderRep_default_instance_;
class SubmitOrderReq;
class SubmitOrderReqDefaultTypeInternal;
extern SubmitOrderReqDefaultTypeInternal _SubmitOrderReq_default_instance_;
class TypeInfo;
class TypeInfoDefaultTypeInternal;
extern TypeInfoDefaultTypeInternal _TypeInfo_default_instance_;
class UpdateDriverMobileRep;
class UpdateDriverMobileRepDefaultTypeInternal;
extern UpdateDriverMobileRepDefaultTypeInternal _UpdateDriverMobileRep_default_instance_;
class UpdateDriverMobileReq;
class UpdateDriverMobileReqDefaultTypeInternal;
extern UpdateDriverMobileReqDefaultTypeInternal _UpdateDriverMobileReq_default_instance_;
class UpdateDriverPassRep;
class UpdateDriverPassRepDefaultTypeInternal;
extern UpdateDriverPassRepDefaultTypeInternal _UpdateDriverPassRep_default_instance_;
class UpdateDriverPassReq;
class UpdateDriverPassReqDefaultTypeInternal;
extern UpdateDriverPassReqDefaultTypeInternal _UpdateDriverPassReq_default_instance_;
class UpdateDriverStateRep;
class UpdateDriverStateRepDefaultTypeInternal;
extern UpdateDriverStateRepDefaultTypeInternal _UpdateDriverStateRep_default_instance_;
class UpdateDriverStateReq;
class UpdateDriverStateReqDefaultTypeInternal;
extern UpdateDriverStateReqDefaultTypeInternal _UpdateDriverStateReq_default_instance_;
class UpdateUserInfoRep;
class UpdateUserInfoRepDefaultTypeInternal;
extern UpdateUserInfoRepDefaultTypeInternal _UpdateUserInfoRep_default_instance_;
class UpdateUserInfoReq;
class UpdateUserInfoReqDefaultTypeInternal;
extern UpdateUserInfoReqDefaultTypeInternal _UpdateUserInfoReq_default_instance_;
class UpdateUserMobileRep;
class UpdateUserMobileRepDefaultTypeInternal;
extern UpdateUserMobileRepDefaultTypeInternal _UpdateUserMobileRep_default_instance_;
class UpdateUserMobileReq;
class UpdateUserMobileReqDefaultTypeInternal;
extern UpdateUserMobileReqDefaultTypeInternal _UpdateUserMobileReq_default_instance_;
class UpdateUserPassRep;
class UpdateUserPassRepDefaultTypeInternal;
extern UpdateUserPassRepDefaultTypeInternal _UpdateUserPassRep_default_instance_;
class UpdateUserPassReq;
class UpdateUserPassReqDefaultTypeInternal;
extern UpdateUserPassReqDefaultTypeInternal _UpdateUserPassReq_default_instance_;
class UserFavInfo;
class UserFavInfoDefaultTypeInternal;
extern UserFavInfoDefaultTypeInternal _UserFavInfo_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserRegisterRep;
class UserRegisterRepDefaultTypeInternal;
extern UserRegisterRepDefaultTypeInternal _UserRegisterRep_default_instance_;
class UserRegisterReq;
class UserRegisterReqDefaultTypeInternal;
extern UserRegisterReqDefaultTypeInternal _UserRegisterReq_default_instance_;
class UserType;
class UserTypeDefaultTypeInternal;
extern UserTypeDefaultTypeInternal _UserType_default_instance_;
class WareGroup;
class WareGroupDefaultTypeInternal;
extern WareGroupDefaultTypeInternal _WareGroup_default_instance_;
class WareInfo;
class WareInfoDefaultTypeInternal;
extern WareInfoDefaultTypeInternal _WareInfo_default_instance_;
class WorkOptRep;
class WorkOptRepDefaultTypeInternal;
extern WorkOptRepDefaultTypeInternal _WorkOptRep_default_instance_;
class WorkOptReq;
class WorkOptReqDefaultTypeInternal;
extern WorkOptReqDefaultTypeInternal _WorkOptReq_default_instance_;
}  // namespace ttmall

namespace ttmall {

namespace protobuf_user_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_user_2eproto

enum OptCartType {
  ADD = 0,
  DEL = 1,
  SET = 2,
  CLEAR = 3,
  COUNT = 4,
  OptCartType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OptCartType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OptCartType_IsValid(int value);
const OptCartType OptCartType_MIN = ADD;
const OptCartType OptCartType_MAX = COUNT;
const int OptCartType_ARRAYSIZE = OptCartType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OptCartType_descriptor();
inline const ::std::string& OptCartType_Name(OptCartType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OptCartType_descriptor(), value);
}
inline bool OptCartType_Parse(
    const ::std::string& name, OptCartType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OptCartType>(
    OptCartType_descriptor(), name, value);
}
enum ListOrderOpt {
  LIST_ALL = 0,
  LIST_WAIT_PAY = 1,
  LIST_WAIT_TRANS = 2,
  LIST_TRANSING = 3,
  LIST_FINISHED = 4,
  ListOrderOpt_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ListOrderOpt_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ListOrderOpt_IsValid(int value);
const ListOrderOpt ListOrderOpt_MIN = LIST_ALL;
const ListOrderOpt ListOrderOpt_MAX = LIST_FINISHED;
const int ListOrderOpt_ARRAYSIZE = ListOrderOpt_MAX + 1;

const ::google::protobuf::EnumDescriptor* ListOrderOpt_descriptor();
inline const ::std::string& ListOrderOpt_Name(ListOrderOpt value) {
  return ::google::protobuf::internal::NameOfEnum(
    ListOrderOpt_descriptor(), value);
}
inline bool ListOrderOpt_Parse(
    const ::std::string& name, ListOrderOpt* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ListOrderOpt>(
    ListOrderOpt_descriptor(), name, value);
}
// ===================================================================

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string mobile = 1;
  void clear_mobile();
  static const int kMobileFieldNumber = 1;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // string pass = 2;
  void clear_pass();
  static const int kPassFieldNumber = 2;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  #if LANG_CXX11
  void set_pass(::std::string&& value);
  #endif
  void set_pass(const char* value);
  void set_pass(const char* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // string platform = 3;
  void clear_platform();
  static const int kPlatformFieldNumber = 3;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // @@protoc_insertion_point(class_scope:ttmall.LoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.LoginRep) */ {
 public:
  LoginRep();
  virtual ~LoginRep();

  LoginRep(const LoginRep& from);

  inline LoginRep& operator=(const LoginRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRep& default_instance();

  static inline const LoginRep* internal_default_instance() {
    return reinterpret_cast<const LoginRep*>(
               &_LoginRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LoginRep* other);

  // implements Message ----------------------------------------------

  inline LoginRep* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRep& from);
  void MergeFrom(const LoginRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // .ttmall.UserInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::ttmall::UserInfo& info() const;
  ::ttmall::UserInfo* mutable_info();
  ::ttmall::UserInfo* release_info();
  void set_allocated_info(::ttmall::UserInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.LoginRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::ttmall::UserInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OptCartReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.OptCartReq) */ {
 public:
  OptCartReq();
  virtual ~OptCartReq();

  OptCartReq(const OptCartReq& from);

  inline OptCartReq& operator=(const OptCartReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OptCartReq& default_instance();

  static inline const OptCartReq* internal_default_instance() {
    return reinterpret_cast<const OptCartReq*>(
               &_OptCartReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(OptCartReq* other);

  // implements Message ----------------------------------------------

  inline OptCartReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OptCartReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OptCartReq& from);
  void MergeFrom(const OptCartReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OptCartReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cart_ids = 7;
  int cart_ids_size() const;
  void clear_cart_ids();
  static const int kCartIdsFieldNumber = 7;
  const ::std::string& cart_ids(int index) const;
  ::std::string* mutable_cart_ids(int index);
  void set_cart_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cart_ids(int index, ::std::string&& value);
  #endif
  void set_cart_ids(int index, const char* value);
  void set_cart_ids(int index, const char* value, size_t size);
  ::std::string* add_cart_ids();
  void add_cart_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_cart_ids(::std::string&& value);
  #endif
  void add_cart_ids(const char* value);
  void add_cart_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cart_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cart_ids();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string goods_id = 3;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 3;
  const ::std::string& goods_id() const;
  void set_goods_id(const ::std::string& value);
  #if LANG_CXX11
  void set_goods_id(::std::string&& value);
  #endif
  void set_goods_id(const char* value);
  void set_goods_id(const char* value, size_t size);
  ::std::string* mutable_goods_id();
  ::std::string* release_goods_id();
  void set_allocated_goods_id(::std::string* goods_id);

  // string key_id = 4;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 4;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const char* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // .ttmall.OptCartType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::ttmall::OptCartType type() const;
  void set_type(::ttmall::OptCartType value);

  // int32 key_count = 5;
  void clear_key_count();
  static const int kKeyCountFieldNumber = 5;
  ::google::protobuf::int32 key_count() const;
  void set_key_count(::google::protobuf::int32 value);

  // bool is_list = 6;
  void clear_is_list();
  static const int kIsListFieldNumber = 6;
  bool is_list() const;
  void set_is_list(bool value);

  // @@protoc_insertion_point(class_scope:ttmall.OptCartReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cart_ids_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr goods_id_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  int type_;
  ::google::protobuf::int32 key_count_;
  bool is_list_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CartGoodsInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.CartGoodsInfo) */ {
 public:
  CartGoodsInfo();
  virtual ~CartGoodsInfo();

  CartGoodsInfo(const CartGoodsInfo& from);

  inline CartGoodsInfo& operator=(const CartGoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CartGoodsInfo& default_instance();

  static inline const CartGoodsInfo* internal_default_instance() {
    return reinterpret_cast<const CartGoodsInfo*>(
               &_CartGoodsInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CartGoodsInfo* other);

  // implements Message ----------------------------------------------

  inline CartGoodsInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CartGoodsInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CartGoodsInfo& from);
  void MergeFrom(const CartGoodsInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CartGoodsInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cart_id = 1;
  void clear_cart_id();
  static const int kCartIdFieldNumber = 1;
  const ::std::string& cart_id() const;
  void set_cart_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cart_id(::std::string&& value);
  #endif
  void set_cart_id(const char* value);
  void set_cart_id(const char* value, size_t size);
  ::std::string* mutable_cart_id();
  ::std::string* release_cart_id();
  void set_allocated_cart_id(::std::string* cart_id);

  // string key_id = 3;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 3;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const char* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // .ttmall.GoodsInfo goods_info = 4;
  bool has_goods_info() const;
  void clear_goods_info();
  static const int kGoodsInfoFieldNumber = 4;
  const ::ttmall::GoodsInfo& goods_info() const;
  ::ttmall::GoodsInfo* mutable_goods_info();
  ::ttmall::GoodsInfo* release_goods_info();
  void set_allocated_goods_info(::ttmall::GoodsInfo* goods_info);

  // int32 key_count = 2;
  void clear_key_count();
  static const int kKeyCountFieldNumber = 2;
  ::google::protobuf::int32 key_count() const;
  void set_key_count(::google::protobuf::int32 value);

  // int32 key_fee = 5;
  void clear_key_fee();
  static const int kKeyFeeFieldNumber = 5;
  ::google::protobuf::int32 key_fee() const;
  void set_key_fee(::google::protobuf::int32 value);

  // int32 dis_fee = 6;
  void clear_dis_fee();
  static const int kDisFeeFieldNumber = 6;
  ::google::protobuf::int32 dis_fee() const;
  void set_dis_fee(::google::protobuf::int32 value);

  // bool disabled = 7;
  void clear_disabled();
  static const int kDisabledFieldNumber = 7;
  bool disabled() const;
  void set_disabled(bool value);

  // @@protoc_insertion_point(class_scope:ttmall.CartGoodsInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cart_id_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::ttmall::GoodsInfo* goods_info_;
  ::google::protobuf::int32 key_count_;
  ::google::protobuf::int32 key_fee_;
  ::google::protobuf::int32 dis_fee_;
  bool disabled_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListCartReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListCartReq) */ {
 public:
  ListCartReq();
  virtual ~ListCartReq();

  ListCartReq(const ListCartReq& from);

  inline ListCartReq& operator=(const ListCartReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCartReq& default_instance();

  static inline const ListCartReq* internal_default_instance() {
    return reinterpret_cast<const ListCartReq*>(
               &_ListCartReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListCartReq* other);

  // implements Message ----------------------------------------------

  inline ListCartReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListCartReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListCartReq& from);
  void MergeFrom(const ListCartReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListCartReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ttmall.ListCartReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListCartRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListCartRep) */ {
 public:
  ListCartRep();
  virtual ~ListCartRep();

  ListCartRep(const ListCartRep& from);

  inline ListCartRep& operator=(const ListCartRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCartRep& default_instance();

  static inline const ListCartRep* internal_default_instance() {
    return reinterpret_cast<const ListCartRep*>(
               &_ListCartRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ListCartRep* other);

  // implements Message ----------------------------------------------

  inline ListCartRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListCartRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListCartRep& from);
  void MergeFrom(const ListCartRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListCartRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.CartGoodsInfo items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::ttmall::CartGoodsInfo& items(int index) const;
  ::ttmall::CartGoodsInfo* mutable_items(int index);
  ::ttmall::CartGoodsInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >&
      items() const;

  // repeated .ttmall.CartGoodsInfo disables = 3;
  int disables_size() const;
  void clear_disables();
  static const int kDisablesFieldNumber = 3;
  const ::ttmall::CartGoodsInfo& disables(int index) const;
  ::ttmall::CartGoodsInfo* mutable_disables(int index);
  ::ttmall::CartGoodsInfo* add_disables();
  ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >*
      mutable_disables();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >&
      disables() const;

  // int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.ListCartRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo > items_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo > disables_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListAddressReq) */ {
 public:
  ListAddressReq();
  virtual ~ListAddressReq();

  ListAddressReq(const ListAddressReq& from);

  inline ListAddressReq& operator=(const ListAddressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListAddressReq& default_instance();

  static inline const ListAddressReq* internal_default_instance() {
    return reinterpret_cast<const ListAddressReq*>(
               &_ListAddressReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ListAddressReq* other);

  // implements Message ----------------------------------------------

  inline ListAddressReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListAddressReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListAddressReq& from);
  void MergeFrom(const ListAddressReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListAddressReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ttmall.ListAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListAddressRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListAddressRep) */ {
 public:
  ListAddressRep();
  virtual ~ListAddressRep();

  ListAddressRep(const ListAddressRep& from);

  inline ListAddressRep& operator=(const ListAddressRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListAddressRep& default_instance();

  static inline const ListAddressRep* internal_default_instance() {
    return reinterpret_cast<const ListAddressRep*>(
               &_ListAddressRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ListAddressRep* other);

  // implements Message ----------------------------------------------

  inline ListAddressRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListAddressRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListAddressRep& from);
  void MergeFrom(const ListAddressRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListAddressRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.AddressInfo Items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::AddressInfo& items(int index) const;
  ::ttmall::AddressInfo* mutable_items(int index);
  ::ttmall::AddressInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListAddressRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListCouponReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListCouponReq) */ {
 public:
  ListCouponReq();
  virtual ~ListCouponReq();

  ListCouponReq(const ListCouponReq& from);

  inline ListCouponReq& operator=(const ListCouponReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCouponReq& default_instance();

  static inline const ListCouponReq* internal_default_instance() {
    return reinterpret_cast<const ListCouponReq*>(
               &_ListCouponReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ListCouponReq* other);

  // implements Message ----------------------------------------------

  inline ListCouponReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListCouponReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListCouponReq& from);
  void MergeFrom(const ListCouponReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListCouponReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ttmall.ListCouponReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListCouponRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListCouponRep) */ {
 public:
  ListCouponRep();
  virtual ~ListCouponRep();

  ListCouponRep(const ListCouponRep& from);

  inline ListCouponRep& operator=(const ListCouponRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCouponRep& default_instance();

  static inline const ListCouponRep* internal_default_instance() {
    return reinterpret_cast<const ListCouponRep*>(
               &_ListCouponRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ListCouponRep* other);

  // implements Message ----------------------------------------------

  inline ListCouponRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListCouponRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListCouponRep& from);
  void MergeFrom(const ListCouponRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListCouponRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.CouponInfo Items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::CouponInfo& items(int index) const;
  ::ttmall::CouponInfo* mutable_items(int index);
  ::ttmall::CouponInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListCouponRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddGoodsFavReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.AddGoodsFavReq) */ {
 public:
  AddGoodsFavReq();
  virtual ~AddGoodsFavReq();

  AddGoodsFavReq(const AddGoodsFavReq& from);

  inline AddGoodsFavReq& operator=(const AddGoodsFavReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddGoodsFavReq& default_instance();

  static inline const AddGoodsFavReq* internal_default_instance() {
    return reinterpret_cast<const AddGoodsFavReq*>(
               &_AddGoodsFavReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AddGoodsFavReq* other);

  // implements Message ----------------------------------------------

  inline AddGoodsFavReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddGoodsFavReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddGoodsFavReq& from);
  void MergeFrom(const AddGoodsFavReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddGoodsFavReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string goods_id = 2;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  const ::std::string& goods_id() const;
  void set_goods_id(const ::std::string& value);
  #if LANG_CXX11
  void set_goods_id(::std::string&& value);
  #endif
  void set_goods_id(const char* value);
  void set_goods_id(const char* value, size_t size);
  ::std::string* mutable_goods_id();
  ::std::string* release_goods_id();
  void set_allocated_goods_id(::std::string* goods_id);

  // string key_id = 3;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 3;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const char* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // @@protoc_insertion_point(class_scope:ttmall.AddGoodsFavReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr goods_id_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddGoodsFavRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.AddGoodsFavRep) */ {
 public:
  AddGoodsFavRep();
  virtual ~AddGoodsFavRep();

  AddGoodsFavRep(const AddGoodsFavRep& from);

  inline AddGoodsFavRep& operator=(const AddGoodsFavRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddGoodsFavRep& default_instance();

  static inline const AddGoodsFavRep* internal_default_instance() {
    return reinterpret_cast<const AddGoodsFavRep*>(
               &_AddGoodsFavRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(AddGoodsFavRep* other);

  // implements Message ----------------------------------------------

  inline AddGoodsFavRep* New() const PROTOBUF_FINAL { return New(NULL); }

  AddGoodsFavRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddGoodsFavRep& from);
  void MergeFrom(const AddGoodsFavRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddGoodsFavRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 fav_count = 1;
  void clear_fav_count();
  static const int kFavCountFieldNumber = 1;
  ::google::protobuf::int32 fav_count() const;
  void set_fav_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.AddGoodsFavRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 fav_count_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelGoodsFavReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DelGoodsFavReq) */ {
 public:
  DelGoodsFavReq();
  virtual ~DelGoodsFavReq();

  DelGoodsFavReq(const DelGoodsFavReq& from);

  inline DelGoodsFavReq& operator=(const DelGoodsFavReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelGoodsFavReq& default_instance();

  static inline const DelGoodsFavReq* internal_default_instance() {
    return reinterpret_cast<const DelGoodsFavReq*>(
               &_DelGoodsFavReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DelGoodsFavReq* other);

  // implements Message ----------------------------------------------

  inline DelGoodsFavReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DelGoodsFavReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelGoodsFavReq& from);
  void MergeFrom(const DelGoodsFavReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelGoodsFavReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string goods_id = 2;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  const ::std::string& goods_id() const;
  void set_goods_id(const ::std::string& value);
  #if LANG_CXX11
  void set_goods_id(::std::string&& value);
  #endif
  void set_goods_id(const char* value);
  void set_goods_id(const char* value, size_t size);
  ::std::string* mutable_goods_id();
  ::std::string* release_goods_id();
  void set_allocated_goods_id(::std::string* goods_id);

  // @@protoc_insertion_point(class_scope:ttmall.DelGoodsFavReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr goods_id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelGoodsFavRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DelGoodsFavRep) */ {
 public:
  DelGoodsFavRep();
  virtual ~DelGoodsFavRep();

  DelGoodsFavRep(const DelGoodsFavRep& from);

  inline DelGoodsFavRep& operator=(const DelGoodsFavRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelGoodsFavRep& default_instance();

  static inline const DelGoodsFavRep* internal_default_instance() {
    return reinterpret_cast<const DelGoodsFavRep*>(
               &_DelGoodsFavRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(DelGoodsFavRep* other);

  // implements Message ----------------------------------------------

  inline DelGoodsFavRep* New() const PROTOBUF_FINAL { return New(NULL); }

  DelGoodsFavRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelGoodsFavRep& from);
  void MergeFrom(const DelGoodsFavRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelGoodsFavRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 fav_count = 1;
  void clear_fav_count();
  static const int kFavCountFieldNumber = 1;
  ::google::protobuf::int32 fav_count() const;
  void set_fav_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.DelGoodsFavRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 fav_count_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListGoodsFavReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListGoodsFavReq) */ {
 public:
  ListGoodsFavReq();
  virtual ~ListGoodsFavReq();

  ListGoodsFavReq(const ListGoodsFavReq& from);

  inline ListGoodsFavReq& operator=(const ListGoodsFavReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGoodsFavReq& default_instance();

  static inline const ListGoodsFavReq* internal_default_instance() {
    return reinterpret_cast<const ListGoodsFavReq*>(
               &_ListGoodsFavReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ListGoodsFavReq* other);

  // implements Message ----------------------------------------------

  inline ListGoodsFavReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListGoodsFavReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListGoodsFavReq& from);
  void MergeFrom(const ListGoodsFavReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListGoodsFavReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // int32 skip = 2;
  void clear_skip();
  static const int kSkipFieldNumber = 2;
  ::google::protobuf::int32 skip() const;
  void set_skip(::google::protobuf::int32 value);

  // int32 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.ListGoodsFavReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 skip_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserFavInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UserFavInfo) */ {
 public:
  UserFavInfo();
  virtual ~UserFavInfo();

  UserFavInfo(const UserFavInfo& from);

  inline UserFavInfo& operator=(const UserFavInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserFavInfo& default_instance();

  static inline const UserFavInfo* internal_default_instance() {
    return reinterpret_cast<const UserFavInfo*>(
               &_UserFavInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(UserFavInfo* other);

  // implements Message ----------------------------------------------

  inline UserFavInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserFavInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserFavInfo& from);
  void MergeFrom(const UserFavInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserFavInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const char* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // .ttmall.GoodsInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::ttmall::GoodsInfo& info() const;
  ::ttmall::GoodsInfo* mutable_info();
  ::ttmall::GoodsInfo* release_info();
  void set_allocated_info(::ttmall::GoodsInfo* info);

  // bool disabled = 3;
  void clear_disabled();
  static const int kDisabledFieldNumber = 3;
  bool disabled() const;
  void set_disabled(bool value);

  // @@protoc_insertion_point(class_scope:ttmall.UserFavInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::ttmall::GoodsInfo* info_;
  bool disabled_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListGoodsFavRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListGoodsFavRep) */ {
 public:
  ListGoodsFavRep();
  virtual ~ListGoodsFavRep();

  ListGoodsFavRep(const ListGoodsFavRep& from);

  inline ListGoodsFavRep& operator=(const ListGoodsFavRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListGoodsFavRep& default_instance();

  static inline const ListGoodsFavRep* internal_default_instance() {
    return reinterpret_cast<const ListGoodsFavRep*>(
               &_ListGoodsFavRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ListGoodsFavRep* other);

  // implements Message ----------------------------------------------

  inline ListGoodsFavRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListGoodsFavRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListGoodsFavRep& from);
  void MergeFrom(const ListGoodsFavRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListGoodsFavRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.UserFavInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::UserFavInfo& items(int index) const;
  ::ttmall::UserFavInfo* mutable_items(int index);
  ::ttmall::UserFavInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::UserFavInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::UserFavInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListGoodsFavRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::UserFavInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUserOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListUserOrderReq) */ {
 public:
  ListUserOrderReq();
  virtual ~ListUserOrderReq();

  ListUserOrderReq(const ListUserOrderReq& from);

  inline ListUserOrderReq& operator=(const ListUserOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUserOrderReq& default_instance();

  static inline const ListUserOrderReq* internal_default_instance() {
    return reinterpret_cast<const ListUserOrderReq*>(
               &_ListUserOrderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ListUserOrderReq* other);

  // implements Message ----------------------------------------------

  inline ListUserOrderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListUserOrderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListUserOrderReq& from);
  void MergeFrom(const ListUserOrderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListUserOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // .ttmall.ListOrderOpt opt = 2;
  void clear_opt();
  static const int kOptFieldNumber = 2;
  ::ttmall::ListOrderOpt opt() const;
  void set_opt(::ttmall::ListOrderOpt value);

  // int32 skip = 3;
  void clear_skip();
  static const int kSkipFieldNumber = 3;
  ::google::protobuf::int32 skip() const;
  void set_skip(::google::protobuf::int32 value);

  // int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ttmall.ListUserOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  int opt_;
  ::google::protobuf::int32 skip_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUserOrderRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.ListUserOrderRep) */ {
 public:
  ListUserOrderRep();
  virtual ~ListUserOrderRep();

  ListUserOrderRep(const ListUserOrderRep& from);

  inline ListUserOrderRep& operator=(const ListUserOrderRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUserOrderRep& default_instance();

  static inline const ListUserOrderRep* internal_default_instance() {
    return reinterpret_cast<const ListUserOrderRep*>(
               &_ListUserOrderRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ListUserOrderRep* other);

  // implements Message ----------------------------------------------

  inline ListUserOrderRep* New() const PROTOBUF_FINAL { return New(NULL); }

  ListUserOrderRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListUserOrderRep& from);
  void MergeFrom(const ListUserOrderRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListUserOrderRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.OrderInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::ttmall::OrderInfo& items(int index) const;
  ::ttmall::OrderInfo* mutable_items(int index);
  ::ttmall::OrderInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:ttmall.ListUserOrderRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderInfo > items_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserRegisterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UserRegisterReq) */ {
 public:
  UserRegisterReq();
  virtual ~UserRegisterReq();

  UserRegisterReq(const UserRegisterReq& from);

  inline UserRegisterReq& operator=(const UserRegisterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRegisterReq& default_instance();

  static inline const UserRegisterReq* internal_default_instance() {
    return reinterpret_cast<const UserRegisterReq*>(
               &_UserRegisterReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(UserRegisterReq* other);

  // implements Message ----------------------------------------------

  inline UserRegisterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UserRegisterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserRegisterReq& from);
  void MergeFrom(const UserRegisterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserRegisterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string owner = 3;
  void clear_owner();
  static const int kOwnerFieldNumber = 3;
  const ::std::string& owner() const;
  void set_owner(const ::std::string& value);
  #if LANG_CXX11
  void set_owner(::std::string&& value);
  #endif
  void set_owner(const char* value);
  void set_owner(const char* value, size_t size);
  ::std::string* mutable_owner();
  ::std::string* release_owner();
  void set_allocated_owner(::std::string* owner);

  // string type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string mobile = 5;
  void clear_mobile();
  static const int kMobileFieldNumber = 5;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // string code = 6;
  void clear_code();
  static const int kCodeFieldNumber = 6;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string pass = 7;
  void clear_pass();
  static const int kPassFieldNumber = 7;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  #if LANG_CXX11
  void set_pass(::std::string&& value);
  #endif
  void set_pass(const char* value);
  void set_pass(const char* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // string referee = 8;
  void clear_referee();
  static const int kRefereeFieldNumber = 8;
  const ::std::string& referee() const;
  void set_referee(const ::std::string& value);
  #if LANG_CXX11
  void set_referee(::std::string&& value);
  #endif
  void set_referee(const char* value);
  void set_referee(const char* value, size_t size);
  ::std::string* mutable_referee();
  ::std::string* release_referee();
  void set_allocated_referee(::std::string* referee);

  // string deliver_time = 9;
  void clear_deliver_time();
  static const int kDeliverTimeFieldNumber = 9;
  const ::std::string& deliver_time() const;
  void set_deliver_time(const ::std::string& value);
  #if LANG_CXX11
  void set_deliver_time(::std::string&& value);
  #endif
  void set_deliver_time(const char* value);
  void set_deliver_time(const char* value, size_t size);
  ::std::string* mutable_deliver_time();
  ::std::string* release_deliver_time();
  void set_allocated_deliver_time(::std::string* deliver_time);

  // string mark = 11;
  void clear_mark();
  static const int kMarkFieldNumber = 11;
  const ::std::string& mark() const;
  void set_mark(const ::std::string& value);
  #if LANG_CXX11
  void set_mark(::std::string&& value);
  #endif
  void set_mark(const char* value);
  void set_mark(const char* value, size_t size);
  ::std::string* mutable_mark();
  ::std::string* release_mark();
  void set_allocated_mark(::std::string* mark);

  // .ttmall.AddressInfo address = 10;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 10;
  const ::ttmall::AddressInfo& address() const;
  ::ttmall::AddressInfo* mutable_address();
  ::ttmall::AddressInfo* release_address();
  void set_allocated_address(::ttmall::AddressInfo* address);

  // @@protoc_insertion_point(class_scope:ttmall.UserRegisterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr owner_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::google::protobuf::internal::ArenaStringPtr referee_;
  ::google::protobuf::internal::ArenaStringPtr deliver_time_;
  ::google::protobuf::internal::ArenaStringPtr mark_;
  ::ttmall::AddressInfo* address_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserRegisterRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UserRegisterRep) */ {
 public:
  UserRegisterRep();
  virtual ~UserRegisterRep();

  UserRegisterRep(const UserRegisterRep& from);

  inline UserRegisterRep& operator=(const UserRegisterRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRegisterRep& default_instance();

  static inline const UserRegisterRep* internal_default_instance() {
    return reinterpret_cast<const UserRegisterRep*>(
               &_UserRegisterRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(UserRegisterRep* other);

  // implements Message ----------------------------------------------

  inline UserRegisterRep* New() const PROTOBUF_FINAL { return New(NULL); }

  UserRegisterRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserRegisterRep& from);
  void MergeFrom(const UserRegisterRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserRegisterRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // .ttmall.UserInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::ttmall::UserInfo& info() const;
  ::ttmall::UserInfo* mutable_info();
  ::ttmall::UserInfo* release_info();
  void set_allocated_info(::ttmall::UserInfo* info);

  // bool is_pass = 3;
  void clear_is_pass();
  static const int kIsPassFieldNumber = 3;
  bool is_pass() const;
  void set_is_pass(bool value);

  // @@protoc_insertion_point(class_scope:ttmall.UserRegisterRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::ttmall::UserInfo* info_;
  bool is_pass_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddUserAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.AddUserAddressReq) */ {
 public:
  AddUserAddressReq();
  virtual ~AddUserAddressReq();

  AddUserAddressReq(const AddUserAddressReq& from);

  inline AddUserAddressReq& operator=(const AddUserAddressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddUserAddressReq& default_instance();

  static inline const AddUserAddressReq* internal_default_instance() {
    return reinterpret_cast<const AddUserAddressReq*>(
               &_AddUserAddressReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(AddUserAddressReq* other);

  // implements Message ----------------------------------------------

  inline AddUserAddressReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddUserAddressReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddUserAddressReq& from);
  void MergeFrom(const AddUserAddressReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddUserAddressReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string province = 4;
  void clear_province();
  static const int kProvinceFieldNumber = 4;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  #if LANG_CXX11
  void set_province(::std::string&& value);
  #endif
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // string city = 5;
  void clear_city();
  static const int kCityFieldNumber = 5;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // string area = 6;
  void clear_area();
  static const int kAreaFieldNumber = 6;
  const ::std::string& area() const;
  void set_area(const ::std::string& value);
  #if LANG_CXX11
  void set_area(::std::string&& value);
  #endif
  void set_area(const char* value);
  void set_area(const char* value, size_t size);
  ::std::string* mutable_area();
  ::std::string* release_area();
  void set_allocated_area(::std::string* area);

  // string addr = 7;
  void clear_addr();
  static const int kAddrFieldNumber = 7;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_addr(::std::string&& value);
  #endif
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // string contact = 8;
  void clear_contact();
  static const int kContactFieldNumber = 8;
  const ::std::string& contact() const;
  void set_contact(const ::std::string& value);
  #if LANG_CXX11
  void set_contact(::std::string&& value);
  #endif
  void set_contact(const char* value);
  void set_contact(const char* value, size_t size);
  ::std::string* mutable_contact();
  ::std::string* release_contact();
  void set_allocated_contact(::std::string* contact);

  // string mobile = 9;
  void clear_mobile();
  static const int kMobileFieldNumber = 9;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // .ttmall.CoordInfo coord = 10;
  bool has_coord() const;
  void clear_coord();
  static const int kCoordFieldNumber = 10;
  const ::ttmall::CoordInfo& coord() const;
  ::ttmall::CoordInfo* mutable_coord();
  ::ttmall::CoordInfo* release_coord();
  void set_allocated_coord(::ttmall::CoordInfo* coord);

  // bool default = 11;
  void clear_default_();
  static const int kDefaultFieldNumber = 11;
  bool default_() const;
  void set_default_(bool value);

  // @@protoc_insertion_point(class_scope:ttmall.AddUserAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr area_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::internal::ArenaStringPtr contact_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::ttmall::CoordInfo* coord_;
  bool default__;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddUserAddressRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.AddUserAddressRep) */ {
 public:
  AddUserAddressRep();
  virtual ~AddUserAddressRep();

  AddUserAddressRep(const AddUserAddressRep& from);

  inline AddUserAddressRep& operator=(const AddUserAddressRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddUserAddressRep& default_instance();

  static inline const AddUserAddressRep* internal_default_instance() {
    return reinterpret_cast<const AddUserAddressRep*>(
               &_AddUserAddressRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(AddUserAddressRep* other);

  // implements Message ----------------------------------------------

  inline AddUserAddressRep* New() const PROTOBUF_FINAL { return New(NULL); }

  AddUserAddressRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddUserAddressRep& from);
  void MergeFrom(const AddUserAddressRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddUserAddressRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.AddressInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::AddressInfo& info() const;
  ::ttmall::AddressInfo* mutable_info();
  ::ttmall::AddressInfo* release_info();
  void set_allocated_info(::ttmall::AddressInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.AddUserAddressRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::AddressInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetDefaultAddrReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.SetDefaultAddrReq) */ {
 public:
  SetDefaultAddrReq();
  virtual ~SetDefaultAddrReq();

  SetDefaultAddrReq(const SetDefaultAddrReq& from);

  inline SetDefaultAddrReq& operator=(const SetDefaultAddrReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDefaultAddrReq& default_instance();

  static inline const SetDefaultAddrReq* internal_default_instance() {
    return reinterpret_cast<const SetDefaultAddrReq*>(
               &_SetDefaultAddrReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SetDefaultAddrReq* other);

  // implements Message ----------------------------------------------

  inline SetDefaultAddrReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetDefaultAddrReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetDefaultAddrReq& from);
  void MergeFrom(const SetDefaultAddrReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetDefaultAddrReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ttmall.SetDefaultAddrReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetDefaultAddrRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.SetDefaultAddrRep) */ {
 public:
  SetDefaultAddrRep();
  virtual ~SetDefaultAddrRep();

  SetDefaultAddrRep(const SetDefaultAddrRep& from);

  inline SetDefaultAddrRep& operator=(const SetDefaultAddrRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDefaultAddrRep& default_instance();

  static inline const SetDefaultAddrRep* internal_default_instance() {
    return reinterpret_cast<const SetDefaultAddrRep*>(
               &_SetDefaultAddrRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SetDefaultAddrRep* other);

  // implements Message ----------------------------------------------

  inline SetDefaultAddrRep* New() const PROTOBUF_FINAL { return New(NULL); }

  SetDefaultAddrRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetDefaultAddrRep& from);
  void MergeFrom(const SetDefaultAddrRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetDefaultAddrRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.AddressInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::AddressInfo& info() const;
  ::ttmall::AddressInfo* mutable_info();
  ::ttmall::AddressInfo* release_info();
  void set_allocated_info(::ttmall::AddressInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.SetDefaultAddrRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::AddressInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelUserAddrReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DelUserAddrReq) */ {
 public:
  DelUserAddrReq();
  virtual ~DelUserAddrReq();

  DelUserAddrReq(const DelUserAddrReq& from);

  inline DelUserAddrReq& operator=(const DelUserAddrReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelUserAddrReq& default_instance();

  static inline const DelUserAddrReq* internal_default_instance() {
    return reinterpret_cast<const DelUserAddrReq*>(
               &_DelUserAddrReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(DelUserAddrReq* other);

  // implements Message ----------------------------------------------

  inline DelUserAddrReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DelUserAddrReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelUserAddrReq& from);
  void MergeFrom(const DelUserAddrReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelUserAddrReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ttmall.DelUserAddrReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelUserAddrRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.DelUserAddrRep) */ {
 public:
  DelUserAddrRep();
  virtual ~DelUserAddrRep();

  DelUserAddrRep(const DelUserAddrRep& from);

  inline DelUserAddrRep& operator=(const DelUserAddrRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelUserAddrRep& default_instance();

  static inline const DelUserAddrRep* internal_default_instance() {
    return reinterpret_cast<const DelUserAddrRep*>(
               &_DelUserAddrRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(DelUserAddrRep* other);

  // implements Message ----------------------------------------------

  inline DelUserAddrRep* New() const PROTOBUF_FINAL { return New(NULL); }

  DelUserAddrRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelUserAddrRep& from);
  void MergeFrom(const DelUserAddrRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelUserAddrRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ttmall.DelUserAddrRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.CancelOrderReq) */ {
 public:
  CancelOrderReq();
  virtual ~CancelOrderReq();

  CancelOrderReq(const CancelOrderReq& from);

  inline CancelOrderReq& operator=(const CancelOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelOrderReq& default_instance();

  static inline const CancelOrderReq* internal_default_instance() {
    return reinterpret_cast<const CancelOrderReq*>(
               &_CancelOrderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CancelOrderReq* other);

  // implements Message ----------------------------------------------

  inline CancelOrderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelOrderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelOrderReq& from);
  void MergeFrom(const CancelOrderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ttmall.CancelOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelOrderRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.CancelOrderRep) */ {
 public:
  CancelOrderRep();
  virtual ~CancelOrderRep();

  CancelOrderRep(const CancelOrderRep& from);

  inline CancelOrderRep& operator=(const CancelOrderRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelOrderRep& default_instance();

  static inline const CancelOrderRep* internal_default_instance() {
    return reinterpret_cast<const CancelOrderRep*>(
               &_CancelOrderRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CancelOrderRep* other);

  // implements Message ----------------------------------------------

  inline CancelOrderRep* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelOrderRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelOrderRep& from);
  void MergeFrom(const CancelOrderRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelOrderRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.OrderInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::OrderInfo& info() const;
  ::ttmall::OrderInfo* mutable_info();
  ::ttmall::OrderInfo* release_info();
  void set_allocated_info(::ttmall::OrderInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.CancelOrderRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::OrderInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.HideOrderReq) */ {
 public:
  HideOrderReq();
  virtual ~HideOrderReq();

  HideOrderReq(const HideOrderReq& from);

  inline HideOrderReq& operator=(const HideOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HideOrderReq& default_instance();

  static inline const HideOrderReq* internal_default_instance() {
    return reinterpret_cast<const HideOrderReq*>(
               &_HideOrderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(HideOrderReq* other);

  // implements Message ----------------------------------------------

  inline HideOrderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  HideOrderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideOrderReq& from);
  void MergeFrom(const HideOrderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ttmall.HideOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HideOrderRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.HideOrderRep) */ {
 public:
  HideOrderRep();
  virtual ~HideOrderRep();

  HideOrderRep(const HideOrderRep& from);

  inline HideOrderRep& operator=(const HideOrderRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HideOrderRep& default_instance();

  static inline const HideOrderRep* internal_default_instance() {
    return reinterpret_cast<const HideOrderRep*>(
               &_HideOrderRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(HideOrderRep* other);

  // implements Message ----------------------------------------------

  inline HideOrderRep* New() const PROTOBUF_FINAL { return New(NULL); }

  HideOrderRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HideOrderRep& from);
  void MergeFrom(const HideOrderRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HideOrderRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.OrderInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::OrderInfo& info() const;
  ::ttmall::OrderInfo* mutable_info();
  ::ttmall::OrderInfo* release_info();
  void set_allocated_info(::ttmall::OrderInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.HideOrderRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::OrderInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RepeatOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.RepeatOrderReq) */ {
 public:
  RepeatOrderReq();
  virtual ~RepeatOrderReq();

  RepeatOrderReq(const RepeatOrderReq& from);

  inline RepeatOrderReq& operator=(const RepeatOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RepeatOrderReq& default_instance();

  static inline const RepeatOrderReq* internal_default_instance() {
    return reinterpret_cast<const RepeatOrderReq*>(
               &_RepeatOrderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(RepeatOrderReq* other);

  // implements Message ----------------------------------------------

  inline RepeatOrderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RepeatOrderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RepeatOrderReq& from);
  void MergeFrom(const RepeatOrderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RepeatOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ttmall.RepeatOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RepeatOrderRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.RepeatOrderRep) */ {
 public:
  RepeatOrderRep();
  virtual ~RepeatOrderRep();

  RepeatOrderRep(const RepeatOrderRep& from);

  inline RepeatOrderRep& operator=(const RepeatOrderRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RepeatOrderRep& default_instance();

  static inline const RepeatOrderRep* internal_default_instance() {
    return reinterpret_cast<const RepeatOrderRep*>(
               &_RepeatOrderRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(RepeatOrderRep* other);

  // implements Message ----------------------------------------------

  inline RepeatOrderRep* New() const PROTOBUF_FINAL { return New(NULL); }

  RepeatOrderRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RepeatOrderRep& from);
  void MergeFrom(const RepeatOrderRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RepeatOrderRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.OrderInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::OrderInfo& info() const;
  ::ttmall::OrderInfo* mutable_info();
  ::ttmall::OrderInfo* release_info();
  void set_allocated_info(::ttmall::OrderInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.RepeatOrderRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::OrderInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUserInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetUserInfoReq) */ {
 public:
  GetUserInfoReq();
  virtual ~GetUserInfoReq();

  GetUserInfoReq(const GetUserInfoReq& from);

  inline GetUserInfoReq& operator=(const GetUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoReq& default_instance();

  static inline const GetUserInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetUserInfoReq*>(
               &_GetUserInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(GetUserInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetUserInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUserInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUserInfoReq& from);
  void MergeFrom(const GetUserInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUserInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ttmall.GetUserInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUserInfoRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetUserInfoRep) */ {
 public:
  GetUserInfoRep();
  virtual ~GetUserInfoRep();

  GetUserInfoRep(const GetUserInfoRep& from);

  inline GetUserInfoRep& operator=(const GetUserInfoRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoRep& default_instance();

  static inline const GetUserInfoRep* internal_default_instance() {
    return reinterpret_cast<const GetUserInfoRep*>(
               &_GetUserInfoRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(GetUserInfoRep* other);

  // implements Message ----------------------------------------------

  inline GetUserInfoRep* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUserInfoRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUserInfoRep& from);
  void MergeFrom(const GetUserInfoRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUserInfoRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.UserInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::UserInfo& info() const;
  ::ttmall::UserInfo* mutable_info();
  ::ttmall::UserInfo* release_info();
  void set_allocated_info(::ttmall::UserInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.GetUserInfoRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::UserInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateUserPassReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpdateUserPassReq) */ {
 public:
  UpdateUserPassReq();
  virtual ~UpdateUserPassReq();

  UpdateUserPassReq(const UpdateUserPassReq& from);

  inline UpdateUserPassReq& operator=(const UpdateUserPassReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserPassReq& default_instance();

  static inline const UpdateUserPassReq* internal_default_instance() {
    return reinterpret_cast<const UpdateUserPassReq*>(
               &_UpdateUserPassReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(UpdateUserPassReq* other);

  // implements Message ----------------------------------------------

  inline UpdateUserPassReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateUserPassReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateUserPassReq& from);
  void MergeFrom(const UpdateUserPassReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateUserPassReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string mobile = 2;
  void clear_mobile();
  static const int kMobileFieldNumber = 2;
  const ::std::string& mobile() const;
  void set_mobile(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile(::std::string&& value);
  #endif
  void set_mobile(const char* value);
  void set_mobile(const char* value, size_t size);
  ::std::string* mutable_mobile();
  ::std::string* release_mobile();
  void set_allocated_mobile(::std::string* mobile);

  // string code = 3;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string pass = 4;
  void clear_pass();
  static const int kPassFieldNumber = 4;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  #if LANG_CXX11
  void set_pass(::std::string&& value);
  #endif
  void set_pass(const char* value);
  void set_pass(const char* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // @@protoc_insertion_point(class_scope:ttmall.UpdateUserPassReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr mobile_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateUserPassRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpdateUserPassRep) */ {
 public:
  UpdateUserPassRep();
  virtual ~UpdateUserPassRep();

  UpdateUserPassRep(const UpdateUserPassRep& from);

  inline UpdateUserPassRep& operator=(const UpdateUserPassRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserPassRep& default_instance();

  static inline const UpdateUserPassRep* internal_default_instance() {
    return reinterpret_cast<const UpdateUserPassRep*>(
               &_UpdateUserPassRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(UpdateUserPassRep* other);

  // implements Message ----------------------------------------------

  inline UpdateUserPassRep* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateUserPassRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateUserPassRep& from);
  void MergeFrom(const UpdateUserPassRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateUserPassRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.UserInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::UserInfo& info() const;
  ::ttmall::UserInfo* mutable_info();
  ::ttmall::UserInfo* release_info();
  void set_allocated_info(::ttmall::UserInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.UpdateUserPassRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::UserInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateUserInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpdateUserInfoReq) */ {
 public:
  UpdateUserInfoReq();
  virtual ~UpdateUserInfoReq();

  UpdateUserInfoReq(const UpdateUserInfoReq& from);

  inline UpdateUserInfoReq& operator=(const UpdateUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserInfoReq& default_instance();

  static inline const UpdateUserInfoReq* internal_default_instance() {
    return reinterpret_cast<const UpdateUserInfoReq*>(
               &_UpdateUserInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(UpdateUserInfoReq* other);

  // implements Message ----------------------------------------------

  inline UpdateUserInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateUserInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateUserInfoReq& from);
  void MergeFrom(const UpdateUserInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateUserInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes avatar = 2;
  void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  const ::std::string& avatar() const;
  void set_avatar(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar(::std::string&& value);
  #endif
  void set_avatar(const char* value);
  void set_avatar(const void* value, size_t size);
  ::std::string* mutable_avatar();
  ::std::string* release_avatar();
  void set_allocated_avatar(::std::string* avatar);

  // @@protoc_insertion_point(class_scope:ttmall.UpdateUserInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr avatar_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateUserInfoRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpdateUserInfoRep) */ {
 public:
  UpdateUserInfoRep();
  virtual ~UpdateUserInfoRep();

  UpdateUserInfoRep(const UpdateUserInfoRep& from);

  inline UpdateUserInfoRep& operator=(const UpdateUserInfoRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserInfoRep& default_instance();

  static inline const UpdateUserInfoRep* internal_default_instance() {
    return reinterpret_cast<const UpdateUserInfoRep*>(
               &_UpdateUserInfoRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(UpdateUserInfoRep* other);

  // implements Message ----------------------------------------------

  inline UpdateUserInfoRep* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateUserInfoRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateUserInfoRep& from);
  void MergeFrom(const UpdateUserInfoRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateUserInfoRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.UserInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::UserInfo& info() const;
  ::ttmall::UserInfo* mutable_info();
  ::ttmall::UserInfo* release_info();
  void set_allocated_info(::ttmall::UserInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.UpdateUserInfoRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::UserInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateUserMobileReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpdateUserMobileReq) */ {
 public:
  UpdateUserMobileReq();
  virtual ~UpdateUserMobileReq();

  UpdateUserMobileReq(const UpdateUserMobileReq& from);

  inline UpdateUserMobileReq& operator=(const UpdateUserMobileReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserMobileReq& default_instance();

  static inline const UpdateUserMobileReq* internal_default_instance() {
    return reinterpret_cast<const UpdateUserMobileReq*>(
               &_UpdateUserMobileReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(UpdateUserMobileReq* other);

  // implements Message ----------------------------------------------

  inline UpdateUserMobileReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateUserMobileReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateUserMobileReq& from);
  void MergeFrom(const UpdateUserMobileReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateUserMobileReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string login_token = 1;
  void clear_login_token();
  static const int kLoginTokenFieldNumber = 1;
  const ::std::string& login_token() const;
  void set_login_token(const ::std::string& value);
  #if LANG_CXX11
  void set_login_token(::std::string&& value);
  #endif
  void set_login_token(const char* value);
  void set_login_token(const char* value, size_t size);
  ::std::string* mutable_login_token();
  ::std::string* release_login_token();
  void set_allocated_login_token(::std::string* login_token);

  // string login_pass = 2;
  void clear_login_pass();
  static const int kLoginPassFieldNumber = 2;
  const ::std::string& login_pass() const;
  void set_login_pass(const ::std::string& value);
  #if LANG_CXX11
  void set_login_pass(::std::string&& value);
  #endif
  void set_login_pass(const char* value);
  void set_login_pass(const char* value, size_t size);
  ::std::string* mutable_login_pass();
  ::std::string* release_login_pass();
  void set_allocated_login_pass(::std::string* login_pass);

  // string mobile_token = 3;
  void clear_mobile_token();
  static const int kMobileTokenFieldNumber = 3;
  const ::std::string& mobile_token() const;
  void set_mobile_token(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile_token(::std::string&& value);
  #endif
  void set_mobile_token(const char* value);
  void set_mobile_token(const char* value, size_t size);
  ::std::string* mutable_mobile_token();
  ::std::string* release_mobile_token();
  void set_allocated_mobile_token(::std::string* mobile_token);

  // string mobile_code = 4;
  void clear_mobile_code();
  static const int kMobileCodeFieldNumber = 4;
  const ::std::string& mobile_code() const;
  void set_mobile_code(const ::std::string& value);
  #if LANG_CXX11
  void set_mobile_code(::std::string&& value);
  #endif
  void set_mobile_code(const char* value);
  void set_mobile_code(const char* value, size_t size);
  ::std::string* mutable_mobile_code();
  ::std::string* release_mobile_code();
  void set_allocated_mobile_code(::std::string* mobile_code);

  // @@protoc_insertion_point(class_scope:ttmall.UpdateUserMobileReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr login_token_;
  ::google::protobuf::internal::ArenaStringPtr login_pass_;
  ::google::protobuf::internal::ArenaStringPtr mobile_token_;
  ::google::protobuf::internal::ArenaStringPtr mobile_code_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateUserMobileRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.UpdateUserMobileRep) */ {
 public:
  UpdateUserMobileRep();
  virtual ~UpdateUserMobileRep();

  UpdateUserMobileRep(const UpdateUserMobileRep& from);

  inline UpdateUserMobileRep& operator=(const UpdateUserMobileRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserMobileRep& default_instance();

  static inline const UpdateUserMobileRep* internal_default_instance() {
    return reinterpret_cast<const UpdateUserMobileRep*>(
               &_UpdateUserMobileRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(UpdateUserMobileRep* other);

  // implements Message ----------------------------------------------

  inline UpdateUserMobileRep* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateUserMobileRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateUserMobileRep& from);
  void MergeFrom(const UpdateUserMobileRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateUserMobileRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.UserInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::UserInfo& info() const;
  ::ttmall::UserInfo* mutable_info();
  ::ttmall::UserInfo* release_info();
  void set_allocated_info(::ttmall::UserInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.UpdateUserMobileRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::UserInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOrderDeliveryInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetOrderDeliveryInfoReq) */ {
 public:
  GetOrderDeliveryInfoReq();
  virtual ~GetOrderDeliveryInfoReq();

  GetOrderDeliveryInfoReq(const GetOrderDeliveryInfoReq& from);

  inline GetOrderDeliveryInfoReq& operator=(const GetOrderDeliveryInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOrderDeliveryInfoReq& default_instance();

  static inline const GetOrderDeliveryInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetOrderDeliveryInfoReq*>(
               &_GetOrderDeliveryInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(GetOrderDeliveryInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetOrderDeliveryInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOrderDeliveryInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOrderDeliveryInfoReq& from);
  void MergeFrom(const GetOrderDeliveryInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOrderDeliveryInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string order_id = 2;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  const ::std::string& order_id() const;
  void set_order_id(const ::std::string& value);
  #if LANG_CXX11
  void set_order_id(::std::string&& value);
  #endif
  void set_order_id(const char* value);
  void set_order_id(const char* value, size_t size);
  ::std::string* mutable_order_id();
  ::std::string* release_order_id();
  void set_allocated_order_id(::std::string* order_id);

  // @@protoc_insertion_point(class_scope:ttmall.GetOrderDeliveryInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr order_id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderDeliveryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.OrderDeliveryInfo) */ {
 public:
  OrderDeliveryInfo();
  virtual ~OrderDeliveryInfo();

  OrderDeliveryInfo(const OrderDeliveryInfo& from);

  inline OrderDeliveryInfo& operator=(const OrderDeliveryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDeliveryInfo& default_instance();

  static inline const OrderDeliveryInfo* internal_default_instance() {
    return reinterpret_cast<const OrderDeliveryInfo*>(
               &_OrderDeliveryInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(OrderDeliveryInfo* other);

  // implements Message ----------------------------------------------

  inline OrderDeliveryInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderDeliveryInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderDeliveryInfo& from);
  void MergeFrom(const OrderDeliveryInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderDeliveryInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.OrderItem items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::ttmall::OrderItem& items(int index) const;
  ::ttmall::OrderItem* mutable_items(int index);
  ::ttmall::OrderItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
      items() const;

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .ttmall.DriverInfo driver = 4;
  bool has_driver() const;
  void clear_driver();
  static const int kDriverFieldNumber = 4;
  const ::ttmall::DriverInfo& driver() const;
  ::ttmall::DriverInfo* mutable_driver();
  ::ttmall::DriverInfo* release_driver();
  void set_allocated_driver(::ttmall::DriverInfo* driver);

  // int64 sign_time = 5;
  void clear_sign_time();
  static const int kSignTimeFieldNumber = 5;
  ::google::protobuf::int64 sign_time() const;
  void set_sign_time(::google::protobuf::int64 value);

  // .ttmall.DeliveryState state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::ttmall::DeliveryState state() const;
  void set_state(::ttmall::DeliveryState value);

  // @@protoc_insertion_point(class_scope:ttmall.OrderDeliveryInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem > items_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::ttmall::DriverInfo* driver_;
  ::google::protobuf::int64 sign_time_;
  int state_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOrderDeliveryInfoRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetOrderDeliveryInfoRep) */ {
 public:
  GetOrderDeliveryInfoRep();
  virtual ~GetOrderDeliveryInfoRep();

  GetOrderDeliveryInfoRep(const GetOrderDeliveryInfoRep& from);

  inline GetOrderDeliveryInfoRep& operator=(const GetOrderDeliveryInfoRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOrderDeliveryInfoRep& default_instance();

  static inline const GetOrderDeliveryInfoRep* internal_default_instance() {
    return reinterpret_cast<const GetOrderDeliveryInfoRep*>(
               &_GetOrderDeliveryInfoRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(GetOrderDeliveryInfoRep* other);

  // implements Message ----------------------------------------------

  inline GetOrderDeliveryInfoRep* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOrderDeliveryInfoRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOrderDeliveryInfoRep& from);
  void MergeFrom(const GetOrderDeliveryInfoRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOrderDeliveryInfoRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ttmall.OrderDeliveryInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  const ::ttmall::OrderDeliveryInfo& infos(int index) const;
  ::ttmall::OrderDeliveryInfo* mutable_infos(int index);
  ::ttmall::OrderDeliveryInfo* add_infos();
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderDeliveryInfo >*
      mutable_infos();
  const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderDeliveryInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:ttmall.GetOrderDeliveryInfoRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ttmall::OrderDeliveryInfo > infos_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOrderInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetOrderInfoReq) */ {
 public:
  GetOrderInfoReq();
  virtual ~GetOrderInfoReq();

  GetOrderInfoReq(const GetOrderInfoReq& from);

  inline GetOrderInfoReq& operator=(const GetOrderInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOrderInfoReq& default_instance();

  static inline const GetOrderInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetOrderInfoReq*>(
               &_GetOrderInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(GetOrderInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetOrderInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOrderInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOrderInfoReq& from);
  void MergeFrom(const GetOrderInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOrderInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string order_id = 2;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  const ::std::string& order_id() const;
  void set_order_id(const ::std::string& value);
  #if LANG_CXX11
  void set_order_id(::std::string&& value);
  #endif
  void set_order_id(const char* value);
  void set_order_id(const char* value, size_t size);
  ::std::string* mutable_order_id();
  ::std::string* release_order_id();
  void set_allocated_order_id(::std::string* order_id);

  // @@protoc_insertion_point(class_scope:ttmall.GetOrderInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr order_id_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOrderInfoRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttmall.GetOrderInfoRep) */ {
 public:
  GetOrderInfoRep();
  virtual ~GetOrderInfoRep();

  GetOrderInfoRep(const GetOrderInfoRep& from);

  inline GetOrderInfoRep& operator=(const GetOrderInfoRep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOrderInfoRep& default_instance();

  static inline const GetOrderInfoRep* internal_default_instance() {
    return reinterpret_cast<const GetOrderInfoRep*>(
               &_GetOrderInfoRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(GetOrderInfoRep* other);

  // implements Message ----------------------------------------------

  inline GetOrderInfoRep* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOrderInfoRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOrderInfoRep& from);
  void MergeFrom(const GetOrderInfoRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOrderInfoRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ttmall.OrderInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ttmall::OrderInfo& info() const;
  ::ttmall::OrderInfo* mutable_info();
  ::ttmall::OrderInfo* release_info();
  void set_allocated_info(::ttmall::OrderInfo* info);

  // @@protoc_insertion_point(class_scope:ttmall.GetOrderInfoRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ttmall::OrderInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_user_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// string mobile = 1;
inline void LoginReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginReq.mobile)
  return mobile_.GetNoArena();
}
inline void LoginReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.LoginReq.mobile)
}
#if LANG_CXX11
inline void LoginReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.LoginReq.mobile)
}
#endif
inline void LoginReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.LoginReq.mobile)
}
inline void LoginReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.LoginReq.mobile)
}
inline ::std::string* LoginReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.LoginReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.LoginReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginReq.mobile)
}

// string pass = 2;
inline void LoginReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::pass() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginReq.pass)
  return pass_.GetNoArena();
}
inline void LoginReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.LoginReq.pass)
}
#if LANG_CXX11
inline void LoginReq::set_pass(::std::string&& value) {
  
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.LoginReq.pass)
}
#endif
inline void LoginReq::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.LoginReq.pass)
}
inline void LoginReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.LoginReq.pass)
}
inline ::std::string* LoginReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.LoginReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_pass() {
  // @@protoc_insertion_point(field_release:ttmall.LoginReq.pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginReq.pass)
}

// string platform = 3;
inline void LoginReq::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::platform() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginReq.platform)
  return platform_.GetNoArena();
}
inline void LoginReq::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.LoginReq.platform)
}
#if LANG_CXX11
inline void LoginReq::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.LoginReq.platform)
}
#endif
inline void LoginReq::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.LoginReq.platform)
}
inline void LoginReq::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.LoginReq.platform)
}
inline ::std::string* LoginReq::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.LoginReq.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_platform() {
  // @@protoc_insertion_point(field_release:ttmall.LoginReq.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginReq.platform)
}

// -------------------------------------------------------------------

// LoginRep

// string token = 1;
inline void LoginRep::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRep::token() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginRep.token)
  return token_.GetNoArena();
}
inline void LoginRep::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.LoginRep.token)
}
#if LANG_CXX11
inline void LoginRep::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.LoginRep.token)
}
#endif
inline void LoginRep::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.LoginRep.token)
}
inline void LoginRep::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.LoginRep.token)
}
inline ::std::string* LoginRep::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.LoginRep.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRep::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.LoginRep.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRep::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginRep.token)
}

// .ttmall.UserInfo info = 2;
inline bool LoginRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void LoginRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::UserInfo& LoginRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.LoginRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
inline ::ttmall::UserInfo* LoginRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.LoginRep.info)
  return info_;
}
inline ::ttmall::UserInfo* LoginRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.LoginRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void LoginRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.LoginRep.info)
}

// -------------------------------------------------------------------

// OptCartReq

// string token = 1;
inline void OptCartReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OptCartReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.token)
  return token_.GetNoArena();
}
inline void OptCartReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.token)
}
#if LANG_CXX11
inline void OptCartReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OptCartReq.token)
}
#endif
inline void OptCartReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OptCartReq.token)
}
inline void OptCartReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OptCartReq.token)
}
inline ::std::string* OptCartReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OptCartReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OptCartReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.OptCartReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OptCartReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OptCartReq.token)
}

// .ttmall.OptCartType type = 2;
inline void OptCartReq::clear_type() {
  type_ = 0;
}
inline ::ttmall::OptCartType OptCartReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.type)
  return static_cast< ::ttmall::OptCartType >(type_);
}
inline void OptCartReq::set_type(::ttmall::OptCartType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.type)
}

// string goods_id = 3;
inline void OptCartReq::clear_goods_id() {
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OptCartReq::goods_id() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.goods_id)
  return goods_id_.GetNoArena();
}
inline void OptCartReq::set_goods_id(const ::std::string& value) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.goods_id)
}
#if LANG_CXX11
inline void OptCartReq::set_goods_id(::std::string&& value) {
  
  goods_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OptCartReq.goods_id)
}
#endif
inline void OptCartReq::set_goods_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OptCartReq.goods_id)
}
inline void OptCartReq::set_goods_id(const char* value, size_t size) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OptCartReq.goods_id)
}
inline ::std::string* OptCartReq::mutable_goods_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OptCartReq.goods_id)
  return goods_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OptCartReq::release_goods_id() {
  // @@protoc_insertion_point(field_release:ttmall.OptCartReq.goods_id)
  
  return goods_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OptCartReq::set_allocated_goods_id(::std::string* goods_id) {
  if (goods_id != NULL) {
    
  } else {
    
  }
  goods_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goods_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OptCartReq.goods_id)
}

// string key_id = 4;
inline void OptCartReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OptCartReq::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.key_id)
  return key_id_.GetNoArena();
}
inline void OptCartReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.key_id)
}
#if LANG_CXX11
inline void OptCartReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OptCartReq.key_id)
}
#endif
inline void OptCartReq::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OptCartReq.key_id)
}
inline void OptCartReq::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OptCartReq.key_id)
}
inline ::std::string* OptCartReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OptCartReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OptCartReq::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.OptCartReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OptCartReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OptCartReq.key_id)
}

// int32 key_count = 5;
inline void OptCartReq::clear_key_count() {
  key_count_ = 0;
}
inline ::google::protobuf::int32 OptCartReq::key_count() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.key_count)
  return key_count_;
}
inline void OptCartReq::set_key_count(::google::protobuf::int32 value) {
  
  key_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.key_count)
}

// bool is_list = 6;
inline void OptCartReq::clear_is_list() {
  is_list_ = false;
}
inline bool OptCartReq::is_list() const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.is_list)
  return is_list_;
}
inline void OptCartReq::set_is_list(bool value) {
  
  is_list_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.is_list)
}

// repeated string cart_ids = 7;
inline int OptCartReq::cart_ids_size() const {
  return cart_ids_.size();
}
inline void OptCartReq::clear_cart_ids() {
  cart_ids_.Clear();
}
inline const ::std::string& OptCartReq::cart_ids(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.OptCartReq.cart_ids)
  return cart_ids_.Get(index);
}
inline ::std::string* OptCartReq::mutable_cart_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.OptCartReq.cart_ids)
  return cart_ids_.Mutable(index);
}
inline void OptCartReq::set_cart_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.cart_ids)
  cart_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void OptCartReq::set_cart_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ttmall.OptCartReq.cart_ids)
  cart_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void OptCartReq::set_cart_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ttmall.OptCartReq.cart_ids)
}
inline void OptCartReq::set_cart_ids(int index, const char* value, size_t size) {
  cart_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ttmall.OptCartReq.cart_ids)
}
inline ::std::string* OptCartReq::add_cart_ids() {
  // @@protoc_insertion_point(field_add_mutable:ttmall.OptCartReq.cart_ids)
  return cart_ids_.Add();
}
inline void OptCartReq::add_cart_ids(const ::std::string& value) {
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ttmall.OptCartReq.cart_ids)
}
#if LANG_CXX11
inline void OptCartReq::add_cart_ids(::std::string&& value) {
  cart_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ttmall.OptCartReq.cart_ids)
}
#endif
inline void OptCartReq::add_cart_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cart_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ttmall.OptCartReq.cart_ids)
}
inline void OptCartReq::add_cart_ids(const char* value, size_t size) {
  cart_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ttmall.OptCartReq.cart_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OptCartReq::cart_ids() const {
  // @@protoc_insertion_point(field_list:ttmall.OptCartReq.cart_ids)
  return cart_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OptCartReq::mutable_cart_ids() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.OptCartReq.cart_ids)
  return &cart_ids_;
}

// -------------------------------------------------------------------

// CartGoodsInfo

// string cart_id = 1;
inline void CartGoodsInfo::clear_cart_id() {
  cart_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CartGoodsInfo::cart_id() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.cart_id)
  return cart_id_.GetNoArena();
}
inline void CartGoodsInfo::set_cart_id(const ::std::string& value) {
  
  cart_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.cart_id)
}
#if LANG_CXX11
inline void CartGoodsInfo::set_cart_id(::std::string&& value) {
  
  cart_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CartGoodsInfo.cart_id)
}
#endif
inline void CartGoodsInfo::set_cart_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cart_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CartGoodsInfo.cart_id)
}
inline void CartGoodsInfo::set_cart_id(const char* value, size_t size) {
  
  cart_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CartGoodsInfo.cart_id)
}
inline ::std::string* CartGoodsInfo::mutable_cart_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CartGoodsInfo.cart_id)
  return cart_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CartGoodsInfo::release_cart_id() {
  // @@protoc_insertion_point(field_release:ttmall.CartGoodsInfo.cart_id)
  
  return cart_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CartGoodsInfo::set_allocated_cart_id(::std::string* cart_id) {
  if (cart_id != NULL) {
    
  } else {
    
  }
  cart_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cart_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CartGoodsInfo.cart_id)
}

// int32 key_count = 2;
inline void CartGoodsInfo::clear_key_count() {
  key_count_ = 0;
}
inline ::google::protobuf::int32 CartGoodsInfo::key_count() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.key_count)
  return key_count_;
}
inline void CartGoodsInfo::set_key_count(::google::protobuf::int32 value) {
  
  key_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.key_count)
}

// string key_id = 3;
inline void CartGoodsInfo::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CartGoodsInfo::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.key_id)
  return key_id_.GetNoArena();
}
inline void CartGoodsInfo::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.key_id)
}
#if LANG_CXX11
inline void CartGoodsInfo::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CartGoodsInfo.key_id)
}
#endif
inline void CartGoodsInfo::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CartGoodsInfo.key_id)
}
inline void CartGoodsInfo::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CartGoodsInfo.key_id)
}
inline ::std::string* CartGoodsInfo::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CartGoodsInfo.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CartGoodsInfo::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.CartGoodsInfo.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CartGoodsInfo::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CartGoodsInfo.key_id)
}

// .ttmall.GoodsInfo goods_info = 4;
inline bool CartGoodsInfo::has_goods_info() const {
  return this != internal_default_instance() && goods_info_ != NULL;
}
inline void CartGoodsInfo::clear_goods_info() {
  if (GetArenaNoVirtual() == NULL && goods_info_ != NULL) delete goods_info_;
  goods_info_ = NULL;
}
inline const ::ttmall::GoodsInfo& CartGoodsInfo::goods_info() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.goods_info)
  return goods_info_ != NULL ? *goods_info_
                         : *::ttmall::GoodsInfo::internal_default_instance();
}
inline ::ttmall::GoodsInfo* CartGoodsInfo::mutable_goods_info() {
  
  if (goods_info_ == NULL) {
    goods_info_ = new ::ttmall::GoodsInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.CartGoodsInfo.goods_info)
  return goods_info_;
}
inline ::ttmall::GoodsInfo* CartGoodsInfo::release_goods_info() {
  // @@protoc_insertion_point(field_release:ttmall.CartGoodsInfo.goods_info)
  
  ::ttmall::GoodsInfo* temp = goods_info_;
  goods_info_ = NULL;
  return temp;
}
inline void CartGoodsInfo::set_allocated_goods_info(::ttmall::GoodsInfo* goods_info) {
  delete goods_info_;
  goods_info_ = goods_info;
  if (goods_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.CartGoodsInfo.goods_info)
}

// int32 key_fee = 5;
inline void CartGoodsInfo::clear_key_fee() {
  key_fee_ = 0;
}
inline ::google::protobuf::int32 CartGoodsInfo::key_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.key_fee)
  return key_fee_;
}
inline void CartGoodsInfo::set_key_fee(::google::protobuf::int32 value) {
  
  key_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.key_fee)
}

// int32 dis_fee = 6;
inline void CartGoodsInfo::clear_dis_fee() {
  dis_fee_ = 0;
}
inline ::google::protobuf::int32 CartGoodsInfo::dis_fee() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.dis_fee)
  return dis_fee_;
}
inline void CartGoodsInfo::set_dis_fee(::google::protobuf::int32 value) {
  
  dis_fee_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.dis_fee)
}

// bool disabled = 7;
inline void CartGoodsInfo::clear_disabled() {
  disabled_ = false;
}
inline bool CartGoodsInfo::disabled() const {
  // @@protoc_insertion_point(field_get:ttmall.CartGoodsInfo.disabled)
  return disabled_;
}
inline void CartGoodsInfo::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:ttmall.CartGoodsInfo.disabled)
}

// -------------------------------------------------------------------

// ListCartReq

// string token = 1;
inline void ListCartReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListCartReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListCartReq.token)
  return token_.GetNoArena();
}
inline void ListCartReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListCartReq.token)
}
#if LANG_CXX11
inline void ListCartReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListCartReq.token)
}
#endif
inline void ListCartReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListCartReq.token)
}
inline void ListCartReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListCartReq.token)
}
inline ::std::string* ListCartReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListCartReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListCartReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListCartReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListCartReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListCartReq.token)
}

// -------------------------------------------------------------------

// ListCartRep

// int32 count = 1;
inline void ListCartRep::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 ListCartRep::count() const {
  // @@protoc_insertion_point(field_get:ttmall.ListCartRep.count)
  return count_;
}
inline void ListCartRep::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListCartRep.count)
}

// repeated .ttmall.CartGoodsInfo items = 2;
inline int ListCartRep::items_size() const {
  return items_.size();
}
inline void ListCartRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::CartGoodsInfo& ListCartRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListCartRep.items)
  return items_.Get(index);
}
inline ::ttmall::CartGoodsInfo* ListCartRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListCartRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::CartGoodsInfo* ListCartRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListCartRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >*
ListCartRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListCartRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >&
ListCartRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListCartRep.items)
  return items_;
}

// repeated .ttmall.CartGoodsInfo disables = 3;
inline int ListCartRep::disables_size() const {
  return disables_.size();
}
inline void ListCartRep::clear_disables() {
  disables_.Clear();
}
inline const ::ttmall::CartGoodsInfo& ListCartRep::disables(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListCartRep.disables)
  return disables_.Get(index);
}
inline ::ttmall::CartGoodsInfo* ListCartRep::mutable_disables(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListCartRep.disables)
  return disables_.Mutable(index);
}
inline ::ttmall::CartGoodsInfo* ListCartRep::add_disables() {
  // @@protoc_insertion_point(field_add:ttmall.ListCartRep.disables)
  return disables_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >*
ListCartRep::mutable_disables() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListCartRep.disables)
  return &disables_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::CartGoodsInfo >&
ListCartRep::disables() const {
  // @@protoc_insertion_point(field_list:ttmall.ListCartRep.disables)
  return disables_;
}

// -------------------------------------------------------------------

// ListAddressReq

// string token = 1;
inline void ListAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListAddressReq.token)
  return token_.GetNoArena();
}
inline void ListAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListAddressReq.token)
}
#if LANG_CXX11
inline void ListAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListAddressReq.token)
}
#endif
inline void ListAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListAddressReq.token)
}
inline void ListAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListAddressReq.token)
}
inline ::std::string* ListAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListAddressReq.token)
}

// -------------------------------------------------------------------

// ListAddressRep

// repeated .ttmall.AddressInfo Items = 1;
inline int ListAddressRep::items_size() const {
  return items_.size();
}
inline void ListAddressRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::AddressInfo& ListAddressRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListAddressRep.Items)
  return items_.Get(index);
}
inline ::ttmall::AddressInfo* ListAddressRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListAddressRep.Items)
  return items_.Mutable(index);
}
inline ::ttmall::AddressInfo* ListAddressRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListAddressRep.Items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >*
ListAddressRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListAddressRep.Items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::AddressInfo >&
ListAddressRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListAddressRep.Items)
  return items_;
}

// -------------------------------------------------------------------

// ListCouponReq

// string token = 1;
inline void ListCouponReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListCouponReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListCouponReq.token)
  return token_.GetNoArena();
}
inline void ListCouponReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListCouponReq.token)
}
#if LANG_CXX11
inline void ListCouponReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListCouponReq.token)
}
#endif
inline void ListCouponReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListCouponReq.token)
}
inline void ListCouponReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListCouponReq.token)
}
inline ::std::string* ListCouponReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListCouponReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListCouponReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListCouponReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListCouponReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListCouponReq.token)
}

// -------------------------------------------------------------------

// ListCouponRep

// repeated .ttmall.CouponInfo Items = 1;
inline int ListCouponRep::items_size() const {
  return items_.size();
}
inline void ListCouponRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::CouponInfo& ListCouponRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListCouponRep.Items)
  return items_.Get(index);
}
inline ::ttmall::CouponInfo* ListCouponRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListCouponRep.Items)
  return items_.Mutable(index);
}
inline ::ttmall::CouponInfo* ListCouponRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListCouponRep.Items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >*
ListCouponRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListCouponRep.Items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::CouponInfo >&
ListCouponRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListCouponRep.Items)
  return items_;
}

// -------------------------------------------------------------------

// AddGoodsFavReq

// string token = 1;
inline void AddGoodsFavReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddGoodsFavReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.AddGoodsFavReq.token)
  return token_.GetNoArena();
}
inline void AddGoodsFavReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddGoodsFavReq.token)
}
#if LANG_CXX11
inline void AddGoodsFavReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddGoodsFavReq.token)
}
#endif
inline void AddGoodsFavReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddGoodsFavReq.token)
}
inline void AddGoodsFavReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddGoodsFavReq.token)
}
inline ::std::string* AddGoodsFavReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddGoodsFavReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddGoodsFavReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.AddGoodsFavReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddGoodsFavReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddGoodsFavReq.token)
}

// string goods_id = 2;
inline void AddGoodsFavReq::clear_goods_id() {
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddGoodsFavReq::goods_id() const {
  // @@protoc_insertion_point(field_get:ttmall.AddGoodsFavReq.goods_id)
  return goods_id_.GetNoArena();
}
inline void AddGoodsFavReq::set_goods_id(const ::std::string& value) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddGoodsFavReq.goods_id)
}
#if LANG_CXX11
inline void AddGoodsFavReq::set_goods_id(::std::string&& value) {
  
  goods_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddGoodsFavReq.goods_id)
}
#endif
inline void AddGoodsFavReq::set_goods_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddGoodsFavReq.goods_id)
}
inline void AddGoodsFavReq::set_goods_id(const char* value, size_t size) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddGoodsFavReq.goods_id)
}
inline ::std::string* AddGoodsFavReq::mutable_goods_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddGoodsFavReq.goods_id)
  return goods_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddGoodsFavReq::release_goods_id() {
  // @@protoc_insertion_point(field_release:ttmall.AddGoodsFavReq.goods_id)
  
  return goods_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddGoodsFavReq::set_allocated_goods_id(::std::string* goods_id) {
  if (goods_id != NULL) {
    
  } else {
    
  }
  goods_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goods_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddGoodsFavReq.goods_id)
}

// string key_id = 3;
inline void AddGoodsFavReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddGoodsFavReq::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.AddGoodsFavReq.key_id)
  return key_id_.GetNoArena();
}
inline void AddGoodsFavReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddGoodsFavReq.key_id)
}
#if LANG_CXX11
inline void AddGoodsFavReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddGoodsFavReq.key_id)
}
#endif
inline void AddGoodsFavReq::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddGoodsFavReq.key_id)
}
inline void AddGoodsFavReq::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddGoodsFavReq.key_id)
}
inline ::std::string* AddGoodsFavReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddGoodsFavReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddGoodsFavReq::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.AddGoodsFavReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddGoodsFavReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddGoodsFavReq.key_id)
}

// -------------------------------------------------------------------

// AddGoodsFavRep

// int32 fav_count = 1;
inline void AddGoodsFavRep::clear_fav_count() {
  fav_count_ = 0;
}
inline ::google::protobuf::int32 AddGoodsFavRep::fav_count() const {
  // @@protoc_insertion_point(field_get:ttmall.AddGoodsFavRep.fav_count)
  return fav_count_;
}
inline void AddGoodsFavRep::set_fav_count(::google::protobuf::int32 value) {
  
  fav_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.AddGoodsFavRep.fav_count)
}

// -------------------------------------------------------------------

// DelGoodsFavReq

// string token = 1;
inline void DelGoodsFavReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelGoodsFavReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DelGoodsFavReq.token)
  return token_.GetNoArena();
}
inline void DelGoodsFavReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelGoodsFavReq.token)
}
#if LANG_CXX11
inline void DelGoodsFavReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelGoodsFavReq.token)
}
#endif
inline void DelGoodsFavReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelGoodsFavReq.token)
}
inline void DelGoodsFavReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelGoodsFavReq.token)
}
inline ::std::string* DelGoodsFavReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelGoodsFavReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelGoodsFavReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DelGoodsFavReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelGoodsFavReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelGoodsFavReq.token)
}

// string goods_id = 2;
inline void DelGoodsFavReq::clear_goods_id() {
  goods_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelGoodsFavReq::goods_id() const {
  // @@protoc_insertion_point(field_get:ttmall.DelGoodsFavReq.goods_id)
  return goods_id_.GetNoArena();
}
inline void DelGoodsFavReq::set_goods_id(const ::std::string& value) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelGoodsFavReq.goods_id)
}
#if LANG_CXX11
inline void DelGoodsFavReq::set_goods_id(::std::string&& value) {
  
  goods_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelGoodsFavReq.goods_id)
}
#endif
inline void DelGoodsFavReq::set_goods_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelGoodsFavReq.goods_id)
}
inline void DelGoodsFavReq::set_goods_id(const char* value, size_t size) {
  
  goods_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelGoodsFavReq.goods_id)
}
inline ::std::string* DelGoodsFavReq::mutable_goods_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelGoodsFavReq.goods_id)
  return goods_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelGoodsFavReq::release_goods_id() {
  // @@protoc_insertion_point(field_release:ttmall.DelGoodsFavReq.goods_id)
  
  return goods_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelGoodsFavReq::set_allocated_goods_id(::std::string* goods_id) {
  if (goods_id != NULL) {
    
  } else {
    
  }
  goods_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goods_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelGoodsFavReq.goods_id)
}

// -------------------------------------------------------------------

// DelGoodsFavRep

// int32 fav_count = 1;
inline void DelGoodsFavRep::clear_fav_count() {
  fav_count_ = 0;
}
inline ::google::protobuf::int32 DelGoodsFavRep::fav_count() const {
  // @@protoc_insertion_point(field_get:ttmall.DelGoodsFavRep.fav_count)
  return fav_count_;
}
inline void DelGoodsFavRep::set_fav_count(::google::protobuf::int32 value) {
  
  fav_count_ = value;
  // @@protoc_insertion_point(field_set:ttmall.DelGoodsFavRep.fav_count)
}

// -------------------------------------------------------------------

// ListGoodsFavReq

// string token = 1;
inline void ListGoodsFavReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListGoodsFavReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsFavReq.token)
  return token_.GetNoArena();
}
inline void ListGoodsFavReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsFavReq.token)
}
#if LANG_CXX11
inline void ListGoodsFavReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListGoodsFavReq.token)
}
#endif
inline void ListGoodsFavReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListGoodsFavReq.token)
}
inline void ListGoodsFavReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListGoodsFavReq.token)
}
inline ::std::string* ListGoodsFavReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsFavReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListGoodsFavReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListGoodsFavReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListGoodsFavReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListGoodsFavReq.token)
}

// int32 skip = 2;
inline void ListGoodsFavReq::clear_skip() {
  skip_ = 0;
}
inline ::google::protobuf::int32 ListGoodsFavReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsFavReq.skip)
  return skip_;
}
inline void ListGoodsFavReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsFavReq.skip)
}

// int32 limit = 3;
inline void ListGoodsFavReq::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 ListGoodsFavReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsFavReq.limit)
  return limit_;
}
inline void ListGoodsFavReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListGoodsFavReq.limit)
}

// -------------------------------------------------------------------

// UserFavInfo

// string key_id = 1;
inline void UserFavInfo::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserFavInfo::key_id() const {
  // @@protoc_insertion_point(field_get:ttmall.UserFavInfo.key_id)
  return key_id_.GetNoArena();
}
inline void UserFavInfo::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserFavInfo.key_id)
}
#if LANG_CXX11
inline void UserFavInfo::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserFavInfo.key_id)
}
#endif
inline void UserFavInfo::set_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserFavInfo.key_id)
}
inline void UserFavInfo::set_key_id(const char* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserFavInfo.key_id)
}
inline ::std::string* UserFavInfo::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserFavInfo.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserFavInfo::release_key_id() {
  // @@protoc_insertion_point(field_release:ttmall.UserFavInfo.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserFavInfo::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserFavInfo.key_id)
}

// .ttmall.GoodsInfo info = 2;
inline bool UserFavInfo::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UserFavInfo::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::GoodsInfo& UserFavInfo::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UserFavInfo.info)
  return info_ != NULL ? *info_
                         : *::ttmall::GoodsInfo::internal_default_instance();
}
inline ::ttmall::GoodsInfo* UserFavInfo::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::GoodsInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UserFavInfo.info)
  return info_;
}
inline ::ttmall::GoodsInfo* UserFavInfo::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UserFavInfo.info)
  
  ::ttmall::GoodsInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UserFavInfo::set_allocated_info(::ttmall::GoodsInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserFavInfo.info)
}

// bool disabled = 3;
inline void UserFavInfo::clear_disabled() {
  disabled_ = false;
}
inline bool UserFavInfo::disabled() const {
  // @@protoc_insertion_point(field_get:ttmall.UserFavInfo.disabled)
  return disabled_;
}
inline void UserFavInfo::set_disabled(bool value) {
  
  disabled_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserFavInfo.disabled)
}

// -------------------------------------------------------------------

// ListGoodsFavRep

// repeated .ttmall.UserFavInfo items = 1;
inline int ListGoodsFavRep::items_size() const {
  return items_.size();
}
inline void ListGoodsFavRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::UserFavInfo& ListGoodsFavRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListGoodsFavRep.items)
  return items_.Get(index);
}
inline ::ttmall::UserFavInfo* ListGoodsFavRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListGoodsFavRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::UserFavInfo* ListGoodsFavRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListGoodsFavRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::UserFavInfo >*
ListGoodsFavRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListGoodsFavRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::UserFavInfo >&
ListGoodsFavRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListGoodsFavRep.items)
  return items_;
}

// -------------------------------------------------------------------

// ListUserOrderReq

// string token = 1;
inline void ListUserOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListUserOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderReq.token)
  return token_.GetNoArena();
}
inline void ListUserOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.ListUserOrderReq.token)
}
#if LANG_CXX11
inline void ListUserOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.ListUserOrderReq.token)
}
#endif
inline void ListUserOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.ListUserOrderReq.token)
}
inline void ListUserOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.ListUserOrderReq.token)
}
inline ::std::string* ListUserOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.ListUserOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListUserOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.ListUserOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListUserOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.ListUserOrderReq.token)
}

// .ttmall.ListOrderOpt opt = 2;
inline void ListUserOrderReq::clear_opt() {
  opt_ = 0;
}
inline ::ttmall::ListOrderOpt ListUserOrderReq::opt() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderReq.opt)
  return static_cast< ::ttmall::ListOrderOpt >(opt_);
}
inline void ListUserOrderReq::set_opt(::ttmall::ListOrderOpt value) {
  
  opt_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListUserOrderReq.opt)
}

// int32 skip = 3;
inline void ListUserOrderReq::clear_skip() {
  skip_ = 0;
}
inline ::google::protobuf::int32 ListUserOrderReq::skip() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderReq.skip)
  return skip_;
}
inline void ListUserOrderReq::set_skip(::google::protobuf::int32 value) {
  
  skip_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListUserOrderReq.skip)
}

// int32 limit = 4;
inline void ListUserOrderReq::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 ListUserOrderReq::limit() const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderReq.limit)
  return limit_;
}
inline void ListUserOrderReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:ttmall.ListUserOrderReq.limit)
}

// -------------------------------------------------------------------

// ListUserOrderRep

// repeated .ttmall.OrderInfo items = 1;
inline int ListUserOrderRep::items_size() const {
  return items_.size();
}
inline void ListUserOrderRep::clear_items() {
  items_.Clear();
}
inline const ::ttmall::OrderInfo& ListUserOrderRep::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.ListUserOrderRep.items)
  return items_.Get(index);
}
inline ::ttmall::OrderInfo* ListUserOrderRep::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.ListUserOrderRep.items)
  return items_.Mutable(index);
}
inline ::ttmall::OrderInfo* ListUserOrderRep::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.ListUserOrderRep.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::OrderInfo >*
ListUserOrderRep::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.ListUserOrderRep.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderInfo >&
ListUserOrderRep::items() const {
  // @@protoc_insertion_point(field_list:ttmall.ListUserOrderRep.items)
  return items_;
}

// -------------------------------------------------------------------

// UserRegisterReq

// string token = 1;
inline void UserRegisterReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.token)
  return token_.GetNoArena();
}
inline void UserRegisterReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.token)
}
#if LANG_CXX11
inline void UserRegisterReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.token)
}
#endif
inline void UserRegisterReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.token)
}
inline void UserRegisterReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.token)
}
inline ::std::string* UserRegisterReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.token)
}

// string name = 2;
inline void UserRegisterReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.name)
  return name_.GetNoArena();
}
inline void UserRegisterReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.name)
}
#if LANG_CXX11
inline void UserRegisterReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.name)
}
#endif
inline void UserRegisterReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.name)
}
inline void UserRegisterReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.name)
}
inline ::std::string* UserRegisterReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.name)
}

// string owner = 3;
inline void UserRegisterReq::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::owner() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.owner)
  return owner_.GetNoArena();
}
inline void UserRegisterReq::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.owner)
}
#if LANG_CXX11
inline void UserRegisterReq::set_owner(::std::string&& value) {
  
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.owner)
}
#endif
inline void UserRegisterReq::set_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.owner)
}
inline void UserRegisterReq::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.owner)
}
inline ::std::string* UserRegisterReq::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_owner() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.owner)
}

// string type = 4;
inline void UserRegisterReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::type() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.type)
  return type_.GetNoArena();
}
inline void UserRegisterReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.type)
}
#if LANG_CXX11
inline void UserRegisterReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.type)
}
#endif
inline void UserRegisterReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.type)
}
inline void UserRegisterReq::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.type)
}
inline ::std::string* UserRegisterReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_type() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.type)
}

// string mobile = 5;
inline void UserRegisterReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.mobile)
  return mobile_.GetNoArena();
}
inline void UserRegisterReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.mobile)
}
#if LANG_CXX11
inline void UserRegisterReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.mobile)
}
#endif
inline void UserRegisterReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.mobile)
}
inline void UserRegisterReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.mobile)
}
inline ::std::string* UserRegisterReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.mobile)
}

// string code = 6;
inline void UserRegisterReq::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::code() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.code)
  return code_.GetNoArena();
}
inline void UserRegisterReq::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.code)
}
#if LANG_CXX11
inline void UserRegisterReq::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.code)
}
#endif
inline void UserRegisterReq::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.code)
}
inline void UserRegisterReq::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.code)
}
inline ::std::string* UserRegisterReq::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.code)
}

// string pass = 7;
inline void UserRegisterReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.pass)
  return pass_.GetNoArena();
}
inline void UserRegisterReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.pass)
}
#if LANG_CXX11
inline void UserRegisterReq::set_pass(::std::string&& value) {
  
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.pass)
}
#endif
inline void UserRegisterReq::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.pass)
}
inline void UserRegisterReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.pass)
}
inline ::std::string* UserRegisterReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_pass() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.pass)
}

// string referee = 8;
inline void UserRegisterReq::clear_referee() {
  referee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::referee() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.referee)
  return referee_.GetNoArena();
}
inline void UserRegisterReq::set_referee(const ::std::string& value) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.referee)
}
#if LANG_CXX11
inline void UserRegisterReq::set_referee(::std::string&& value) {
  
  referee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.referee)
}
#endif
inline void UserRegisterReq::set_referee(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.referee)
}
inline void UserRegisterReq::set_referee(const char* value, size_t size) {
  
  referee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.referee)
}
inline ::std::string* UserRegisterReq::mutable_referee() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.referee)
  return referee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_referee() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.referee)
  
  return referee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_referee(::std::string* referee) {
  if (referee != NULL) {
    
  } else {
    
  }
  referee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referee);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.referee)
}

// string deliver_time = 9;
inline void UserRegisterReq::clear_deliver_time() {
  deliver_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::deliver_time() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.deliver_time)
  return deliver_time_.GetNoArena();
}
inline void UserRegisterReq::set_deliver_time(const ::std::string& value) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.deliver_time)
}
#if LANG_CXX11
inline void UserRegisterReq::set_deliver_time(::std::string&& value) {
  
  deliver_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.deliver_time)
}
#endif
inline void UserRegisterReq::set_deliver_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.deliver_time)
}
inline void UserRegisterReq::set_deliver_time(const char* value, size_t size) {
  
  deliver_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.deliver_time)
}
inline ::std::string* UserRegisterReq::mutable_deliver_time() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.deliver_time)
  return deliver_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_deliver_time() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.deliver_time)
  
  return deliver_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_deliver_time(::std::string* deliver_time) {
  if (deliver_time != NULL) {
    
  } else {
    
  }
  deliver_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliver_time);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.deliver_time)
}

// .ttmall.AddressInfo address = 10;
inline bool UserRegisterReq::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline void UserRegisterReq::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
inline const ::ttmall::AddressInfo& UserRegisterReq::address() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.address)
  return address_ != NULL ? *address_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
inline ::ttmall::AddressInfo* UserRegisterReq::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.address)
  return address_;
}
inline ::ttmall::AddressInfo* UserRegisterReq::release_address() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.address)
  
  ::ttmall::AddressInfo* temp = address_;
  address_ = NULL;
  return temp;
}
inline void UserRegisterReq::set_allocated_address(::ttmall::AddressInfo* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.address)
}

// string mark = 11;
inline void UserRegisterReq::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterReq::mark() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterReq.mark)
  return mark_.GetNoArena();
}
inline void UserRegisterReq::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterReq.mark)
}
#if LANG_CXX11
inline void UserRegisterReq::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterReq.mark)
}
#endif
inline void UserRegisterReq::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterReq.mark)
}
inline void UserRegisterReq::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterReq.mark)
}
inline ::std::string* UserRegisterReq::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterReq.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterReq::release_mark() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterReq.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterReq::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterReq.mark)
}

// -------------------------------------------------------------------

// UserRegisterRep

// string token = 1;
inline void UserRegisterRep::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserRegisterRep::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterRep.token)
  return token_.GetNoArena();
}
inline void UserRegisterRep::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterRep.token)
}
#if LANG_CXX11
inline void UserRegisterRep::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UserRegisterRep.token)
}
#endif
inline void UserRegisterRep::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UserRegisterRep.token)
}
inline void UserRegisterRep::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UserRegisterRep.token)
}
inline ::std::string* UserRegisterRep::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterRep.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegisterRep::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterRep.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegisterRep::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterRep.token)
}

// .ttmall.UserInfo info = 2;
inline bool UserRegisterRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UserRegisterRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::UserInfo& UserRegisterRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
inline ::ttmall::UserInfo* UserRegisterRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UserRegisterRep.info)
  return info_;
}
inline ::ttmall::UserInfo* UserRegisterRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UserRegisterRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UserRegisterRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UserRegisterRep.info)
}

// bool is_pass = 3;
inline void UserRegisterRep::clear_is_pass() {
  is_pass_ = false;
}
inline bool UserRegisterRep::is_pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UserRegisterRep.is_pass)
  return is_pass_;
}
inline void UserRegisterRep::set_is_pass(bool value) {
  
  is_pass_ = value;
  // @@protoc_insertion_point(field_set:ttmall.UserRegisterRep.is_pass)
}

// -------------------------------------------------------------------

// AddUserAddressReq

// string token = 1;
inline void AddUserAddressReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.token)
  return token_.GetNoArena();
}
inline void AddUserAddressReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.token)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.token)
}
#endif
inline void AddUserAddressReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.token)
}
inline void AddUserAddressReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.token)
}
inline ::std::string* AddUserAddressReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.token)
}

// string id = 2;
inline void AddUserAddressReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.id)
  return id_.GetNoArena();
}
inline void AddUserAddressReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.id)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.id)
}
#endif
inline void AddUserAddressReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.id)
}
inline void AddUserAddressReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.id)
}
inline ::std::string* AddUserAddressReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.id)
}

// string name = 3;
inline void AddUserAddressReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::name() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.name)
  return name_.GetNoArena();
}
inline void AddUserAddressReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.name)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.name)
}
#endif
inline void AddUserAddressReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.name)
}
inline void AddUserAddressReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.name)
}
inline ::std::string* AddUserAddressReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_name() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.name)
}

// string province = 4;
inline void AddUserAddressReq::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::province() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.province)
  return province_.GetNoArena();
}
inline void AddUserAddressReq::set_province(const ::std::string& value) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.province)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_province(::std::string&& value) {
  
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.province)
}
#endif
inline void AddUserAddressReq::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.province)
}
inline void AddUserAddressReq::set_province(const char* value, size_t size) {
  
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.province)
}
inline ::std::string* AddUserAddressReq::mutable_province() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_province() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.province)
  
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    
  } else {
    
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.province)
}

// string city = 5;
inline void AddUserAddressReq::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::city() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.city)
  return city_.GetNoArena();
}
inline void AddUserAddressReq::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.city)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.city)
}
#endif
inline void AddUserAddressReq::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.city)
}
inline void AddUserAddressReq::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.city)
}
inline ::std::string* AddUserAddressReq::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_city() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.city)
}

// string area = 6;
inline void AddUserAddressReq::clear_area() {
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::area() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.area)
  return area_.GetNoArena();
}
inline void AddUserAddressReq::set_area(const ::std::string& value) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.area)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_area(::std::string&& value) {
  
  area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.area)
}
#endif
inline void AddUserAddressReq::set_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.area)
}
inline void AddUserAddressReq::set_area(const char* value, size_t size) {
  
  area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.area)
}
inline ::std::string* AddUserAddressReq::mutable_area() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.area)
  return area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_area() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.area)
  
  return area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_area(::std::string* area) {
  if (area != NULL) {
    
  } else {
    
  }
  area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.area)
}

// string addr = 7;
inline void AddUserAddressReq::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::addr() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.addr)
  return addr_.GetNoArena();
}
inline void AddUserAddressReq::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.addr)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.addr)
}
#endif
inline void AddUserAddressReq::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.addr)
}
inline void AddUserAddressReq::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.addr)
}
inline ::std::string* AddUserAddressReq::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_addr() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.addr)
}

// string contact = 8;
inline void AddUserAddressReq::clear_contact() {
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::contact() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.contact)
  return contact_.GetNoArena();
}
inline void AddUserAddressReq::set_contact(const ::std::string& value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.contact)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_contact(::std::string&& value) {
  
  contact_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.contact)
}
#endif
inline void AddUserAddressReq::set_contact(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.contact)
}
inline void AddUserAddressReq::set_contact(const char* value, size_t size) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.contact)
}
inline ::std::string* AddUserAddressReq::mutable_contact() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.contact)
  return contact_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_contact() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.contact)
  
  return contact_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_contact(::std::string* contact) {
  if (contact != NULL) {
    
  } else {
    
  }
  contact_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.contact)
}

// string mobile = 9;
inline void AddUserAddressReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddUserAddressReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.mobile)
  return mobile_.GetNoArena();
}
inline void AddUserAddressReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.mobile)
}
#if LANG_CXX11
inline void AddUserAddressReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.AddUserAddressReq.mobile)
}
#endif
inline void AddUserAddressReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.AddUserAddressReq.mobile)
}
inline void AddUserAddressReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.AddUserAddressReq.mobile)
}
inline ::std::string* AddUserAddressReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddUserAddressReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddUserAddressReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.mobile)
}

// .ttmall.CoordInfo coord = 10;
inline bool AddUserAddressReq::has_coord() const {
  return this != internal_default_instance() && coord_ != NULL;
}
inline void AddUserAddressReq::clear_coord() {
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
}
inline const ::ttmall::CoordInfo& AddUserAddressReq::coord() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.coord)
  return coord_ != NULL ? *coord_
                         : *::ttmall::CoordInfo::internal_default_instance();
}
inline ::ttmall::CoordInfo* AddUserAddressReq::mutable_coord() {
  
  if (coord_ == NULL) {
    coord_ = new ::ttmall::CoordInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressReq.coord)
  return coord_;
}
inline ::ttmall::CoordInfo* AddUserAddressReq::release_coord() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressReq.coord)
  
  ::ttmall::CoordInfo* temp = coord_;
  coord_ = NULL;
  return temp;
}
inline void AddUserAddressReq::set_allocated_coord(::ttmall::CoordInfo* coord) {
  delete coord_;
  coord_ = coord;
  if (coord) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressReq.coord)
}

// bool default = 11;
inline void AddUserAddressReq::clear_default_() {
  default__ = false;
}
inline bool AddUserAddressReq::default_() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressReq.default)
  return default__;
}
inline void AddUserAddressReq::set_default_(bool value) {
  
  default__ = value;
  // @@protoc_insertion_point(field_set:ttmall.AddUserAddressReq.default)
}

// -------------------------------------------------------------------

// AddUserAddressRep

// .ttmall.AddressInfo info = 1;
inline bool AddUserAddressRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void AddUserAddressRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::AddressInfo& AddUserAddressRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.AddUserAddressRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
inline ::ttmall::AddressInfo* AddUserAddressRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.AddUserAddressRep.info)
  return info_;
}
inline ::ttmall::AddressInfo* AddUserAddressRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.AddUserAddressRep.info)
  
  ::ttmall::AddressInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void AddUserAddressRep::set_allocated_info(::ttmall::AddressInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.AddUserAddressRep.info)
}

// -------------------------------------------------------------------

// SetDefaultAddrReq

// string token = 1;
inline void SetDefaultAddrReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDefaultAddrReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.SetDefaultAddrReq.token)
  return token_.GetNoArena();
}
inline void SetDefaultAddrReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetDefaultAddrReq.token)
}
#if LANG_CXX11
inline void SetDefaultAddrReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetDefaultAddrReq.token)
}
#endif
inline void SetDefaultAddrReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetDefaultAddrReq.token)
}
inline void SetDefaultAddrReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetDefaultAddrReq.token)
}
inline ::std::string* SetDefaultAddrReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetDefaultAddrReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDefaultAddrReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.SetDefaultAddrReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDefaultAddrReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetDefaultAddrReq.token)
}

// string id = 2;
inline void SetDefaultAddrReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDefaultAddrReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.SetDefaultAddrReq.id)
  return id_.GetNoArena();
}
inline void SetDefaultAddrReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.SetDefaultAddrReq.id)
}
#if LANG_CXX11
inline void SetDefaultAddrReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.SetDefaultAddrReq.id)
}
#endif
inline void SetDefaultAddrReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.SetDefaultAddrReq.id)
}
inline void SetDefaultAddrReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.SetDefaultAddrReq.id)
}
inline ::std::string* SetDefaultAddrReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.SetDefaultAddrReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDefaultAddrReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.SetDefaultAddrReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDefaultAddrReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetDefaultAddrReq.id)
}

// -------------------------------------------------------------------

// SetDefaultAddrRep

// .ttmall.AddressInfo info = 1;
inline bool SetDefaultAddrRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void SetDefaultAddrRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::AddressInfo& SetDefaultAddrRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.SetDefaultAddrRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::AddressInfo::internal_default_instance();
}
inline ::ttmall::AddressInfo* SetDefaultAddrRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::AddressInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.SetDefaultAddrRep.info)
  return info_;
}
inline ::ttmall::AddressInfo* SetDefaultAddrRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.SetDefaultAddrRep.info)
  
  ::ttmall::AddressInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SetDefaultAddrRep::set_allocated_info(::ttmall::AddressInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.SetDefaultAddrRep.info)
}

// -------------------------------------------------------------------

// DelUserAddrReq

// string token = 1;
inline void DelUserAddrReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelUserAddrReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.DelUserAddrReq.token)
  return token_.GetNoArena();
}
inline void DelUserAddrReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelUserAddrReq.token)
}
#if LANG_CXX11
inline void DelUserAddrReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelUserAddrReq.token)
}
#endif
inline void DelUserAddrReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelUserAddrReq.token)
}
inline void DelUserAddrReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelUserAddrReq.token)
}
inline ::std::string* DelUserAddrReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelUserAddrReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelUserAddrReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.DelUserAddrReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelUserAddrReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelUserAddrReq.token)
}

// string id = 2;
inline void DelUserAddrReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelUserAddrReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.DelUserAddrReq.id)
  return id_.GetNoArena();
}
inline void DelUserAddrReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelUserAddrReq.id)
}
#if LANG_CXX11
inline void DelUserAddrReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelUserAddrReq.id)
}
#endif
inline void DelUserAddrReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelUserAddrReq.id)
}
inline void DelUserAddrReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelUserAddrReq.id)
}
inline ::std::string* DelUserAddrReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelUserAddrReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelUserAddrReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.DelUserAddrReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelUserAddrReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelUserAddrReq.id)
}

// -------------------------------------------------------------------

// DelUserAddrRep

// string id = 1;
inline void DelUserAddrRep::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelUserAddrRep::id() const {
  // @@protoc_insertion_point(field_get:ttmall.DelUserAddrRep.id)
  return id_.GetNoArena();
}
inline void DelUserAddrRep::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.DelUserAddrRep.id)
}
#if LANG_CXX11
inline void DelUserAddrRep::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.DelUserAddrRep.id)
}
#endif
inline void DelUserAddrRep::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.DelUserAddrRep.id)
}
inline void DelUserAddrRep::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.DelUserAddrRep.id)
}
inline ::std::string* DelUserAddrRep::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.DelUserAddrRep.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelUserAddrRep::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.DelUserAddrRep.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelUserAddrRep::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.DelUserAddrRep.id)
}

// -------------------------------------------------------------------

// CancelOrderReq

// string token = 1;
inline void CancelOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.CancelOrderReq.token)
  return token_.GetNoArena();
}
inline void CancelOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CancelOrderReq.token)
}
#if LANG_CXX11
inline void CancelOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CancelOrderReq.token)
}
#endif
inline void CancelOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CancelOrderReq.token)
}
inline void CancelOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CancelOrderReq.token)
}
inline ::std::string* CancelOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CancelOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.CancelOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CancelOrderReq.token)
}

// string id = 2;
inline void CancelOrderReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelOrderReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.CancelOrderReq.id)
  return id_.GetNoArena();
}
inline void CancelOrderReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.CancelOrderReq.id)
}
#if LANG_CXX11
inline void CancelOrderReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.CancelOrderReq.id)
}
#endif
inline void CancelOrderReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.CancelOrderReq.id)
}
inline void CancelOrderReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.CancelOrderReq.id)
}
inline ::std::string* CancelOrderReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.CancelOrderReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelOrderReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.CancelOrderReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelOrderReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.CancelOrderReq.id)
}

// -------------------------------------------------------------------

// CancelOrderRep

// .ttmall.OrderInfo info = 1;
inline bool CancelOrderRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void CancelOrderRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::OrderInfo& CancelOrderRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.CancelOrderRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
inline ::ttmall::OrderInfo* CancelOrderRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.CancelOrderRep.info)
  return info_;
}
inline ::ttmall::OrderInfo* CancelOrderRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.CancelOrderRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void CancelOrderRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.CancelOrderRep.info)
}

// -------------------------------------------------------------------

// HideOrderReq

// string token = 1;
inline void HideOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HideOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.HideOrderReq.token)
  return token_.GetNoArena();
}
inline void HideOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.HideOrderReq.token)
}
#if LANG_CXX11
inline void HideOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.HideOrderReq.token)
}
#endif
inline void HideOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.HideOrderReq.token)
}
inline void HideOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.HideOrderReq.token)
}
inline ::std::string* HideOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.HideOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HideOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.HideOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HideOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.HideOrderReq.token)
}

// string id = 2;
inline void HideOrderReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HideOrderReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.HideOrderReq.id)
  return id_.GetNoArena();
}
inline void HideOrderReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.HideOrderReq.id)
}
#if LANG_CXX11
inline void HideOrderReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.HideOrderReq.id)
}
#endif
inline void HideOrderReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.HideOrderReq.id)
}
inline void HideOrderReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.HideOrderReq.id)
}
inline ::std::string* HideOrderReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.HideOrderReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HideOrderReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.HideOrderReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HideOrderReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.HideOrderReq.id)
}

// -------------------------------------------------------------------

// HideOrderRep

// .ttmall.OrderInfo info = 1;
inline bool HideOrderRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void HideOrderRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::OrderInfo& HideOrderRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.HideOrderRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
inline ::ttmall::OrderInfo* HideOrderRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.HideOrderRep.info)
  return info_;
}
inline ::ttmall::OrderInfo* HideOrderRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.HideOrderRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void HideOrderRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.HideOrderRep.info)
}

// -------------------------------------------------------------------

// RepeatOrderReq

// string token = 1;
inline void RepeatOrderReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RepeatOrderReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.RepeatOrderReq.token)
  return token_.GetNoArena();
}
inline void RepeatOrderReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RepeatOrderReq.token)
}
#if LANG_CXX11
inline void RepeatOrderReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RepeatOrderReq.token)
}
#endif
inline void RepeatOrderReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RepeatOrderReq.token)
}
inline void RepeatOrderReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RepeatOrderReq.token)
}
inline ::std::string* RepeatOrderReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RepeatOrderReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepeatOrderReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.RepeatOrderReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RepeatOrderReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RepeatOrderReq.token)
}

// string id = 2;
inline void RepeatOrderReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RepeatOrderReq::id() const {
  // @@protoc_insertion_point(field_get:ttmall.RepeatOrderReq.id)
  return id_.GetNoArena();
}
inline void RepeatOrderReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.RepeatOrderReq.id)
}
#if LANG_CXX11
inline void RepeatOrderReq::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.RepeatOrderReq.id)
}
#endif
inline void RepeatOrderReq::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.RepeatOrderReq.id)
}
inline void RepeatOrderReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.RepeatOrderReq.id)
}
inline ::std::string* RepeatOrderReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.RepeatOrderReq.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RepeatOrderReq::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.RepeatOrderReq.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RepeatOrderReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.RepeatOrderReq.id)
}

// -------------------------------------------------------------------

// RepeatOrderRep

// .ttmall.OrderInfo info = 1;
inline bool RepeatOrderRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void RepeatOrderRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::OrderInfo& RepeatOrderRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.RepeatOrderRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
inline ::ttmall::OrderInfo* RepeatOrderRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.RepeatOrderRep.info)
  return info_;
}
inline ::ttmall::OrderInfo* RepeatOrderRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.RepeatOrderRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RepeatOrderRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.RepeatOrderRep.info)
}

// -------------------------------------------------------------------

// GetUserInfoReq

// string token = 1;
inline void GetUserInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetUserInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetUserInfoReq.token)
  return token_.GetNoArena();
}
inline void GetUserInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetUserInfoReq.token)
}
#if LANG_CXX11
inline void GetUserInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetUserInfoReq.token)
}
#endif
inline void GetUserInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetUserInfoReq.token)
}
inline void GetUserInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetUserInfoReq.token)
}
inline ::std::string* GetUserInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetUserInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUserInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetUserInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUserInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetUserInfoReq.token)
}

// -------------------------------------------------------------------

// GetUserInfoRep

// .ttmall.UserInfo info = 1;
inline bool GetUserInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void GetUserInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::UserInfo& GetUserInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.GetUserInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
inline ::ttmall::UserInfo* GetUserInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.GetUserInfoRep.info)
  return info_;
}
inline ::ttmall::UserInfo* GetUserInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.GetUserInfoRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GetUserInfoRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetUserInfoRep.info)
}

// -------------------------------------------------------------------

// UpdateUserPassReq

// string token = 1;
inline void UpdateUserPassReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserPassReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassReq.token)
  return token_.GetNoArena();
}
inline void UpdateUserPassReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserPassReq.token)
}
#if LANG_CXX11
inline void UpdateUserPassReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserPassReq.token)
}
#endif
inline void UpdateUserPassReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserPassReq.token)
}
inline void UpdateUserPassReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserPassReq.token)
}
inline ::std::string* UpdateUserPassReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserPassReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserPassReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassReq.token)
}

// string mobile = 2;
inline void UpdateUserPassReq::clear_mobile() {
  mobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserPassReq::mobile() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassReq.mobile)
  return mobile_.GetNoArena();
}
inline void UpdateUserPassReq::set_mobile(const ::std::string& value) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserPassReq.mobile)
}
#if LANG_CXX11
inline void UpdateUserPassReq::set_mobile(::std::string&& value) {
  
  mobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserPassReq.mobile)
}
#endif
inline void UpdateUserPassReq::set_mobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserPassReq.mobile)
}
inline void UpdateUserPassReq::set_mobile(const char* value, size_t size) {
  
  mobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserPassReq.mobile)
}
inline ::std::string* UpdateUserPassReq::mutable_mobile() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassReq.mobile)
  return mobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserPassReq::release_mobile() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassReq.mobile)
  
  return mobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserPassReq::set_allocated_mobile(::std::string* mobile) {
  if (mobile != NULL) {
    
  } else {
    
  }
  mobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassReq.mobile)
}

// string code = 3;
inline void UpdateUserPassReq::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserPassReq::code() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassReq.code)
  return code_.GetNoArena();
}
inline void UpdateUserPassReq::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserPassReq.code)
}
#if LANG_CXX11
inline void UpdateUserPassReq::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserPassReq.code)
}
#endif
inline void UpdateUserPassReq::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserPassReq.code)
}
inline void UpdateUserPassReq::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserPassReq.code)
}
inline ::std::string* UpdateUserPassReq::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassReq.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserPassReq::release_code() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassReq.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserPassReq::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassReq.code)
}

// string pass = 4;
inline void UpdateUserPassReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserPassReq::pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassReq.pass)
  return pass_.GetNoArena();
}
inline void UpdateUserPassReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserPassReq.pass)
}
#if LANG_CXX11
inline void UpdateUserPassReq::set_pass(::std::string&& value) {
  
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserPassReq.pass)
}
#endif
inline void UpdateUserPassReq::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserPassReq.pass)
}
inline void UpdateUserPassReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserPassReq.pass)
}
inline ::std::string* UpdateUserPassReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserPassReq::release_pass() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassReq.pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserPassReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassReq.pass)
}

// -------------------------------------------------------------------

// UpdateUserPassRep

// .ttmall.UserInfo info = 1;
inline bool UpdateUserPassRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UpdateUserPassRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::UserInfo& UpdateUserPassRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserPassRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
inline ::ttmall::UserInfo* UpdateUserPassRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserPassRep.info)
  return info_;
}
inline ::ttmall::UserInfo* UpdateUserPassRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserPassRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UpdateUserPassRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserPassRep.info)
}

// -------------------------------------------------------------------

// UpdateUserInfoReq

// string token = 1;
inline void UpdateUserInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserInfoReq.token)
  return token_.GetNoArena();
}
inline void UpdateUserInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserInfoReq.token)
}
#if LANG_CXX11
inline void UpdateUserInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserInfoReq.token)
}
#endif
inline void UpdateUserInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserInfoReq.token)
}
inline void UpdateUserInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserInfoReq.token)
}
inline ::std::string* UpdateUserInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserInfoReq.token)
}

// bytes avatar = 2;
inline void UpdateUserInfoReq::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserInfoReq::avatar() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserInfoReq.avatar)
  return avatar_.GetNoArena();
}
inline void UpdateUserInfoReq::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserInfoReq.avatar)
}
#if LANG_CXX11
inline void UpdateUserInfoReq::set_avatar(::std::string&& value) {
  
  avatar_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserInfoReq.avatar)
}
#endif
inline void UpdateUserInfoReq::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserInfoReq.avatar)
}
inline void UpdateUserInfoReq::set_avatar(const void* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserInfoReq.avatar)
}
inline ::std::string* UpdateUserInfoReq::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserInfoReq.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserInfoReq::release_avatar() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserInfoReq.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserInfoReq::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserInfoReq.avatar)
}

// -------------------------------------------------------------------

// UpdateUserInfoRep

// .ttmall.UserInfo info = 1;
inline bool UpdateUserInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UpdateUserInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::UserInfo& UpdateUserInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
inline ::ttmall::UserInfo* UpdateUserInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserInfoRep.info)
  return info_;
}
inline ::ttmall::UserInfo* UpdateUserInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserInfoRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UpdateUserInfoRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserInfoRep.info)
}

// -------------------------------------------------------------------

// UpdateUserMobileReq

// string login_token = 1;
inline void UpdateUserMobileReq::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserMobileReq::login_token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileReq.login_token)
  return login_token_.GetNoArena();
}
inline void UpdateUserMobileReq::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserMobileReq.login_token)
}
#if LANG_CXX11
inline void UpdateUserMobileReq::set_login_token(::std::string&& value) {
  
  login_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserMobileReq.login_token)
}
#endif
inline void UpdateUserMobileReq::set_login_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserMobileReq.login_token)
}
inline void UpdateUserMobileReq::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserMobileReq.login_token)
}
inline ::std::string* UpdateUserMobileReq::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileReq.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserMobileReq::release_login_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileReq.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserMobileReq::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileReq.login_token)
}

// string login_pass = 2;
inline void UpdateUserMobileReq::clear_login_pass() {
  login_pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserMobileReq::login_pass() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileReq.login_pass)
  return login_pass_.GetNoArena();
}
inline void UpdateUserMobileReq::set_login_pass(const ::std::string& value) {
  
  login_pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserMobileReq.login_pass)
}
#if LANG_CXX11
inline void UpdateUserMobileReq::set_login_pass(::std::string&& value) {
  
  login_pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserMobileReq.login_pass)
}
#endif
inline void UpdateUserMobileReq::set_login_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  login_pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserMobileReq.login_pass)
}
inline void UpdateUserMobileReq::set_login_pass(const char* value, size_t size) {
  
  login_pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserMobileReq.login_pass)
}
inline ::std::string* UpdateUserMobileReq::mutable_login_pass() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileReq.login_pass)
  return login_pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserMobileReq::release_login_pass() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileReq.login_pass)
  
  return login_pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserMobileReq::set_allocated_login_pass(::std::string* login_pass) {
  if (login_pass != NULL) {
    
  } else {
    
  }
  login_pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_pass);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileReq.login_pass)
}

// string mobile_token = 3;
inline void UpdateUserMobileReq::clear_mobile_token() {
  mobile_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserMobileReq::mobile_token() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileReq.mobile_token)
  return mobile_token_.GetNoArena();
}
inline void UpdateUserMobileReq::set_mobile_token(const ::std::string& value) {
  
  mobile_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserMobileReq.mobile_token)
}
#if LANG_CXX11
inline void UpdateUserMobileReq::set_mobile_token(::std::string&& value) {
  
  mobile_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserMobileReq.mobile_token)
}
#endif
inline void UpdateUserMobileReq::set_mobile_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserMobileReq.mobile_token)
}
inline void UpdateUserMobileReq::set_mobile_token(const char* value, size_t size) {
  
  mobile_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserMobileReq.mobile_token)
}
inline ::std::string* UpdateUserMobileReq::mutable_mobile_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileReq.mobile_token)
  return mobile_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserMobileReq::release_mobile_token() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileReq.mobile_token)
  
  return mobile_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserMobileReq::set_allocated_mobile_token(::std::string* mobile_token) {
  if (mobile_token != NULL) {
    
  } else {
    
  }
  mobile_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile_token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileReq.mobile_token)
}

// string mobile_code = 4;
inline void UpdateUserMobileReq::clear_mobile_code() {
  mobile_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateUserMobileReq::mobile_code() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileReq.mobile_code)
  return mobile_code_.GetNoArena();
}
inline void UpdateUserMobileReq::set_mobile_code(const ::std::string& value) {
  
  mobile_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.UpdateUserMobileReq.mobile_code)
}
#if LANG_CXX11
inline void UpdateUserMobileReq::set_mobile_code(::std::string&& value) {
  
  mobile_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.UpdateUserMobileReq.mobile_code)
}
#endif
inline void UpdateUserMobileReq::set_mobile_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobile_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.UpdateUserMobileReq.mobile_code)
}
inline void UpdateUserMobileReq::set_mobile_code(const char* value, size_t size) {
  
  mobile_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.UpdateUserMobileReq.mobile_code)
}
inline ::std::string* UpdateUserMobileReq::mutable_mobile_code() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileReq.mobile_code)
  return mobile_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateUserMobileReq::release_mobile_code() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileReq.mobile_code)
  
  return mobile_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateUserMobileReq::set_allocated_mobile_code(::std::string* mobile_code) {
  if (mobile_code != NULL) {
    
  } else {
    
  }
  mobile_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobile_code);
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileReq.mobile_code)
}

// -------------------------------------------------------------------

// UpdateUserMobileRep

// .ttmall.UserInfo info = 1;
inline bool UpdateUserMobileRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UpdateUserMobileRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::UserInfo& UpdateUserMobileRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.UpdateUserMobileRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::UserInfo::internal_default_instance();
}
inline ::ttmall::UserInfo* UpdateUserMobileRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.UpdateUserMobileRep.info)
  return info_;
}
inline ::ttmall::UserInfo* UpdateUserMobileRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.UpdateUserMobileRep.info)
  
  ::ttmall::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UpdateUserMobileRep::set_allocated_info(::ttmall::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.UpdateUserMobileRep.info)
}

// -------------------------------------------------------------------

// GetOrderDeliveryInfoReq

// string token = 1;
inline void GetOrderDeliveryInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOrderDeliveryInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderDeliveryInfoReq.token)
  return token_.GetNoArena();
}
inline void GetOrderDeliveryInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetOrderDeliveryInfoReq.token)
}
#if LANG_CXX11
inline void GetOrderDeliveryInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetOrderDeliveryInfoReq.token)
}
#endif
inline void GetOrderDeliveryInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetOrderDeliveryInfoReq.token)
}
inline void GetOrderDeliveryInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetOrderDeliveryInfoReq.token)
}
inline ::std::string* GetOrderDeliveryInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderDeliveryInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOrderDeliveryInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderDeliveryInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOrderDeliveryInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderDeliveryInfoReq.token)
}

// string order_id = 2;
inline void GetOrderDeliveryInfoReq::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOrderDeliveryInfoReq::order_id() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderDeliveryInfoReq.order_id)
  return order_id_.GetNoArena();
}
inline void GetOrderDeliveryInfoReq::set_order_id(const ::std::string& value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetOrderDeliveryInfoReq.order_id)
}
#if LANG_CXX11
inline void GetOrderDeliveryInfoReq::set_order_id(::std::string&& value) {
  
  order_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetOrderDeliveryInfoReq.order_id)
}
#endif
inline void GetOrderDeliveryInfoReq::set_order_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetOrderDeliveryInfoReq.order_id)
}
inline void GetOrderDeliveryInfoReq::set_order_id(const char* value, size_t size) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetOrderDeliveryInfoReq.order_id)
}
inline ::std::string* GetOrderDeliveryInfoReq::mutable_order_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderDeliveryInfoReq.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOrderDeliveryInfoReq::release_order_id() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderDeliveryInfoReq.order_id)
  
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOrderDeliveryInfoReq::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    
  } else {
    
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderDeliveryInfoReq.order_id)
}

// -------------------------------------------------------------------

// OrderDeliveryInfo

// string id = 1;
inline void OrderDeliveryInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderDeliveryInfo::id() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.id)
  return id_.GetNoArena();
}
inline void OrderDeliveryInfo::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.OrderDeliveryInfo.id)
}
#if LANG_CXX11
inline void OrderDeliveryInfo::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.OrderDeliveryInfo.id)
}
#endif
inline void OrderDeliveryInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.OrderDeliveryInfo.id)
}
inline void OrderDeliveryInfo::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.OrderDeliveryInfo.id)
}
inline ::std::string* OrderDeliveryInfo::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.OrderDeliveryInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderDeliveryInfo::release_id() {
  // @@protoc_insertion_point(field_release:ttmall.OrderDeliveryInfo.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderDeliveryInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderDeliveryInfo.id)
}

// repeated .ttmall.OrderItem items = 2;
inline int OrderDeliveryInfo::items_size() const {
  return items_.size();
}
inline void OrderDeliveryInfo::clear_items() {
  items_.Clear();
}
inline const ::ttmall::OrderItem& OrderDeliveryInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.items)
  return items_.Get(index);
}
inline ::ttmall::OrderItem* OrderDeliveryInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.OrderDeliveryInfo.items)
  return items_.Mutable(index);
}
inline ::ttmall::OrderItem* OrderDeliveryInfo::add_items() {
  // @@protoc_insertion_point(field_add:ttmall.OrderDeliveryInfo.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >*
OrderDeliveryInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.OrderDeliveryInfo.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderItem >&
OrderDeliveryInfo::items() const {
  // @@protoc_insertion_point(field_list:ttmall.OrderDeliveryInfo.items)
  return items_;
}

// .ttmall.DeliveryState state = 3;
inline void OrderDeliveryInfo::clear_state() {
  state_ = 0;
}
inline ::ttmall::DeliveryState OrderDeliveryInfo::state() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.state)
  return static_cast< ::ttmall::DeliveryState >(state_);
}
inline void OrderDeliveryInfo::set_state(::ttmall::DeliveryState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderDeliveryInfo.state)
}

// .ttmall.DriverInfo driver = 4;
inline bool OrderDeliveryInfo::has_driver() const {
  return this != internal_default_instance() && driver_ != NULL;
}
inline void OrderDeliveryInfo::clear_driver() {
  if (GetArenaNoVirtual() == NULL && driver_ != NULL) delete driver_;
  driver_ = NULL;
}
inline const ::ttmall::DriverInfo& OrderDeliveryInfo::driver() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.driver)
  return driver_ != NULL ? *driver_
                         : *::ttmall::DriverInfo::internal_default_instance();
}
inline ::ttmall::DriverInfo* OrderDeliveryInfo::mutable_driver() {
  
  if (driver_ == NULL) {
    driver_ = new ::ttmall::DriverInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.OrderDeliveryInfo.driver)
  return driver_;
}
inline ::ttmall::DriverInfo* OrderDeliveryInfo::release_driver() {
  // @@protoc_insertion_point(field_release:ttmall.OrderDeliveryInfo.driver)
  
  ::ttmall::DriverInfo* temp = driver_;
  driver_ = NULL;
  return temp;
}
inline void OrderDeliveryInfo::set_allocated_driver(::ttmall::DriverInfo* driver) {
  delete driver_;
  driver_ = driver;
  if (driver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.OrderDeliveryInfo.driver)
}

// int64 sign_time = 5;
inline void OrderDeliveryInfo::clear_sign_time() {
  sign_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OrderDeliveryInfo::sign_time() const {
  // @@protoc_insertion_point(field_get:ttmall.OrderDeliveryInfo.sign_time)
  return sign_time_;
}
inline void OrderDeliveryInfo::set_sign_time(::google::protobuf::int64 value) {
  
  sign_time_ = value;
  // @@protoc_insertion_point(field_set:ttmall.OrderDeliveryInfo.sign_time)
}

// -------------------------------------------------------------------

// GetOrderDeliveryInfoRep

// repeated .ttmall.OrderDeliveryInfo infos = 1;
inline int GetOrderDeliveryInfoRep::infos_size() const {
  return infos_.size();
}
inline void GetOrderDeliveryInfoRep::clear_infos() {
  infos_.Clear();
}
inline const ::ttmall::OrderDeliveryInfo& GetOrderDeliveryInfoRep::infos(int index) const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderDeliveryInfoRep.infos)
  return infos_.Get(index);
}
inline ::ttmall::OrderDeliveryInfo* GetOrderDeliveryInfoRep::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderDeliveryInfoRep.infos)
  return infos_.Mutable(index);
}
inline ::ttmall::OrderDeliveryInfo* GetOrderDeliveryInfoRep::add_infos() {
  // @@protoc_insertion_point(field_add:ttmall.GetOrderDeliveryInfoRep.infos)
  return infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ttmall::OrderDeliveryInfo >*
GetOrderDeliveryInfoRep::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:ttmall.GetOrderDeliveryInfoRep.infos)
  return &infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ttmall::OrderDeliveryInfo >&
GetOrderDeliveryInfoRep::infos() const {
  // @@protoc_insertion_point(field_list:ttmall.GetOrderDeliveryInfoRep.infos)
  return infos_;
}

// -------------------------------------------------------------------

// GetOrderInfoReq

// string token = 1;
inline void GetOrderInfoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOrderInfoReq::token() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderInfoReq.token)
  return token_.GetNoArena();
}
inline void GetOrderInfoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetOrderInfoReq.token)
}
#if LANG_CXX11
inline void GetOrderInfoReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetOrderInfoReq.token)
}
#endif
inline void GetOrderInfoReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetOrderInfoReq.token)
}
inline void GetOrderInfoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetOrderInfoReq.token)
}
inline ::std::string* GetOrderInfoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderInfoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOrderInfoReq::release_token() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderInfoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOrderInfoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderInfoReq.token)
}

// string order_id = 2;
inline void GetOrderInfoReq::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOrderInfoReq::order_id() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderInfoReq.order_id)
  return order_id_.GetNoArena();
}
inline void GetOrderInfoReq::set_order_id(const ::std::string& value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ttmall.GetOrderInfoReq.order_id)
}
#if LANG_CXX11
inline void GetOrderInfoReq::set_order_id(::std::string&& value) {
  
  order_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ttmall.GetOrderInfoReq.order_id)
}
#endif
inline void GetOrderInfoReq::set_order_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ttmall.GetOrderInfoReq.order_id)
}
inline void GetOrderInfoReq::set_order_id(const char* value, size_t size) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ttmall.GetOrderInfoReq.order_id)
}
inline ::std::string* GetOrderInfoReq::mutable_order_id() {
  
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderInfoReq.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOrderInfoReq::release_order_id() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderInfoReq.order_id)
  
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOrderInfoReq::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    
  } else {
    
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderInfoReq.order_id)
}

// -------------------------------------------------------------------

// GetOrderInfoRep

// .ttmall.OrderInfo info = 1;
inline bool GetOrderInfoRep::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void GetOrderInfoRep::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::ttmall::OrderInfo& GetOrderInfoRep::info() const {
  // @@protoc_insertion_point(field_get:ttmall.GetOrderInfoRep.info)
  return info_ != NULL ? *info_
                         : *::ttmall::OrderInfo::internal_default_instance();
}
inline ::ttmall::OrderInfo* GetOrderInfoRep::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::ttmall::OrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:ttmall.GetOrderInfoRep.info)
  return info_;
}
inline ::ttmall::OrderInfo* GetOrderInfoRep::release_info() {
  // @@protoc_insertion_point(field_release:ttmall.GetOrderInfoRep.info)
  
  ::ttmall::OrderInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GetOrderInfoRep::set_allocated_info(::ttmall::OrderInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ttmall.GetOrderInfoRep.info)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ttmall

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ttmall::OptCartType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ttmall::OptCartType>() {
  return ::ttmall::OptCartType_descriptor();
}
template <> struct is_proto_enum< ::ttmall::ListOrderOpt> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ttmall::ListOrderOpt>() {
  return ::ttmall::ListOrderOpt_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_user_2eproto__INCLUDED
